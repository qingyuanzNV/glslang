hlsl.isfinite.frag
Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:7  Function Definition: test1(f1; ( temp bool)
0:7    Function Parameters: 
0:7      'v' ( in float)
0:?     Sequence
0:8      Branch: Return with expression
0:8        logical-and ( temp bool)
0:8          Negate conditional ( temp bool)
0:8            isnan ( temp bool)
0:8              'v' ( in float)
0:8          Sequence
0:8            move second child to first child ( temp float)
0:8              '@finitetmp' ( temp float)
0:8              'v' ( in float)
0:8            logical-and ( temp bool)
0:8              Negate conditional ( temp bool)
0:8                isnan ( temp bool)
0:8                  '@finitetmp' ( temp float)
0:8              Negate conditional ( temp bool)
0:8                isinf ( temp bool)
0:8                  '@finitetmp' ( temp float)
0:12  Function Definition: @main( ( temp 4-component vector of float)
0:12    Function Parameters: 
0:?     Sequence
0:13      Sequence
0:13        move second child to first child ( temp float)
0:13          '@finitetmp' ( temp float)
0:13          f: direct index for structure ( uniform float)
0:13            'anon@0' (layout( row_major std140) uniform block{ uniform float f,  uniform 2-component vector of float f2,  uniform 3-component vector of float f3})
0:13            Constant:
0:13              0 (const uint)
0:13        logical-and ( temp bool)
0:13          Negate conditional ( temp bool)
0:13            isnan ( temp bool)
0:13              '@finitetmp' ( temp float)
0:13          Negate conditional ( temp bool)
0:13            isinf ( temp bool)
0:13              '@finitetmp' ( temp float)
0:14      Sequence
0:14        move second child to first child ( temp 2-component vector of float)
0:14          '@finitetmp' ( temp 2-component vector of float)
0:14          f2: direct index for structure ( uniform 2-component vector of float)
0:14            'anon@0' (layout( row_major std140) uniform block{ uniform float f,  uniform 2-component vector of float f2,  uniform 3-component vector of float f3})
0:14            Constant:
0:14              1 (const uint)
0:14        logical-and ( temp 2-component vector of bool)
0:14          Negate conditional ( temp 2-component vector of bool)
0:14            isnan ( temp 2-component vector of bool)
0:14              '@finitetmp' ( temp 2-component vector of float)
0:14          Negate conditional ( temp 2-component vector of bool)
0:14            isinf ( temp 2-component vector of bool)
0:14              '@finitetmp' ( temp 2-component vector of float)
0:15      Sequence
0:15        move second child to first child ( temp 3-component vector of float)
0:15          '@finitetmp' ( temp 3-component vector of float)
0:15          f3: direct index for structure ( uniform 3-component vector of float)
0:15            'anon@0' (layout( row_major std140) uniform block{ uniform float f,  uniform 2-component vector of float f2,  uniform 3-component vector of float f3})
0:15            Constant:
0:15              2 (const uint)
0:15        logical-and ( temp 3-component vector of bool)
0:15          Negate conditional ( temp 3-component vector of bool)
0:15            isnan ( temp 3-component vector of bool)
0:15              '@finitetmp' ( temp 3-component vector of float)
0:15          Negate conditional ( temp 3-component vector of bool)
0:15            isinf ( temp 3-component vector of bool)
0:15              '@finitetmp' ( temp 3-component vector of float)
0:17      Branch: Return with expression
0:17        Constant:
0:17          0.000000
0:17          0.000000
0:17          0.000000
0:17          0.000000
0:12  Function Definition: main( ( temp void)
0:12    Function Parameters: 
0:?     Sequence
0:12      move second child to first child ( temp 4-component vector of float)
0:?         '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:12        Function Call: @main( ( temp 4-component vector of float)
0:?   Linker Objects
0:?     'anon@0' (layout( row_major std140) uniform block{ uniform float f,  uniform 2-component vector of float f2,  uniform 3-component vector of float f3})
0:?     '@entryPointOutput' (layout( location=0) out 4-component vector of float)


Linked fragment stage:


Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:7  Function Definition: test1(f1; ( temp bool)
0:7    Function Parameters: 
0:7      'v' ( in float)
0:?     Sequence
0:8      Branch: Return with expression
0:8        logical-and ( temp bool)
0:8          Negate conditional ( temp bool)
0:8            isnan ( temp bool)
0:8              'v' ( in float)
0:8          Sequence
0:8            move second child to first child ( temp float)
0:8              '@finitetmp' ( temp float)
0:8              'v' ( in float)
0:8            logical-and ( temp bool)
0:8              Negate conditional ( temp bool)
0:8                isnan ( temp bool)
0:8                  '@finitetmp' ( temp float)
0:8              Negate conditional ( temp bool)
0:8                isinf ( temp bool)
0:8                  '@finitetmp' ( temp float)
0:12  Function Definition: @main( ( temp 4-component vector of float)
0:12    Function Parameters: 
0:?     Sequence
0:13      Sequence
0:13        move second child to first child ( temp float)
0:13          '@finitetmp' ( temp float)
0:13          f: direct index for structure ( uniform float)
0:13            'anon@0' (layout( row_major std140) uniform block{ uniform float f,  uniform 2-component vector of float f2,  uniform 3-component vector of float f3})
0:13            Constant:
0:13              0 (const uint)
0:13        logical-and ( temp bool)
0:13          Negate conditional ( temp bool)
0:13            isnan ( temp bool)
0:13              '@finitetmp' ( temp float)
0:13          Negate conditional ( temp bool)
0:13            isinf ( temp bool)
0:13              '@finitetmp' ( temp float)
0:14      Sequence
0:14        move second child to first child ( temp 2-component vector of float)
0:14          '@finitetmp' ( temp 2-component vector of float)
0:14          f2: direct index for structure ( uniform 2-component vector of float)
0:14            'anon@0' (layout( row_major std140) uniform block{ uniform float f,  uniform 2-component vector of float f2,  uniform 3-component vector of float f3})
0:14            Constant:
0:14              1 (const uint)
0:14        logical-and ( temp 2-component vector of bool)
0:14          Negate conditional ( temp 2-component vector of bool)
0:14            isnan ( temp 2-component vector of bool)
0:14              '@finitetmp' ( temp 2-component vector of float)
0:14          Negate conditional ( temp 2-component vector of bool)
0:14            isinf ( temp 2-component vector of bool)
0:14              '@finitetmp' ( temp 2-component vector of float)
0:15      Sequence
0:15        move second child to first child ( temp 3-component vector of float)
0:15          '@finitetmp' ( temp 3-component vector of float)
0:15          f3: direct index for structure ( uniform 3-component vector of float)
0:15            'anon@0' (layout( row_major std140) uniform block{ uniform float f,  uniform 2-component vector of float f2,  uniform 3-component vector of float f3})
0:15            Constant:
0:15              2 (const uint)
0:15        logical-and ( temp 3-component vector of bool)
0:15          Negate conditional ( temp 3-component vector of bool)
0:15            isnan ( temp 3-component vector of bool)
0:15              '@finitetmp' ( temp 3-component vector of float)
0:15          Negate conditional ( temp 3-component vector of bool)
0:15            isinf ( temp 3-component vector of bool)
0:15              '@finitetmp' ( temp 3-component vector of float)
0:17      Branch: Return with expression
0:17        Constant:
0:17          0.000000
0:17          0.000000
0:17          0.000000
0:17          0.000000
0:12  Function Definition: main( ( temp void)
0:12    Function Parameters: 
0:?     Sequence
0:12      move second child to first child ( temp 4-component vector of float)
0:?         '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:12        Function Call: @main( ( temp 4-component vector of float)
0:?   Linker Objects
0:?     'anon@0' (layout( row_major std140) uniform block{ uniform float f,  uniform 2-component vector of float f2,  uniform 3-component vector of float f3})
0:?     '@entryPointOutput' (layout( location=0) out 4-component vector of float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 85

                              Capability Shader
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 54_1  "main" 59_2
                              ExecutionMode 54_1 OriginUpperLeft
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 54_2  "test1(f1;"
                              Name 55_1  "v"
                              Name 54_3  "@main("
                              Name 59_3  "@finitetmp"
                              Name 59_4  "@finitetmp"
                              Name 30_1  "$Global"
                              MemberName 30_1($Global) 0  "f"
                              MemberName 30_1($Global) 1  "f2"
                              MemberName 30_1($Global) 2  "f3"
                              Name 59_1  ""
                              Name 59_5  "@finitetmp"
                              Name 59_6  "@finitetmp"
                              Name 59_2  "@entryPointOutput"
                              Decorate 30_1($Global) Block
                              MemberDecorate 30_1($Global) 0 Offset 0
                              MemberDecorate 30_1($Global) 1 Offset 8
                              MemberDecorate 30_1($Global) 2 Offset 16
                              Decorate 59_1 Binding 0
                              Decorate 59_1 DescriptorSet 0
                              Decorate 59_2(@entryPointOutput) Location 0
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            32_1:             TypePointer Function 22_1(float)
            20_1:             TypeBool
            33_2:             TypeFunction 20_1(bool) 32_1(ptr)
            23_1:             TypeVector 22_1(float) 4
            33_3:             TypeFunction 23_1(fvec4)
            23_2:             TypeVector 22_1(float) 2
            23_3:             TypeVector 22_1(float) 3
   30_1($Global):             TypeStruct 22_1(float) 23_2(fvec2) 23_3(fvec3)
            32_2:             TypePointer Uniform 30_1($Global)
            59_1:   32_2(ptr) Variable Uniform
            21_1:             TypeInt 32 1
            43_1:   21_1(int) Constant 0
            32_3:             TypePointer Uniform 22_1(float)
            32_4:             TypePointer Function 23_2(fvec2)
            43_2:   21_1(int) Constant 1
            32_5:             TypePointer Uniform 23_2(fvec2)
            23_4:             TypeVector 20_1(bool) 2
            32_6:             TypePointer Function 23_3(fvec3)
            43_3:   21_1(int) Constant 2
            32_7:             TypePointer Uniform 23_3(fvec3)
            23_5:             TypeVector 20_1(bool) 3
            43_4: 22_1(float) Constant 0
            44_1: 23_1(fvec4) ConstantComposite 43_4 43_4 43_4 43_4
            32_8:             TypePointer Output 23_1(fvec4)
59_2(@entryPointOutput):   32_8(ptr) Variable Output
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
            57_1: 23_1(fvec4) FunctionCall 54_3(@main()
                              Store 59_2(@entryPointOutput) 57_1
                              Return
                              FunctionEnd
 54_2(test1(f1;):  20_1(bool) Function None 33_2
         55_1(v):   32_1(ptr) FunctionParameter
           248_2:             Label
59_3(@finitetmp):   32_1(ptr) Variable Function
            61_1: 22_1(float) Load 55_1(v)
           156_1:  20_1(bool) IsNan 61_1
           168_1:  20_1(bool) LogicalNot 156_1
            61_2: 22_1(float) Load 55_1(v)
                              Store 59_3(@finitetmp) 61_2
            61_3: 22_1(float) Load 59_3(@finitetmp)
           156_2:  20_1(bool) IsNan 61_3
           168_2:  20_1(bool) LogicalNot 156_2
            61_4: 22_1(float) Load 59_3(@finitetmp)
           157_1:  20_1(bool) IsInf 61_4
           168_3:  20_1(bool) LogicalNot 157_1
           167_1:  20_1(bool) LogicalAnd 168_2 168_3
           167_2:  20_1(bool) LogicalAnd 168_1 167_1
                              ReturnValue 167_2
                              FunctionEnd
    54_3(@main(): 23_1(fvec4) Function None 33_3
           248_3:             Label
59_4(@finitetmp):   32_1(ptr) Variable Function
59_5(@finitetmp):   32_4(ptr) Variable Function
59_6(@finitetmp):   32_6(ptr) Variable Function
            65_1:   32_3(ptr) AccessChain 59_1 43_1
            61_5: 22_1(float) Load 65_1
                              Store 59_4(@finitetmp) 61_5
            61_6: 22_1(float) Load 59_4(@finitetmp)
           156_3:  20_1(bool) IsNan 61_6
           168_4:  20_1(bool) LogicalNot 156_3
            61_7: 22_1(float) Load 59_4(@finitetmp)
           157_2:  20_1(bool) IsInf 61_7
           168_5:  20_1(bool) LogicalNot 157_2
           167_3:  20_1(bool) LogicalAnd 168_4 168_5
            65_2:   32_5(ptr) AccessChain 59_1 43_2
            61_8: 23_2(fvec2) Load 65_2
                              Store 59_5(@finitetmp) 61_8
            61_9: 23_2(fvec2) Load 59_5(@finitetmp)
           156_4: 23_4(bvec2) IsNan 61_9
           168_6: 23_4(bvec2) LogicalNot 156_4
           61_10: 23_2(fvec2) Load 59_5(@finitetmp)
           157_3: 23_4(bvec2) IsInf 61_10
           168_7: 23_4(bvec2) LogicalNot 157_3
           167_4: 23_4(bvec2) LogicalAnd 168_6 168_7
            65_3:   32_7(ptr) AccessChain 59_1 43_3
           61_11: 23_3(fvec3) Load 65_3
                              Store 59_6(@finitetmp) 61_11
           61_12: 23_3(fvec3) Load 59_6(@finitetmp)
           156_5: 23_5(bvec3) IsNan 61_12
           168_8: 23_5(bvec3) LogicalNot 156_5
           61_13: 23_3(fvec3) Load 59_6(@finitetmp)
           157_4: 23_5(bvec3) IsInf 61_13
           168_9: 23_5(bvec3) LogicalNot 157_4
           167_5: 23_5(bvec3) LogicalAnd 168_8 168_9
                              ReturnValue 44_1
                              FunctionEnd
