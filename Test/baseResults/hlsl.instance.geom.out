hlsl.instance.geom
Shader version: 500
invocations = 5
max_vertices = 3
input primitive = triangles
output primitive = triangle_strip
0:? Sequence
0:10  Function Definition: @GeometryShader(struct-VertexShaderOutput-vf4-vf41[3];struct-VertexShaderOutput-vf4-vf41;u1; ( temp void)
0:10    Function Parameters: 
0:10      'input' ( in 3-element array of structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:10      'output' ( out structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:10      'id' ( in uint)
0:?     Sequence
0:12      Sequence
0:12        move second child to first child ( temp int)
0:12          'i' ( temp int)
0:12          Constant:
0:12            0 (const int)
0:12        Loop with condition tested first: DontUnroll
0:12          Loop Condition
0:12          Compare Less Than ( temp bool)
0:12            'i' ( temp int)
0:12            Constant:
0:12              3 (const int)
0:12          Loop Body
0:?           Sequence
0:14            Sequence
0:14              Sequence
0:14                move second child to first child ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:14                  'flattenTemp' ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:14                  indirect index ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:14                    'input' ( in 3-element array of structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:14                    'i' ( temp int)
0:14                move second child to first child ( temp 4-component vector of float)
0:?                   'output.m_position' ( out 4-component vector of float Position)
0:14                  m_position: direct index for structure ( temp 4-component vector of float)
0:14                    'flattenTemp' ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:14                    Constant:
0:14                      0 (const int)
0:14                move second child to first child ( temp 4-component vector of float)
0:?                   'output.m_color' (layout( location=0) out 4-component vector of float)
0:14                  m_color: direct index for structure ( temp 4-component vector of float)
0:14                    'flattenTemp' ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:14                    Constant:
0:14                      1 (const int)
0:14              EmitVertex ( temp void)
0:12          Loop Terminal Expression
0:12          Pre-Increment ( temp int)
0:12            'i' ( temp int)
0:16      EndPrimitive ( temp void)
0:10  Function Definition: GeometryShader( ( temp void)
0:10    Function Parameters: 
0:?     Sequence
0:10      Sequence
0:10        move second child to first child ( temp 4-component vector of float)
0:10          m_position: direct index for structure ( temp 4-component vector of float)
0:10            direct index ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:?               'input' ( temp 3-element array of structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:10              Constant:
0:10                0 (const int)
0:10            Constant:
0:10              0 (const int)
0:10          direct index ( in 4-component vector of float Position)
0:?             'input.m_position' ( in 3-element array of 4-component vector of float Position)
0:10            Constant:
0:10              0 (const int)
0:10        move second child to first child ( temp 4-component vector of float)
0:10          m_color: direct index for structure ( temp 4-component vector of float)
0:10            direct index ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:?               'input' ( temp 3-element array of structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:10              Constant:
0:10                0 (const int)
0:10            Constant:
0:10              1 (const int)
0:10          direct index (layout( location=0) in 4-component vector of float)
0:?             'input.m_color' (layout( location=0) in 3-element array of 4-component vector of float)
0:10            Constant:
0:10              0 (const int)
0:10        move second child to first child ( temp 4-component vector of float)
0:10          m_position: direct index for structure ( temp 4-component vector of float)
0:10            direct index ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:?               'input' ( temp 3-element array of structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:10              Constant:
0:10                1 (const int)
0:10            Constant:
0:10              0 (const int)
0:10          direct index ( in 4-component vector of float Position)
0:?             'input.m_position' ( in 3-element array of 4-component vector of float Position)
0:10            Constant:
0:10              1 (const int)
0:10        move second child to first child ( temp 4-component vector of float)
0:10          m_color: direct index for structure ( temp 4-component vector of float)
0:10            direct index ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:?               'input' ( temp 3-element array of structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:10              Constant:
0:10                1 (const int)
0:10            Constant:
0:10              1 (const int)
0:10          direct index (layout( location=0) in 4-component vector of float)
0:?             'input.m_color' (layout( location=0) in 3-element array of 4-component vector of float)
0:10            Constant:
0:10              1 (const int)
0:10        move second child to first child ( temp 4-component vector of float)
0:10          m_position: direct index for structure ( temp 4-component vector of float)
0:10            direct index ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:?               'input' ( temp 3-element array of structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:10              Constant:
0:10                2 (const int)
0:10            Constant:
0:10              0 (const int)
0:10          direct index ( in 4-component vector of float Position)
0:?             'input.m_position' ( in 3-element array of 4-component vector of float Position)
0:10            Constant:
0:10              2 (const int)
0:10        move second child to first child ( temp 4-component vector of float)
0:10          m_color: direct index for structure ( temp 4-component vector of float)
0:10            direct index ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:?               'input' ( temp 3-element array of structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:10              Constant:
0:10                2 (const int)
0:10            Constant:
0:10              1 (const int)
0:10          direct index (layout( location=0) in 4-component vector of float)
0:?             'input.m_color' (layout( location=0) in 3-element array of 4-component vector of float)
0:10            Constant:
0:10              2 (const int)
0:10      move second child to first child ( temp uint)
0:?         'id' ( temp uint)
0:?         'id' ( in uint InvocationID)
0:10      Function Call: @GeometryShader(struct-VertexShaderOutput-vf4-vf41[3];struct-VertexShaderOutput-vf4-vf41;u1; ( temp void)
0:?         'input' ( temp 3-element array of structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:?         'output' ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:?         'id' ( temp uint)
0:?   Linker Objects
0:?     'input.m_position' ( in 3-element array of 4-component vector of float Position)
0:?     'input.m_color' (layout( location=0) in 3-element array of 4-component vector of float)
0:?     'id' ( in uint InvocationID)
0:?     'output.m_position' ( out 4-component vector of float Position)
0:?     'output.m_color' (layout( location=0) out 4-component vector of float)


Linked geometry stage:


Shader version: 500
invocations = 5
max_vertices = 3
input primitive = triangles
output primitive = triangle_strip
0:? Sequence
0:10  Function Definition: @GeometryShader(struct-VertexShaderOutput-vf4-vf41[3];struct-VertexShaderOutput-vf4-vf41;u1; ( temp void)
0:10    Function Parameters: 
0:10      'input' ( in 3-element array of structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:10      'output' ( out structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:10      'id' ( in uint)
0:?     Sequence
0:12      Sequence
0:12        move second child to first child ( temp int)
0:12          'i' ( temp int)
0:12          Constant:
0:12            0 (const int)
0:12        Loop with condition tested first: DontUnroll
0:12          Loop Condition
0:12          Compare Less Than ( temp bool)
0:12            'i' ( temp int)
0:12            Constant:
0:12              3 (const int)
0:12          Loop Body
0:?           Sequence
0:14            Sequence
0:14              Sequence
0:14                move second child to first child ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:14                  'flattenTemp' ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:14                  indirect index ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:14                    'input' ( in 3-element array of structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:14                    'i' ( temp int)
0:14                move second child to first child ( temp 4-component vector of float)
0:?                   'output.m_position' ( out 4-component vector of float Position)
0:14                  m_position: direct index for structure ( temp 4-component vector of float)
0:14                    'flattenTemp' ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:14                    Constant:
0:14                      0 (const int)
0:14                move second child to first child ( temp 4-component vector of float)
0:?                   'output.m_color' (layout( location=0) out 4-component vector of float)
0:14                  m_color: direct index for structure ( temp 4-component vector of float)
0:14                    'flattenTemp' ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:14                    Constant:
0:14                      1 (const int)
0:14              EmitVertex ( temp void)
0:12          Loop Terminal Expression
0:12          Pre-Increment ( temp int)
0:12            'i' ( temp int)
0:16      EndPrimitive ( temp void)
0:10  Function Definition: GeometryShader( ( temp void)
0:10    Function Parameters: 
0:?     Sequence
0:10      Sequence
0:10        move second child to first child ( temp 4-component vector of float)
0:10          m_position: direct index for structure ( temp 4-component vector of float)
0:10            direct index ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:?               'input' ( temp 3-element array of structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:10              Constant:
0:10                0 (const int)
0:10            Constant:
0:10              0 (const int)
0:10          direct index ( in 4-component vector of float Position)
0:?             'input.m_position' ( in 3-element array of 4-component vector of float Position)
0:10            Constant:
0:10              0 (const int)
0:10        move second child to first child ( temp 4-component vector of float)
0:10          m_color: direct index for structure ( temp 4-component vector of float)
0:10            direct index ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:?               'input' ( temp 3-element array of structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:10              Constant:
0:10                0 (const int)
0:10            Constant:
0:10              1 (const int)
0:10          direct index (layout( location=0) in 4-component vector of float)
0:?             'input.m_color' (layout( location=0) in 3-element array of 4-component vector of float)
0:10            Constant:
0:10              0 (const int)
0:10        move second child to first child ( temp 4-component vector of float)
0:10          m_position: direct index for structure ( temp 4-component vector of float)
0:10            direct index ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:?               'input' ( temp 3-element array of structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:10              Constant:
0:10                1 (const int)
0:10            Constant:
0:10              0 (const int)
0:10          direct index ( in 4-component vector of float Position)
0:?             'input.m_position' ( in 3-element array of 4-component vector of float Position)
0:10            Constant:
0:10              1 (const int)
0:10        move second child to first child ( temp 4-component vector of float)
0:10          m_color: direct index for structure ( temp 4-component vector of float)
0:10            direct index ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:?               'input' ( temp 3-element array of structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:10              Constant:
0:10                1 (const int)
0:10            Constant:
0:10              1 (const int)
0:10          direct index (layout( location=0) in 4-component vector of float)
0:?             'input.m_color' (layout( location=0) in 3-element array of 4-component vector of float)
0:10            Constant:
0:10              1 (const int)
0:10        move second child to first child ( temp 4-component vector of float)
0:10          m_position: direct index for structure ( temp 4-component vector of float)
0:10            direct index ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:?               'input' ( temp 3-element array of structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:10              Constant:
0:10                2 (const int)
0:10            Constant:
0:10              0 (const int)
0:10          direct index ( in 4-component vector of float Position)
0:?             'input.m_position' ( in 3-element array of 4-component vector of float Position)
0:10            Constant:
0:10              2 (const int)
0:10        move second child to first child ( temp 4-component vector of float)
0:10          m_color: direct index for structure ( temp 4-component vector of float)
0:10            direct index ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:?               'input' ( temp 3-element array of structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:10              Constant:
0:10                2 (const int)
0:10            Constant:
0:10              1 (const int)
0:10          direct index (layout( location=0) in 4-component vector of float)
0:?             'input.m_color' (layout( location=0) in 3-element array of 4-component vector of float)
0:10            Constant:
0:10              2 (const int)
0:10      move second child to first child ( temp uint)
0:?         'id' ( temp uint)
0:?         'id' ( in uint InvocationID)
0:10      Function Call: @GeometryShader(struct-VertexShaderOutput-vf4-vf41[3];struct-VertexShaderOutput-vf4-vf41;u1; ( temp void)
0:?         'input' ( temp 3-element array of structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:?         'output' ( temp structure{ temp 4-component vector of float m_position,  temp 4-component vector of float m_color})
0:?         'id' ( temp uint)
0:?   Linker Objects
0:?     'input.m_position' ( in 3-element array of 4-component vector of float Position)
0:?     'input.m_color' (layout( location=0) in 3-element array of 4-component vector of float)
0:?     'id' ( in uint InvocationID)
0:?     'output.m_position' ( out 4-component vector of float Position)
0:?     'output.m_color' (layout( location=0) out 4-component vector of float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 86

                              Capability Geometry
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Geometry 54_1  "GeometryShader" 59_1 59_2 59_3 59_4 59_5
                              ExecutionMode 54_1 Triangles
                              ExecutionMode 54_1 Invocations 5
                              ExecutionMode 54_1 OutputTriangleStrip
                              ExecutionMode 54_1 OutputVertices 3
                              Source HLSL 500
                              Name 54_1  "GeometryShader"
                              Name 30_1  "VertexShaderOutput"
                              MemberName 30_1(VertexShaderOutput) 0  "m_position"
                              MemberName 30_1(VertexShaderOutput) 1  "m_color"
                              Name 54_2  "@GeometryShader(struct-VertexShaderOutput-vf4-vf41[3];struct-VertexShaderOutput-vf4-vf41;u1;"
                              Name 55_1  "input"
                              Name 55_2  "output"
                              Name 55_3  "id"
                              Name 59_12  "i"
                              Name 59_13  "flattenTemp"
                              Name 59_1  "output.m_position"
                              Name 59_2  "output.m_color"
                              Name 59_6  "input"
                              Name 59_3  "input.m_position"
                              Name 59_4  "input.m_color"
                              Name 59_7  "id"
                              Name 59_5  "id"
                              Name 59_8  "output"
                              Name 59_9  "param"
                              Name 59_10  "param"
                              Name 59_11  "param"
                              Decorate 59_1(output.m_position) BuiltIn Position
                              Decorate 59_2(output.m_color) Location 0
                              Decorate 59_3(input.m_position) BuiltIn Position
                              Decorate 59_4(input.m_color) Location 0
                              Decorate 59_5(id) BuiltIn InvocationId
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
30_1(VertexShaderOutput):             TypeStruct 23_1(fvec4) 23_1(fvec4)
            21_1:             TypeInt 32 0
         uint(3):   21_1(int) Constant 3
            28_1:             TypeArray 30_1(VertexShaderOutput) uint(3)
            32_1:             TypePointer Function 28_1
            32_2:             TypePointer Function 30_1(VertexShaderOutput)
            32_3:             TypePointer Function 21_1(int)
            33_2:             TypeFunction 19_1 32_1(ptr) 32_2(ptr) 32_3(ptr)
            21_2:             TypeInt 32 1
            32_4:             TypePointer Function 21_2(int)
            43_1:   21_2(int) Constant 0
            43_2:   21_2(int) Constant 3
            20_1:             TypeBool
            32_5:             TypePointer Output 23_1(fvec4)
59_1(output.m_position):   32_5(ptr) Variable Output
            32_6:             TypePointer Function 23_1(fvec4)
59_2(output.m_color):   32_5(ptr) Variable Output
            43_3:   21_2(int) Constant 1
            28_2:             TypeArray 23_1(fvec4) uint(3)
            32_7:             TypePointer Input 28_2
59_3(input.m_position):   32_7(ptr) Variable Input
            32_8:             TypePointer Input 23_1(fvec4)
59_4(input.m_color):   32_7(ptr) Variable Input
            43_4:   21_2(int) Constant 2
            32_9:             TypePointer Input 21_1(int)
        59_5(id):   32_9(ptr) Variable Input
54_1(GeometryShader):        19_1 Function None 33_1
           248_1:             Label
     59_6(input):   32_1(ptr) Variable Function
        59_7(id):   32_3(ptr) Variable Function
    59_8(output):   32_2(ptr) Variable Function
     59_9(param):   32_1(ptr) Variable Function
    59_10(param):   32_2(ptr) Variable Function
    59_11(param):   32_3(ptr) Variable Function
            65_1:   32_8(ptr) AccessChain 59_3(input.m_position) 43_1
            61_1: 23_1(fvec4) Load 65_1
            65_2:   32_6(ptr) AccessChain 59_6(input) 43_1 43_1
                              Store 65_2 61_1
            65_3:   32_8(ptr) AccessChain 59_4(input.m_color) 43_1
            61_2: 23_1(fvec4) Load 65_3
            65_4:   32_6(ptr) AccessChain 59_6(input) 43_1 43_3
                              Store 65_4 61_2
            65_5:   32_8(ptr) AccessChain 59_3(input.m_position) 43_3
            61_3: 23_1(fvec4) Load 65_5
            65_6:   32_6(ptr) AccessChain 59_6(input) 43_3 43_1
                              Store 65_6 61_3
            65_7:   32_8(ptr) AccessChain 59_4(input.m_color) 43_3
            61_4: 23_1(fvec4) Load 65_7
            65_8:   32_6(ptr) AccessChain 59_6(input) 43_3 43_3
                              Store 65_8 61_4
            65_9:   32_8(ptr) AccessChain 59_3(input.m_position) 43_4
            61_5: 23_1(fvec4) Load 65_9
           65_10:   32_6(ptr) AccessChain 59_6(input) 43_4 43_1
                              Store 65_10 61_5
           65_11:   32_8(ptr) AccessChain 59_4(input.m_color) 43_4
            61_6: 23_1(fvec4) Load 65_11
           65_12:   32_6(ptr) AccessChain 59_6(input) 43_4 43_3
                              Store 65_12 61_6
            61_7:   21_1(int) Load 59_5(id)
                              Store 59_7(id) 61_7
            61_8:        28_1 Load 59_6(input)
                              Store 59_9(param) 61_8
            61_9:   21_1(int) Load 59_7(id)
                              Store 59_11(param) 61_9
            57_1:        19_1 FunctionCall 54_2(@GeometryShader(struct-VertexShaderOutput-vf4-vf41[3];struct-VertexShaderOutput-vf4-vf41;u1;) 59_9(param) 59_10(param) 59_11(param)
           61_10:30_1(VertexShaderOutput) Load 59_10(param)
                              Store 59_8(output) 61_10
                              Return
                              FunctionEnd
54_2(@GeometryShader(struct-VertexShaderOutput-vf4-vf41[3];struct-VertexShaderOutput-vf4-vf41;u1;):        19_1 Function None 33_2
     55_1(input):   32_1(ptr) FunctionParameter
    55_2(output):   32_2(ptr) FunctionParameter
        55_3(id):   32_3(ptr) FunctionParameter
           248_2:             Label
        59_12(i):   32_4(ptr) Variable Function
59_13(flattenTemp):   32_2(ptr) Variable Function
                              Store 59_12(i) 43_1
                              Branch 248_3
           248_3:             Label
                              LoopMerge 248_7 248_6 DontUnroll 
                              Branch 248_4
           248_4:             Label
           61_11:   21_2(int) Load 59_12(i)
           177_1:  20_1(bool) SLessThan 61_11 43_2
                              BranchConditional 177_1 248_5 248_7
           248_5:               Label
           61_12:   21_2(int)   Load 59_12(i)
           65_13:   32_2(ptr)   AccessChain 55_1(input) 61_12
           61_13:30_1(VertexShaderOutput)   Load 65_13
                                Store 59_13(flattenTemp) 61_13
           65_14:   32_6(ptr)   AccessChain 59_13(flattenTemp) 43_1
           61_14: 23_1(fvec4)   Load 65_14
                                Store 59_1(output.m_position) 61_14
           65_15:   32_6(ptr)   AccessChain 59_13(flattenTemp) 43_3
           61_15: 23_1(fvec4)   Load 65_15
                                Store 59_2(output.m_color) 61_15
                                EmitVertex
                                Branch 248_6
           248_6:               Label
           61_16:   21_2(int)   Load 59_12(i)
           128_1:   21_2(int)   IAdd 61_16 43_3
                                Store 59_12(i) 128_1
                                Branch 248_3
           248_7:             Label
                              EndPrimitive
                              Return
                              FunctionEnd
