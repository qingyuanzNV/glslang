hlsl.this.frag
Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:1  Sequence
0:1    move second child to first child ( temp 2-component vector of float)
0:1      'var' ( global 2-component vector of float)
0:1      Constant:
0:1        1.000000
0:1        2.000000
0:6  Function Definition: type1::memFun1(vi3; ( temp int)
0:6    Function Parameters: 
0:6      '@this' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:6      'var' ( in 3-component vector of int)
0:?     Sequence
0:7      Branch: Return with expression
0:7        add ( temp int)
0:7          add ( temp int)
0:7            direct index ( temp int)
0:7              'var' ( in 3-component vector of int)
0:7              Constant:
0:7                2 (const int)
0:7            var: direct index for structure ( temp int)
0:7              '@this' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:7              Constant:
0:7                1 (const int)
0:7          var2: direct index for structure ( temp int)
0:7            '@this' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:7            Constant:
0:7              2 (const uint)
0:10  Function Definition: type1::memFun2(i1; ( temp int)
0:10    Function Parameters: 
0:10      '@this' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:10      'a' ( in int)
0:?     Sequence
0:11      Sequence
0:11        move second child to first child ( temp 3-component vector of int)
0:11          'var' ( temp 3-component vector of int)
0:11          Constant:
0:11            1 (const int)
0:11            2 (const int)
0:11            3 (const int)
0:12      Branch: Return with expression
0:12        add ( temp int)
0:12          add ( temp int)
0:12            direct index ( temp int)
0:12              'var' ( temp 3-component vector of int)
0:12              Constant:
0:12                2 (const int)
0:12            Convert float to int ( temp int)
0:12              direct index ( temp float)
0:12                bar: direct index for structure ( temp 2-component vector of float)
0:12                  '@this' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:12                  Constant:
0:12                    0 (const uint)
0:12                Constant:
0:12                  1 (const int)
0:12          var2: direct index for structure ( temp int)
0:12            '@this' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:12            Constant:
0:12              2 (const int)
0:20  Function Definition: @main( ( temp 4-component vector of float)
0:20    Function Parameters: 
0:?     Sequence
0:22      move second child to first child ( temp 2-component vector of float)
0:22        bar: direct index for structure ( temp 2-component vector of float)
0:22          'T' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:22          Constant:
0:22            0 (const int)
0:22        'var' ( global 2-component vector of float)
0:23      move second child to first child ( temp int)
0:23        var: direct index for structure ( temp int)
0:23          'T' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:23          Constant:
0:23            1 (const int)
0:23        Constant:
0:23          7 (const int)
0:24      move second child to first child ( temp int)
0:24        var2: direct index for structure ( temp int)
0:24          'T' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:24          Constant:
0:24            2 (const int)
0:24        Constant:
0:24          9 (const int)
0:25      Sequence
0:25        move second child to first child ( temp int)
0:25          'i' ( temp int)
0:25          Function Call: type1::memFun1(vi3; ( temp int)
0:25            'T' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:25            Constant:
0:25              10 (const int)
0:25              11 (const int)
0:25              12 (const int)
0:26      add second child into first child ( temp int)
0:26        'i' ( temp int)
0:26        Function Call: type1::memFun2(i1; ( temp int)
0:26          'T' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:26          Constant:
0:26            17 (const int)
0:28      Branch: Return with expression
0:28        Construct vec4 ( temp 4-component vector of float)
0:28          Convert int to float ( temp float)
0:28            'i' ( temp int)
0:28          Convert int to float ( temp float)
0:28            'i' ( temp int)
0:28          Convert int to float ( temp float)
0:28            'i' ( temp int)
0:28          Convert int to float ( temp float)
0:28            'i' ( temp int)
0:20  Function Definition: main( ( temp void)
0:20    Function Parameters: 
0:?     Sequence
0:20      move second child to first child ( temp 4-component vector of float)
0:?         '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:20        Function Call: @main( ( temp 4-component vector of float)
0:?   Linker Objects
0:?     'var' ( global 2-component vector of float)
0:?     '@entryPointOutput' (layout( location=0) out 4-component vector of float)


Linked fragment stage:


Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:1  Sequence
0:1    move second child to first child ( temp 2-component vector of float)
0:1      'var' ( global 2-component vector of float)
0:1      Constant:
0:1        1.000000
0:1        2.000000
0:6  Function Definition: type1::memFun1(vi3; ( temp int)
0:6    Function Parameters: 
0:6      '@this' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:6      'var' ( in 3-component vector of int)
0:?     Sequence
0:7      Branch: Return with expression
0:7        add ( temp int)
0:7          add ( temp int)
0:7            direct index ( temp int)
0:7              'var' ( in 3-component vector of int)
0:7              Constant:
0:7                2 (const int)
0:7            var: direct index for structure ( temp int)
0:7              '@this' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:7              Constant:
0:7                1 (const int)
0:7          var2: direct index for structure ( temp int)
0:7            '@this' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:7            Constant:
0:7              2 (const uint)
0:10  Function Definition: type1::memFun2(i1; ( temp int)
0:10    Function Parameters: 
0:10      '@this' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:10      'a' ( in int)
0:?     Sequence
0:11      Sequence
0:11        move second child to first child ( temp 3-component vector of int)
0:11          'var' ( temp 3-component vector of int)
0:11          Constant:
0:11            1 (const int)
0:11            2 (const int)
0:11            3 (const int)
0:12      Branch: Return with expression
0:12        add ( temp int)
0:12          add ( temp int)
0:12            direct index ( temp int)
0:12              'var' ( temp 3-component vector of int)
0:12              Constant:
0:12                2 (const int)
0:12            Convert float to int ( temp int)
0:12              direct index ( temp float)
0:12                bar: direct index for structure ( temp 2-component vector of float)
0:12                  '@this' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:12                  Constant:
0:12                    0 (const uint)
0:12                Constant:
0:12                  1 (const int)
0:12          var2: direct index for structure ( temp int)
0:12            '@this' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:12            Constant:
0:12              2 (const int)
0:20  Function Definition: @main( ( temp 4-component vector of float)
0:20    Function Parameters: 
0:?     Sequence
0:22      move second child to first child ( temp 2-component vector of float)
0:22        bar: direct index for structure ( temp 2-component vector of float)
0:22          'T' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:22          Constant:
0:22            0 (const int)
0:22        'var' ( global 2-component vector of float)
0:23      move second child to first child ( temp int)
0:23        var: direct index for structure ( temp int)
0:23          'T' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:23          Constant:
0:23            1 (const int)
0:23        Constant:
0:23          7 (const int)
0:24      move second child to first child ( temp int)
0:24        var2: direct index for structure ( temp int)
0:24          'T' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:24          Constant:
0:24            2 (const int)
0:24        Constant:
0:24          9 (const int)
0:25      Sequence
0:25        move second child to first child ( temp int)
0:25          'i' ( temp int)
0:25          Function Call: type1::memFun1(vi3; ( temp int)
0:25            'T' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:25            Constant:
0:25              10 (const int)
0:25              11 (const int)
0:25              12 (const int)
0:26      add second child into first child ( temp int)
0:26        'i' ( temp int)
0:26        Function Call: type1::memFun2(i1; ( temp int)
0:26          'T' ( temp structure{ temp 2-component vector of float bar,  temp int var,  temp int var2})
0:26          Constant:
0:26            17 (const int)
0:28      Branch: Return with expression
0:28        Construct vec4 ( temp 4-component vector of float)
0:28          Convert int to float ( temp float)
0:28            'i' ( temp int)
0:28          Convert int to float ( temp float)
0:28            'i' ( temp int)
0:28          Convert int to float ( temp float)
0:28            'i' ( temp int)
0:28          Convert int to float ( temp float)
0:28            'i' ( temp int)
0:20  Function Definition: main( ( temp void)
0:20    Function Parameters: 
0:?     Sequence
0:20      move second child to first child ( temp 4-component vector of float)
0:?         '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:20        Function Call: @main( ( temp 4-component vector of float)
0:?   Linker Objects
0:?     'var' ( global 2-component vector of float)
0:?     '@entryPointOutput' (layout( location=0) out 4-component vector of float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 98

                              Capability Shader
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 54_1  "main" 59_2
                              ExecutionMode 54_1 OriginUpperLeft
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 30_1  "type1"
                              MemberName 30_1(type1) 0  "bar"
                              MemberName 30_1(type1) 1  "var"
                              MemberName 30_1(type1) 2  "var2"
                              Name 54_2  "type1::memFun1(vi3;"
                              Name 55_1  "@this"
                              Name 55_2  "var"
                              Name 54_3  "type1::memFun2(i1;"
                              Name 55_3  "@this"
                              Name 55_4  "a"
                              Name 54_4  "@main("
                              Name 59_1  "var"
                              Name 59_3  "var"
                              Name 59_4  "T"
                              Name 59_5  "i"
                              Name 59_6  "param"
                              Name 59_7  "param"
                              Name 59_2  "@entryPointOutput"
                              Decorate 59_2(@entryPointOutput) Location 0
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 2
            21_1:             TypeInt 32 1
     30_1(type1):             TypeStruct 23_1(fvec2) 21_1(int) 21_1(int)
            32_1:             TypePointer Function 30_1(type1)
            23_2:             TypeVector 21_1(int) 3
            32_2:             TypePointer Function 23_2(ivec3)
            33_2:             TypeFunction 21_1(int) 32_1(ptr) 32_2(ptr)
            32_3:             TypePointer Function 21_1(int)
            33_3:             TypeFunction 21_1(int) 32_1(ptr) 32_3(ptr)
            23_3:             TypeVector 22_1(float) 4
            33_4:             TypeFunction 23_3(fvec4)
            32_4:             TypePointer Private 23_1(fvec2)
       59_1(var):   32_4(ptr) Variable Private
            43_1: 22_1(float) Constant 1065353216
            43_2: 22_1(float) Constant 1073741824
            44_1: 23_1(fvec2) ConstantComposite 43_1 43_2
            21_2:             TypeInt 32 0
         uint(2):   21_2(int) Constant 2
            43_3:   21_1(int) Constant 1
            43_4:   21_1(int) Constant 2
            43_5:   21_1(int) Constant 3
            44_2: 23_2(ivec3) ConstantComposite 43_3 43_4 43_5
            43_6:   21_1(int) Constant 0
         uint(1):   21_2(int) Constant 1
            32_5:             TypePointer Function 22_1(float)
            32_6:             TypePointer Function 23_1(fvec2)
            43_7:   21_1(int) Constant 7
            43_8:   21_1(int) Constant 9
            43_9:   21_1(int) Constant 10
           43_10:   21_1(int) Constant 11
           43_11:   21_1(int) Constant 12
            44_3: 23_2(ivec3) ConstantComposite 43_9 43_10 43_11
           43_12:   21_1(int) Constant 17
            32_7:             TypePointer Output 23_3(fvec4)
59_2(@entryPointOutput):   32_7(ptr) Variable Output
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
                              Store 59_1(var) 44_1
            57_1: 23_3(fvec4) FunctionCall 54_4(@main()
                              Store 59_2(@entryPointOutput) 57_1
                              Return
                              FunctionEnd
54_2(type1::memFun1(vi3;):   21_1(int) Function None 33_2
     55_1(@this):   32_1(ptr) FunctionParameter
       55_2(var):   32_2(ptr) FunctionParameter
           248_2:             Label
            65_1:   32_3(ptr) AccessChain 55_2(var) uint(2)
            61_1:   21_1(int) Load 65_1
            65_2:   32_3(ptr) AccessChain 55_1(@this) 43_3
            61_2:   21_1(int) Load 65_2
           128_1:   21_1(int) IAdd 61_1 61_2
            65_3:   32_3(ptr) AccessChain 55_1(@this) 43_4
            61_3:   21_1(int) Load 65_3
           128_2:   21_1(int) IAdd 128_1 61_3
                              ReturnValue 128_2
                              FunctionEnd
54_3(type1::memFun2(i1;):   21_1(int) Function None 33_3
     55_3(@this):   32_1(ptr) FunctionParameter
         55_4(a):   32_3(ptr) FunctionParameter
           248_3:             Label
       59_3(var):   32_2(ptr) Variable Function
                              Store 59_3(var) 44_2
            65_4:   32_3(ptr) AccessChain 59_3(var) uint(2)
            61_4:   21_1(int) Load 65_4
            65_5:   32_5(ptr) AccessChain 55_3(@this) 43_6 uint(1)
            61_5: 22_1(float) Load 65_5
           110_1:   21_1(int) ConvertFToS 61_5
           128_3:   21_1(int) IAdd 61_4 110_1
            65_6:   32_3(ptr) AccessChain 55_3(@this) 43_4
            61_6:   21_1(int) Load 65_6
           128_4:   21_1(int) IAdd 128_3 61_6
                              ReturnValue 128_4
                              FunctionEnd
    54_4(@main(): 23_3(fvec4) Function None 33_4
           248_4:             Label
         59_4(T):   32_1(ptr) Variable Function
         59_5(i):   32_3(ptr) Variable Function
     59_6(param):   32_2(ptr) Variable Function
     59_7(param):   32_3(ptr) Variable Function
            61_7: 23_1(fvec2) Load 59_1(var)
            65_7:   32_6(ptr) AccessChain 59_4(T) 43_6
                              Store 65_7 61_7
            65_8:   32_3(ptr) AccessChain 59_4(T) 43_3
                              Store 65_8 43_7
            65_9:   32_3(ptr) AccessChain 59_4(T) 43_4
                              Store 65_9 43_8
                              Store 59_6(param) 44_3
            57_2:   21_1(int) FunctionCall 54_2(type1::memFun1(vi3;) 59_4(T) 59_6(param)
                              Store 59_5(i) 57_2
                              Store 59_7(param) 43_12
            57_3:   21_1(int) FunctionCall 54_3(type1::memFun2(i1;) 59_4(T) 59_7(param)
            61_8:   21_1(int) Load 59_5(i)
           128_5:   21_1(int) IAdd 61_8 57_3
                              Store 59_5(i) 128_5
            61_9:   21_1(int) Load 59_5(i)
           111_1: 22_1(float) ConvertSToF 61_9
           61_10:   21_1(int) Load 59_5(i)
           111_2: 22_1(float) ConvertSToF 61_10
           61_11:   21_1(int) Load 59_5(i)
           111_3: 22_1(float) ConvertSToF 61_11
           61_12:   21_1(int) Load 59_5(i)
           111_4: 22_1(float) ConvertSToF 61_12
            80_1: 23_3(fvec4) CompositeConstruct 111_1 111_2 111_3 111_4
                              ReturnValue 80_1
                              FunctionEnd
