hlsl.specConstant.frag
Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:6  Function Definition: @main( ( temp 4-component vector of float)
0:6    Function Parameters: 
0:?     Sequence
0:8      Sequence
0:8        move second child to first child ( temp uint)
0:8          'i' ( temp uint)
0:8          Constant:
0:8            0 (const uint)
0:8        Loop with condition tested first
0:8          Loop Condition
0:8          Compare Less Than ( temp bool)
0:8            'i' ( temp uint)
0:8            indirect index ( const uint)
0:8              Constant:
0:8                10 (const uint)
0:8                20 (const uint)
0:8                30 (const uint)
0:8                40 (const uint)
0:8              'index' ( specialization-constant const uint)
0:8                2 (const uint)
0:8          Loop Body
0:9          move second child to first child ( temp 4-component vector of float)
0:9            'r' ( temp 4-component vector of float)
0:9            Construct vec4 ( temp 4-component vector of float)
0:9              Convert uint to float ( temp float)
0:9                'i' ( temp uint)
0:8          Loop Terminal Expression
0:8          Post-Increment ( temp uint)
0:8            'i' ( temp uint)
0:11      add second child into first child ( temp 4-component vector of float)
0:11        'r' ( temp 4-component vector of float)
0:11        Convert uint to float ( temp float)
0:11          add ( specialization-constant const uint)
0:11            'index' ( specialization-constant const uint)
0:11              2 (const uint)
0:11            'index' ( specialization-constant const uint)
0:11              2 (const uint)
0:12      add second child into first child ( temp 4-component vector of float)
0:12        'r' ( temp 4-component vector of float)
0:12        Convert uint to float ( temp float)
0:12          component-wise multiply ( specialization-constant const uint)
0:12            Constant:
0:12              2 (const uint)
0:12            'index' ( specialization-constant const uint)
0:12              2 (const uint)
0:14      Branch: Return with expression
0:14        'r' ( temp 4-component vector of float)
0:6  Function Definition: main( ( temp void)
0:6    Function Parameters: 
0:?     Sequence
0:6      move second child to first child ( temp 4-component vector of float)
0:?         '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:6        Function Call: @main( ( temp 4-component vector of float)
0:?   Linker Objects
0:?     'index' ( specialization-constant const uint)
0:?       2 (const uint)
0:?     'array' ( const 4-element array of uint)
0:?       10 (const uint)
0:?       20 (const uint)
0:?       30 (const uint)
0:?       40 (const uint)
0:?     '@entryPointOutput' (layout( location=0) out 4-component vector of float)


Linked fragment stage:


Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:6  Function Definition: @main( ( temp 4-component vector of float)
0:6    Function Parameters: 
0:?     Sequence
0:8      Sequence
0:8        move second child to first child ( temp uint)
0:8          'i' ( temp uint)
0:8          Constant:
0:8            0 (const uint)
0:8        Loop with condition tested first
0:8          Loop Condition
0:8          Compare Less Than ( temp bool)
0:8            'i' ( temp uint)
0:8            indirect index ( const uint)
0:8              Constant:
0:8                10 (const uint)
0:8                20 (const uint)
0:8                30 (const uint)
0:8                40 (const uint)
0:8              'index' ( specialization-constant const uint)
0:8                2 (const uint)
0:8          Loop Body
0:9          move second child to first child ( temp 4-component vector of float)
0:9            'r' ( temp 4-component vector of float)
0:9            Construct vec4 ( temp 4-component vector of float)
0:9              Convert uint to float ( temp float)
0:9                'i' ( temp uint)
0:8          Loop Terminal Expression
0:8          Post-Increment ( temp uint)
0:8            'i' ( temp uint)
0:11      add second child into first child ( temp 4-component vector of float)
0:11        'r' ( temp 4-component vector of float)
0:11        Convert uint to float ( temp float)
0:11          add ( specialization-constant const uint)
0:11            'index' ( specialization-constant const uint)
0:11              2 (const uint)
0:11            'index' ( specialization-constant const uint)
0:11              2 (const uint)
0:12      add second child into first child ( temp 4-component vector of float)
0:12        'r' ( temp 4-component vector of float)
0:12        Convert uint to float ( temp float)
0:12          component-wise multiply ( specialization-constant const uint)
0:12            Constant:
0:12              2 (const uint)
0:12            'index' ( specialization-constant const uint)
0:12              2 (const uint)
0:14      Branch: Return with expression
0:14        'r' ( temp 4-component vector of float)
0:6  Function Definition: main( ( temp void)
0:6    Function Parameters: 
0:?     Sequence
0:6      move second child to first child ( temp 4-component vector of float)
0:?         '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:6        Function Call: @main( ( temp 4-component vector of float)
0:?   Linker Objects
0:?     'index' ( specialization-constant const uint)
0:?       2 (const uint)
0:?     'array' ( const 4-element array of uint)
0:?       10 (const uint)
0:?       20 (const uint)
0:?       30 (const uint)
0:?       40 (const uint)
0:?     '@entryPointOutput' (layout( location=0) out 4-component vector of float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 61

                              Capability Shader
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 54_1  "main" 59_1
                              ExecutionMode 54_1 OriginUpperLeft
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 54_2  "@main("
                              Name 59_2  "i"
                              Name 50_1  "index"
                              Name 59_3  "indexable"
                              Name 59_4  "r"
                              Name 59_1  "@entryPointOutput"
                              Decorate 50_1(index) SpecId 0
                              Decorate 59_1(@entryPointOutput) Location 0
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
            33_2:             TypeFunction 23_1(fvec4)
            21_1:             TypeInt 32 0
            32_1:             TypePointer Function 21_1(int)
         uint(0):   21_1(int) Constant 0
         uint(4):   21_1(int) Constant 4
            28_1:             TypeArray 21_1(int) uint(4)
        uint(10):   21_1(int) Constant 10
        uint(20):   21_1(int) Constant 20
        uint(30):   21_1(int) Constant 30
        uint(40):   21_1(int) Constant 40
            44_1:        28_1 ConstantComposite uint(10) uint(20) uint(30) uint(40)
     50_1(index):   21_1(int) SpecConstant 2
            32_2:             TypePointer Function 28_1
            20_1:             TypeBool
            32_3:             TypePointer Function 23_1(fvec4)
            21_2:             TypeInt 32 1
            43_1:   21_2(int) Constant 1
            52_1:   21_1(int) SpecConstantOp 128 50_1(index) 50_1(index)
         uint(2):   21_1(int) Constant 2
            52_2:   21_1(int) SpecConstantOp 132 uint(2) 50_1(index)
            32_4:             TypePointer Output 23_1(fvec4)
59_1(@entryPointOutput):   32_4(ptr) Variable Output
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
            57_1: 23_1(fvec4) FunctionCall 54_2(@main()
                              Store 59_1(@entryPointOutput) 57_1
                              Return
                              FunctionEnd
    54_2(@main(): 23_1(fvec4) Function None 33_2
           248_2:             Label
         59_2(i):   32_1(ptr) Variable Function
 59_3(indexable):   32_2(ptr) Variable Function
         59_4(r):   32_3(ptr) Variable Function
                              Store 59_2(i) uint(0)
                              Branch 248_3
           248_3:             Label
                              LoopMerge 248_7 248_6 None
                              Branch 248_4
           248_4:             Label
            61_1:   21_1(int) Load 59_2(i)
                              Store 59_3(indexable) 44_1
            65_1:   32_1(ptr) AccessChain 59_3(indexable) 50_1(index)
            61_2:   21_1(int) Load 65_1
           176_1:  20_1(bool) ULessThan 61_1 61_2
                              BranchConditional 176_1 248_5 248_7
           248_5:               Label
            61_3:   21_1(int)   Load 59_2(i)
           112_1: 22_1(float)   ConvertUToF 61_3
            80_1: 23_1(fvec4)   CompositeConstruct 112_1 112_1 112_1 112_1
                                Store 59_4(r) 80_1
                                Branch 248_6
           248_6:               Label
            61_4:   21_1(int)   Load 59_2(i)
           128_1:   21_1(int)   IAdd 61_4 43_1
                                Store 59_2(i) 128_1
                                Branch 248_3
           248_7:             Label
           112_2: 22_1(float) ConvertUToF 52_1
            61_5: 23_1(fvec4) Load 59_4(r)
            80_2: 23_1(fvec4) CompositeConstruct 112_2 112_2 112_2 112_2
           129_1: 23_1(fvec4) FAdd 61_5 80_2
                              Store 59_4(r) 129_1
           112_3: 22_1(float) ConvertUToF 52_2
            61_6: 23_1(fvec4) Load 59_4(r)
            80_3: 23_1(fvec4) CompositeConstruct 112_3 112_3 112_3 112_3
           129_2: 23_1(fvec4) FAdd 61_6 80_3
                              Store 59_4(r) 129_2
            61_7: 23_1(fvec4) Load 59_4(r)
                              ReturnValue 61_7
                              FunctionEnd
