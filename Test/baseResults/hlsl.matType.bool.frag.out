hlsl.matType.bool.frag
Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:3  Function Definition: TestBoolMatTypes( ( temp void)
0:3    Function Parameters: 
0:?     Sequence
0:25      Sequence
0:25        move second child to first child ( temp 1X1 matrix of bool)
0:25          'r00' ( temp 1X1 matrix of bool)
0:25          transpose ( temp 1X1 matrix of bool)
0:25            'b1x1' ( temp 1X1 matrix of bool)
0:26      Sequence
0:26        move second child to first child ( temp 1X2 matrix of bool)
0:26          'r01' ( temp 1X2 matrix of bool)
0:26          transpose ( temp 1X2 matrix of bool)
0:26            'b2x1' ( temp 2X1 matrix of bool)
0:27      Sequence
0:27        move second child to first child ( temp 1X3 matrix of bool)
0:27          'r02' ( temp 1X3 matrix of bool)
0:27          transpose ( temp 1X3 matrix of bool)
0:27            'b3x1' ( temp 3X1 matrix of bool)
0:28      Sequence
0:28        move second child to first child ( temp 1X4 matrix of bool)
0:28          'r03' ( temp 1X4 matrix of bool)
0:28          transpose ( temp 1X4 matrix of bool)
0:28            'b4x1' ( temp 4X1 matrix of bool)
0:30      Sequence
0:30        move second child to first child ( temp 2X1 matrix of bool)
0:30          'r10' ( temp 2X1 matrix of bool)
0:30          transpose ( temp 2X1 matrix of bool)
0:30            'b1x2' ( temp 1X2 matrix of bool)
0:31      Sequence
0:31        move second child to first child ( temp 2X2 matrix of bool)
0:31          'r11' ( temp 2X2 matrix of bool)
0:31          transpose ( temp 2X2 matrix of bool)
0:31            'b2x2' ( temp 2X2 matrix of bool)
0:32      Sequence
0:32        move second child to first child ( temp 2X3 matrix of bool)
0:32          'r12' ( temp 2X3 matrix of bool)
0:32          transpose ( temp 2X3 matrix of bool)
0:32            'b3x2' ( temp 3X2 matrix of bool)
0:33      Sequence
0:33        move second child to first child ( temp 2X4 matrix of bool)
0:33          'r13' ( temp 2X4 matrix of bool)
0:33          transpose ( temp 2X4 matrix of bool)
0:33            'b4x2' ( temp 4X2 matrix of bool)
0:35      Sequence
0:35        move second child to first child ( temp 3X1 matrix of bool)
0:35          'r20' ( temp 3X1 matrix of bool)
0:35          transpose ( temp 3X1 matrix of bool)
0:35            'b1x3' ( temp 1X3 matrix of bool)
0:36      Sequence
0:36        move second child to first child ( temp 3X2 matrix of bool)
0:36          'r21' ( temp 3X2 matrix of bool)
0:36          transpose ( temp 3X2 matrix of bool)
0:36            'b2x3' ( temp 2X3 matrix of bool)
0:37      Sequence
0:37        move second child to first child ( temp 3X3 matrix of bool)
0:37          'r22' ( temp 3X3 matrix of bool)
0:37          transpose ( temp 3X3 matrix of bool)
0:37            'b3x3' ( temp 3X3 matrix of bool)
0:38      Sequence
0:38        move second child to first child ( temp 3X4 matrix of bool)
0:38          'r23' ( temp 3X4 matrix of bool)
0:38          transpose ( temp 3X4 matrix of bool)
0:38            'b4x3' ( temp 4X3 matrix of bool)
0:40      Sequence
0:40        move second child to first child ( temp 4X1 matrix of bool)
0:40          'r30' ( temp 4X1 matrix of bool)
0:40          transpose ( temp 4X1 matrix of bool)
0:40            'b1x4' ( temp 1X4 matrix of bool)
0:41      Sequence
0:41        move second child to first child ( temp 4X2 matrix of bool)
0:41          'r31' ( temp 4X2 matrix of bool)
0:41          transpose ( temp 4X2 matrix of bool)
0:41            'b2x4' ( temp 2X4 matrix of bool)
0:42      Sequence
0:42        move second child to first child ( temp 4X3 matrix of bool)
0:42          'r32' ( temp 4X3 matrix of bool)
0:42          transpose ( temp 4X3 matrix of bool)
0:42            'b3x4' ( temp 3X4 matrix of bool)
0:43      Sequence
0:43        move second child to first child ( temp 4X4 matrix of bool)
0:43          'r33' ( temp 4X4 matrix of bool)
0:43          transpose ( temp 4X4 matrix of bool)
0:43            'b4x4' ( temp 4X4 matrix of bool)
0:49  Function Definition: @main( ( temp structure{ temp 4-component vector of float color})
0:49    Function Parameters: 
0:?     Sequence
0:51      move second child to first child ( temp 4-component vector of float)
0:51        color: direct index for structure ( temp 4-component vector of float)
0:51          'ps_output' ( temp structure{ temp 4-component vector of float color})
0:51          Constant:
0:51            0 (const int)
0:51        Constant:
0:51          0.000000
0:51          0.000000
0:51          0.000000
0:51          0.000000
0:52      Branch: Return with expression
0:52        'ps_output' ( temp structure{ temp 4-component vector of float color})
0:49  Function Definition: main( ( temp void)
0:49    Function Parameters: 
0:?     Sequence
0:49      Sequence
0:49        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.color' (layout( location=0) out 4-component vector of float)
0:49          color: direct index for structure ( temp 4-component vector of float)
0:49            Function Call: @main( ( temp structure{ temp 4-component vector of float color})
0:49            Constant:
0:49              0 (const int)
0:?   Linker Objects
0:?     '@entryPointOutput.color' (layout( location=0) out 4-component vector of float)


Linked fragment stage:


Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:3  Function Definition: TestBoolMatTypes( ( temp void)
0:3    Function Parameters: 
0:?     Sequence
0:25      Sequence
0:25        move second child to first child ( temp 1X1 matrix of bool)
0:25          'r00' ( temp 1X1 matrix of bool)
0:25          transpose ( temp 1X1 matrix of bool)
0:25            'b1x1' ( temp 1X1 matrix of bool)
0:26      Sequence
0:26        move second child to first child ( temp 1X2 matrix of bool)
0:26          'r01' ( temp 1X2 matrix of bool)
0:26          transpose ( temp 1X2 matrix of bool)
0:26            'b2x1' ( temp 2X1 matrix of bool)
0:27      Sequence
0:27        move second child to first child ( temp 1X3 matrix of bool)
0:27          'r02' ( temp 1X3 matrix of bool)
0:27          transpose ( temp 1X3 matrix of bool)
0:27            'b3x1' ( temp 3X1 matrix of bool)
0:28      Sequence
0:28        move second child to first child ( temp 1X4 matrix of bool)
0:28          'r03' ( temp 1X4 matrix of bool)
0:28          transpose ( temp 1X4 matrix of bool)
0:28            'b4x1' ( temp 4X1 matrix of bool)
0:30      Sequence
0:30        move second child to first child ( temp 2X1 matrix of bool)
0:30          'r10' ( temp 2X1 matrix of bool)
0:30          transpose ( temp 2X1 matrix of bool)
0:30            'b1x2' ( temp 1X2 matrix of bool)
0:31      Sequence
0:31        move second child to first child ( temp 2X2 matrix of bool)
0:31          'r11' ( temp 2X2 matrix of bool)
0:31          transpose ( temp 2X2 matrix of bool)
0:31            'b2x2' ( temp 2X2 matrix of bool)
0:32      Sequence
0:32        move second child to first child ( temp 2X3 matrix of bool)
0:32          'r12' ( temp 2X3 matrix of bool)
0:32          transpose ( temp 2X3 matrix of bool)
0:32            'b3x2' ( temp 3X2 matrix of bool)
0:33      Sequence
0:33        move second child to first child ( temp 2X4 matrix of bool)
0:33          'r13' ( temp 2X4 matrix of bool)
0:33          transpose ( temp 2X4 matrix of bool)
0:33            'b4x2' ( temp 4X2 matrix of bool)
0:35      Sequence
0:35        move second child to first child ( temp 3X1 matrix of bool)
0:35          'r20' ( temp 3X1 matrix of bool)
0:35          transpose ( temp 3X1 matrix of bool)
0:35            'b1x3' ( temp 1X3 matrix of bool)
0:36      Sequence
0:36        move second child to first child ( temp 3X2 matrix of bool)
0:36          'r21' ( temp 3X2 matrix of bool)
0:36          transpose ( temp 3X2 matrix of bool)
0:36            'b2x3' ( temp 2X3 matrix of bool)
0:37      Sequence
0:37        move second child to first child ( temp 3X3 matrix of bool)
0:37          'r22' ( temp 3X3 matrix of bool)
0:37          transpose ( temp 3X3 matrix of bool)
0:37            'b3x3' ( temp 3X3 matrix of bool)
0:38      Sequence
0:38        move second child to first child ( temp 3X4 matrix of bool)
0:38          'r23' ( temp 3X4 matrix of bool)
0:38          transpose ( temp 3X4 matrix of bool)
0:38            'b4x3' ( temp 4X3 matrix of bool)
0:40      Sequence
0:40        move second child to first child ( temp 4X1 matrix of bool)
0:40          'r30' ( temp 4X1 matrix of bool)
0:40          transpose ( temp 4X1 matrix of bool)
0:40            'b1x4' ( temp 1X4 matrix of bool)
0:41      Sequence
0:41        move second child to first child ( temp 4X2 matrix of bool)
0:41          'r31' ( temp 4X2 matrix of bool)
0:41          transpose ( temp 4X2 matrix of bool)
0:41            'b2x4' ( temp 2X4 matrix of bool)
0:42      Sequence
0:42        move second child to first child ( temp 4X3 matrix of bool)
0:42          'r32' ( temp 4X3 matrix of bool)
0:42          transpose ( temp 4X3 matrix of bool)
0:42            'b3x4' ( temp 3X4 matrix of bool)
0:43      Sequence
0:43        move second child to first child ( temp 4X4 matrix of bool)
0:43          'r33' ( temp 4X4 matrix of bool)
0:43          transpose ( temp 4X4 matrix of bool)
0:43            'b4x4' ( temp 4X4 matrix of bool)
0:49  Function Definition: @main( ( temp structure{ temp 4-component vector of float color})
0:49    Function Parameters: 
0:?     Sequence
0:51      move second child to first child ( temp 4-component vector of float)
0:51        color: direct index for structure ( temp 4-component vector of float)
0:51          'ps_output' ( temp structure{ temp 4-component vector of float color})
0:51          Constant:
0:51            0 (const int)
0:51        Constant:
0:51          0.000000
0:51          0.000000
0:51          0.000000
0:51          0.000000
0:52      Branch: Return with expression
0:52        'ps_output' ( temp structure{ temp 4-component vector of float color})
0:49  Function Definition: main( ( temp void)
0:49    Function Parameters: 
0:?     Sequence
0:49      Sequence
0:49        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.color' (layout( location=0) out 4-component vector of float)
0:49          color: direct index for structure ( temp 4-component vector of float)
0:49            Function Call: @main( ( temp structure{ temp 4-component vector of float color})
0:49            Constant:
0:49              0 (const int)
0:?   Linker Objects
0:?     '@entryPointOutput.color' (layout( location=0) out 4-component vector of float)

Validation failed
// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 130

                              Capability Shader
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 54_1  "main" 59_1
                              ExecutionMode 54_1 OriginUpperLeft
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 54_2  "TestBoolMatTypes("
                              Name 30_1  "PS_OUTPUT"
                              MemberName 30_1(PS_OUTPUT) 0  "color"
                              Name 54_3  "@main("
                              Name 59_2  "r00"
                              Name 59_3  "b1x1"
                              Name 59_4  "r01"
                              Name 59_5  "b2x1"
                              Name 59_6  "r02"
                              Name 59_7  "b3x1"
                              Name 59_8  "r03"
                              Name 59_9  "b4x1"
                              Name 59_10  "r10"
                              Name 59_11  "b1x2"
                              Name 59_12  "r11"
                              Name 59_13  "b2x2"
                              Name 59_14  "r12"
                              Name 59_15  "b3x2"
                              Name 59_16  "r13"
                              Name 59_17  "b4x2"
                              Name 59_18  "r20"
                              Name 59_19  "b1x3"
                              Name 59_20  "r21"
                              Name 59_21  "b2x3"
                              Name 59_22  "r22"
                              Name 59_23  "b3x3"
                              Name 59_24  "r23"
                              Name 59_25  "b4x3"
                              Name 59_26  "r30"
                              Name 59_27  "b1x4"
                              Name 59_28  "r31"
                              Name 59_29  "b2x4"
                              Name 59_30  "r32"
                              Name 59_31  "b3x4"
                              Name 59_32  "r33"
                              Name 59_33  "b4x4"
                              Name 59_34  "ps_output"
                              Name 59_1  "@entryPointOutput.color"
                              Decorate 59_1(@entryPointOutput.color) Location 0
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
 30_1(PS_OUTPUT):             TypeStruct 23_1(fvec4)
            33_2:             TypeFunction 30_1(PS_OUTPUT)
            20_1:             TypeBool
            23_2:             TypeVector 20_1(bool) 1
            24_1:             TypeMatrix 23_2(bvec) 1
            32_1:             TypePointer Function 24_1
            23_3:             TypeVector 20_1(bool) 2
            24_2:             TypeMatrix 23_3(bvec2) 1
            32_2:             TypePointer Function 24_2
            24_3:             TypeMatrix 23_2(bvec) 2
            32_3:             TypePointer Function 24_3
            23_4:             TypeVector 20_1(bool) 3
            24_4:             TypeMatrix 23_4(bvec3) 1
            32_4:             TypePointer Function 24_4
            24_5:             TypeMatrix 23_2(bvec) 3
            32_5:             TypePointer Function 24_5
            23_5:             TypeVector 20_1(bool) 4
            24_6:             TypeMatrix 23_5(bvec4) 1
            32_6:             TypePointer Function 24_6
            24_7:             TypeMatrix 23_2(bvec) 4
            32_7:             TypePointer Function 24_7
            24_8:             TypeMatrix 23_3(bvec2) 2
            32_8:             TypePointer Function 24_8
            24_9:             TypeMatrix 23_4(bvec3) 2
            32_9:             TypePointer Function 24_9
           24_10:             TypeMatrix 23_3(bvec2) 3
           32_10:             TypePointer Function 24_10
           24_11:             TypeMatrix 23_5(bvec4) 2
           32_11:             TypePointer Function 24_11
           24_12:             TypeMatrix 23_3(bvec2) 4
           32_12:             TypePointer Function 24_12
           24_13:             TypeMatrix 23_4(bvec3) 3
           32_13:             TypePointer Function 24_13
           24_14:             TypeMatrix 23_5(bvec4) 3
           32_14:             TypePointer Function 24_14
           24_15:             TypeMatrix 23_4(bvec3) 4
           32_15:             TypePointer Function 24_15
           24_16:             TypeMatrix 23_5(bvec4) 4
           32_16:             TypePointer Function 24_16
           32_17:             TypePointer Function 30_1(PS_OUTPUT)
            21_1:             TypeInt 32 1
            43_1:   21_1(int) Constant 0
            43_2: 22_1(float) Constant 0
            44_1: 23_1(fvec4) ConstantComposite 43_2 43_2 43_2 43_2
           32_18:             TypePointer Function 23_1(fvec4)
           32_19:             TypePointer Output 23_1(fvec4)
59_1(@entryPointOutput.color):  32_19(ptr) Variable Output
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
            57_1:30_1(PS_OUTPUT) FunctionCall 54_3(@main()
            81_1: 23_1(fvec4) CompositeExtract 57_1 0
                              Store 59_1(@entryPointOutput.color) 81_1
                              Return
                              FunctionEnd
54_2(TestBoolMatTypes():        19_1 Function None 33_1
           248_2:             Label
       59_2(r00):   32_1(ptr) Variable Function
      59_3(b1x1):   32_1(ptr) Variable Function
       59_4(r01):   32_2(ptr) Variable Function
      59_5(b2x1):   32_3(ptr) Variable Function
       59_6(r02):   32_4(ptr) Variable Function
      59_7(b3x1):   32_5(ptr) Variable Function
       59_8(r03):   32_6(ptr) Variable Function
      59_9(b4x1):   32_7(ptr) Variable Function
      59_10(r10):   32_3(ptr) Variable Function
     59_11(b1x2):   32_2(ptr) Variable Function
      59_12(r11):   32_8(ptr) Variable Function
     59_13(b2x2):   32_8(ptr) Variable Function
      59_14(r12):   32_9(ptr) Variable Function
     59_15(b3x2):  32_10(ptr) Variable Function
      59_16(r13):  32_11(ptr) Variable Function
     59_17(b4x2):  32_12(ptr) Variable Function
      59_18(r20):   32_5(ptr) Variable Function
     59_19(b1x3):   32_4(ptr) Variable Function
      59_20(r21):  32_10(ptr) Variable Function
     59_21(b2x3):   32_9(ptr) Variable Function
      59_22(r22):  32_13(ptr) Variable Function
     59_23(b3x3):  32_13(ptr) Variable Function
      59_24(r23):  32_14(ptr) Variable Function
     59_25(b4x3):  32_15(ptr) Variable Function
      59_26(r30):   32_7(ptr) Variable Function
     59_27(b1x4):   32_6(ptr) Variable Function
      59_28(r31):  32_12(ptr) Variable Function
     59_29(b2x4):  32_11(ptr) Variable Function
      59_30(r32):  32_15(ptr) Variable Function
     59_31(b3x4):  32_14(ptr) Variable Function
      59_32(r33):  32_16(ptr) Variable Function
     59_33(b4x4):  32_16(ptr) Variable Function
            61_1:        24_1 Load 59_3(b1x1)
            84_1:        24_1 Transpose 61_1
                              Store 59_2(r00) 84_1
            61_2:        24_3 Load 59_5(b2x1)
            84_2:        24_2 Transpose 61_2
                              Store 59_4(r01) 84_2
            61_3:        24_5 Load 59_7(b3x1)
            84_3:        24_4 Transpose 61_3
                              Store 59_6(r02) 84_3
            61_4:        24_7 Load 59_9(b4x1)
            84_4:        24_6 Transpose 61_4
                              Store 59_8(r03) 84_4
            61_5:        24_2 Load 59_11(b1x2)
            84_5:        24_3 Transpose 61_5
                              Store 59_10(r10) 84_5
            61_6:        24_8 Load 59_13(b2x2)
            84_6:        24_8 Transpose 61_6
                              Store 59_12(r11) 84_6
            61_7:       24_10 Load 59_15(b3x2)
            84_7:        24_9 Transpose 61_7
                              Store 59_14(r12) 84_7
            61_8:       24_12 Load 59_17(b4x2)
            84_8:       24_11 Transpose 61_8
                              Store 59_16(r13) 84_8
            61_9:        24_4 Load 59_19(b1x3)
            84_9:        24_5 Transpose 61_9
                              Store 59_18(r20) 84_9
           61_10:        24_9 Load 59_21(b2x3)
           84_10:       24_10 Transpose 61_10
                              Store 59_20(r21) 84_10
           61_11:       24_13 Load 59_23(b3x3)
           84_11:       24_13 Transpose 61_11
                              Store 59_22(r22) 84_11
           61_12:       24_15 Load 59_25(b4x3)
           84_12:       24_14 Transpose 61_12
                              Store 59_24(r23) 84_12
           61_13:        24_6 Load 59_27(b1x4)
           84_13:        24_7 Transpose 61_13
                              Store 59_26(r30) 84_13
           61_14:       24_11 Load 59_29(b2x4)
           84_14:       24_12 Transpose 61_14
                              Store 59_28(r31) 84_14
           61_15:       24_14 Load 59_31(b3x4)
           84_15:       24_15 Transpose 61_15
                              Store 59_30(r32) 84_15
           61_16:       24_16 Load 59_33(b4x4)
           84_16:       24_16 Transpose 61_16
                              Store 59_32(r33) 84_16
                              Return
                              FunctionEnd
    54_3(@main():30_1(PS_OUTPUT) Function None 33_2
           248_3:             Label
59_34(ps_output):  32_17(ptr) Variable Function
            65_1:  32_18(ptr) AccessChain 59_34(ps_output) 43_1
                              Store 65_1 44_1
           61_17:30_1(PS_OUTPUT) Load 59_34(ps_output)
                              ReturnValue 61_17
                              FunctionEnd
