vk.relaxed.stagelink.0.0.vert
Shader version: 460
0:? Sequence
0:11  Function Definition: main( ( global void)
0:11    Function Parameters: 
0:15    Sequence
0:15      Sequence
0:15        Sequence
0:15          move second child to first child ( temp highp 3-component vector of float)
0:15            'texcoord' ( temp highp 3-component vector of float)
0:15            Function Call: TDInstanceTexCoord(vf3; ( global highp 3-component vector of float)
0:15              direct index (layout( location=3) temp highp 3-component vector of float)
0:15                'uv' (layout( location=3) in 8-element array of highp 3-component vector of float)
0:15                Constant:
0:15                  0 (const int)
0:16        move second child to first child ( temp highp 3-component vector of float)
0:16          vector swizzle ( temp highp 3-component vector of float)
0:16            texCoord0: direct index for structure ( out highp 3-component vector of float)
0:16              'oVert' ( out block{ out highp 4-component vector of float color,  out highp 3-component vector of float worldSpacePos,  out highp 3-component vector of float texCoord0,  flat out highp int cameraIndex,  flat out highp int instance})
0:16              Constant:
0:16                2 (const int)
0:16            Sequence
0:16              Constant:
0:16                0 (const int)
0:16              Constant:
0:16                1 (const int)
0:16              Constant:
0:16                2 (const int)
0:16          vector swizzle ( temp highp 3-component vector of float)
0:16            'texcoord' ( temp highp 3-component vector of float)
0:16            Sequence
0:16              Constant:
0:16                0 (const int)
0:16              Constant:
0:16                1 (const int)
0:16              Constant:
0:16                2 (const int)
0:20      move second child to first child ( temp highp int)
0:20        instance: direct index for structure ( flat out highp int)
0:20          'oVert' ( out block{ out highp 4-component vector of float color,  out highp 3-component vector of float worldSpacePos,  out highp 3-component vector of float texCoord0,  flat out highp int cameraIndex,  flat out highp int instance})
0:20          Constant:
0:20            4 (const int)
0:20        Function Call: TDInstanceID( ( global highp int)
0:21      Sequence
0:21        move second child to first child ( temp highp 4-component vector of float)
0:21          'worldSpacePos' ( temp highp 4-component vector of float)
0:21          Function Call: TDDeform(vf3; ( global highp 4-component vector of float)
0:21            'P' (layout( location=0) in highp 3-component vector of float)
0:22      Sequence
0:22        move second child to first child ( temp highp 3-component vector of float)
0:22          'uvUnwrapCoord' ( temp highp 3-component vector of float)
0:22          Function Call: TDInstanceTexCoord(vf3; ( global highp 3-component vector of float)
0:22            Function Call: TDUVUnwrapCoord( ( global highp 3-component vector of float)
0:23      move second child to first child ( temp highp 4-component vector of float)
0:23        gl_Position: direct index for structure ( gl_Position highp 4-component vector of float Position)
0:23          'anon@4' ( out block{ gl_Position 4-component vector of float Position gl_Position,  gl_PointSize float PointSize gl_PointSize,  out unsized 1-element array of float ClipDistance gl_ClipDistance,  out unsized 1-element array of float CullDistance gl_CullDistance})
0:23          Constant:
0:23            0 (const uint)
0:23        Function Call: TDWorldToProj(vf4;vf3; ( global highp 4-component vector of float)
0:23          'worldSpacePos' ( temp highp 4-component vector of float)
0:23          'uvUnwrapCoord' ( temp highp 3-component vector of float)
0:32      Sequence
0:32        move second child to first child ( temp highp int)
0:32          'cameraIndex' ( temp highp int)
0:32          Function Call: TDCameraIndex( ( global highp int)
0:33      move second child to first child ( temp highp int)
0:33        cameraIndex: direct index for structure ( flat out highp int)
0:33          'oVert' ( out block{ out highp 4-component vector of float color,  out highp 3-component vector of float worldSpacePos,  out highp 3-component vector of float texCoord0,  flat out highp int cameraIndex,  flat out highp int instance})
0:33          Constant:
0:33            3 (const int)
0:33        'cameraIndex' ( temp highp int)
0:34      move second child to first child ( temp highp 3-component vector of float)
0:34        vector swizzle ( temp highp 3-component vector of float)
0:34          worldSpacePos: direct index for structure ( out highp 3-component vector of float)
0:34            'oVert' ( out block{ out highp 4-component vector of float color,  out highp 3-component vector of float worldSpacePos,  out highp 3-component vector of float texCoord0,  flat out highp int cameraIndex,  flat out highp int instance})
0:34            Constant:
0:34              1 (const int)
0:34          Sequence
0:34            Constant:
0:34              0 (const int)
0:34            Constant:
0:34              1 (const int)
0:34            Constant:
0:34              2 (const int)
0:34        vector swizzle ( temp highp 3-component vector of float)
0:34          'worldSpacePos' ( temp highp 4-component vector of float)
0:34          Sequence
0:34            Constant:
0:34              0 (const int)
0:34            Constant:
0:34              1 (const int)
0:34            Constant:
0:34              2 (const int)
0:35      move second child to first child ( temp highp 4-component vector of float)
0:35        color: direct index for structure ( out highp 4-component vector of float)
0:35          'oVert' ( out block{ out highp 4-component vector of float color,  out highp 3-component vector of float worldSpacePos,  out highp 3-component vector of float texCoord0,  flat out highp int cameraIndex,  flat out highp int instance})
0:35          Constant:
0:35            0 (const int)
0:35        Function Call: TDInstanceColor(vf4; ( global highp 4-component vector of float)
0:35          'Cd' (layout( location=2) in highp 4-component vector of float)
0:?   Linker Objects
0:?     'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:?     'anon@1' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals} uTDMats})
0:?     'anon@2' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{ global highp 4-component vector of float nearFar,  global highp 4-component vector of float fog,  global highp 4-component vector of float fogColor,  global highp int renderTOPCameraIndex} uTDCamInfos})
0:?     'anon@3' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform structure{ global highp 4-component vector of float ambientColor,  global highp 4-component vector of float nearFar,  global highp 4-component vector of float viewport,  global highp 4-component vector of float viewportRes,  global highp 4-component vector of float fog,  global highp 4-component vector of float fogColor} uTDGeneral})
0:?     'P' (layout( location=0) in highp 3-component vector of float)
0:?     'N' (layout( location=1) in highp 3-component vector of float)
0:?     'Cd' (layout( location=2) in highp 4-component vector of float)
0:?     'uv' (layout( location=3) in 8-element array of highp 3-component vector of float)
0:?     'oVert' ( out block{ out highp 4-component vector of float color,  out highp 3-component vector of float worldSpacePos,  out highp 3-component vector of float texCoord0,  flat out highp int cameraIndex,  flat out highp int instance})
0:?     'anon@4' ( out block{ gl_Position 4-component vector of float Position gl_Position,  gl_PointSize float PointSize gl_PointSize,  out unsized 1-element array of float ClipDistance gl_ClipDistance,  out unsized 1-element array of float CullDistance gl_CullDistance})
0:?     'gl_VertexIndex' ( in int VertexIndex)
0:?     'gl_InstanceIndex' ( in int InstanceIndex)

vk.relaxed.stagelink.0.1.vert
Shader version: 460
0:? Sequence
0:176  Function Definition: iTDCamToProj(vf4;vf3;i1;b1; ( global highp 4-component vector of float)
0:176    Function Parameters: 
0:176      'v' ( in highp 4-component vector of float)
0:176      'uv' ( in highp 3-component vector of float)
0:176      'cameraIndex' ( in highp int)
0:176      'applyPickMod' ( in bool)
0:178    Sequence
0:178      Test condition and select ( temp void)
0:178        Condition
0:178        Negate conditional ( temp bool)
0:178          Function Call: TDInstanceActive( ( global bool)
0:178        true case
0:179        Branch: Return with expression
0:179          Constant:
0:179            2.000000
0:179            2.000000
0:179            2.000000
0:179            0.000000
0:180      move second child to first child ( temp highp 4-component vector of float)
0:180        'v' ( in highp 4-component vector of float)
0:180        matrix-times-vector ( temp highp 4-component vector of float)
0:180          proj: direct index for structure (layout( column_major std140) global highp 4X4 matrix of float)
0:180            direct index (layout( column_major std140 offset=0) temp structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals})
0:180              uTDMats: direct index for structure (layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals})
0:180                'anon@3' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals} uTDMats})
0:180                Constant:
0:180                  0 (const uint)
0:180              Constant:
0:180                0 (const int)
0:180            Constant:
0:180              8 (const int)
0:180          'v' ( in highp 4-component vector of float)
0:181      Branch: Return with expression
0:181        'v' ( in highp 4-component vector of float)
0:183  Function Definition: iTDWorldToProj(vf4;vf3;i1;b1; ( global highp 4-component vector of float)
0:183    Function Parameters: 
0:183      'v' ( in highp 4-component vector of float)
0:183      'uv' ( in highp 3-component vector of float)
0:183      'cameraIndex' ( in highp int)
0:183      'applyPickMod' ( in bool)
0:184    Sequence
0:184      Test condition and select ( temp void)
0:184        Condition
0:184        Negate conditional ( temp bool)
0:184          Function Call: TDInstanceActive( ( global bool)
0:184        true case
0:185        Branch: Return with expression
0:185          Constant:
0:185            2.000000
0:185            2.000000
0:185            2.000000
0:185            0.000000
0:186      move second child to first child ( temp highp 4-component vector of float)
0:186        'v' ( in highp 4-component vector of float)
0:186        matrix-times-vector ( temp highp 4-component vector of float)
0:186          camProj: direct index for structure (layout( column_major std140) global highp 4X4 matrix of float)
0:186            direct index (layout( column_major std140 offset=0) temp structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals})
0:186              uTDMats: direct index for structure (layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals})
0:186                'anon@3' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals} uTDMats})
0:186                Constant:
0:186                  0 (const uint)
0:186              Constant:
0:186                0 (const int)
0:186            Constant:
0:186              6 (const int)
0:186          'v' ( in highp 4-component vector of float)
0:187      Branch: Return with expression
0:187        'v' ( in highp 4-component vector of float)
0:193  Function Definition: TDInstanceID( ( global highp int)
0:193    Function Parameters: 
0:194    Sequence
0:194      Branch: Return with expression
0:194        add ( temp highp int)
0:194          'gl_InstanceIndex' ( in highp int InstanceIndex)
0:194          uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:194            'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:194            Constant:
0:194              0 (const uint)
0:196  Function Definition: TDCameraIndex( ( global highp int)
0:196    Function Parameters: 
0:197    Sequence
0:197      Branch: Return with expression
0:197        Constant:
0:197          0 (const int)
0:199  Function Definition: TDUVUnwrapCoord( ( global highp 3-component vector of float)
0:199    Function Parameters: 
0:200    Sequence
0:200      Branch: Return with expression
0:200        direct index (layout( location=3) temp highp 3-component vector of float)
0:200          'uv' (layout( location=3) in 8-element array of highp 3-component vector of float)
0:200          Constant:
0:200            0 (const int)
0:205  Function Definition: TDPickID( ( global highp int)
0:205    Function Parameters: 
0:209    Sequence
0:209      Branch: Return with expression
0:209        Constant:
0:209          0 (const int)
0:212  Function Definition: iTDConvertPickId(i1; ( global highp float)
0:212    Function Parameters: 
0:212      'id' ( in highp int)
0:213    Sequence
0:213      or second child into first child ( temp highp int)
0:213        'id' ( in highp int)
0:213        Constant:
0:213          1073741824 (const int)
0:214      Branch: Return with expression
0:214        intBitsToFloat ( global highp float)
0:214          'id' ( in highp int)
0:217  Function Definition: TDWritePickingValues( ( global void)
0:217    Function Parameters: 
0:224  Function Definition: TDWorldToProj(vf4;vf3; ( global highp 4-component vector of float)
0:224    Function Parameters: 
0:224      'v' ( in highp 4-component vector of float)
0:224      'uv' ( in highp 3-component vector of float)
0:226    Sequence
0:226      Branch: Return with expression
0:226        Function Call: iTDWorldToProj(vf4;vf3;i1;b1; ( global highp 4-component vector of float)
0:226          'v' ( in highp 4-component vector of float)
0:226          'uv' ( in highp 3-component vector of float)
0:226          Function Call: TDCameraIndex( ( global highp int)
0:226          Constant:
0:226            true (const bool)
0:228  Function Definition: TDWorldToProj(vf3;vf3; ( global highp 4-component vector of float)
0:228    Function Parameters: 
0:228      'v' ( in highp 3-component vector of float)
0:228      'uv' ( in highp 3-component vector of float)
0:230    Sequence
0:230      Branch: Return with expression
0:230        Function Call: TDWorldToProj(vf4;vf3; ( global highp 4-component vector of float)
0:230          Construct vec4 ( temp highp 4-component vector of float)
0:230            'v' ( in highp 3-component vector of float)
0:230            Constant:
0:230              1.000000
0:230          'uv' ( in highp 3-component vector of float)
0:232  Function Definition: TDWorldToProj(vf4; ( global highp 4-component vector of float)
0:232    Function Parameters: 
0:232      'v' ( in highp 4-component vector of float)
0:234    Sequence
0:234      Branch: Return with expression
0:234        Function Call: TDWorldToProj(vf4;vf3; ( global highp 4-component vector of float)
0:234          'v' ( in highp 4-component vector of float)
0:234          Constant:
0:234            0.000000
0:234            0.000000
0:234            0.000000
0:236  Function Definition: TDWorldToProj(vf3; ( global highp 4-component vector of float)
0:236    Function Parameters: 
0:236      'v' ( in highp 3-component vector of float)
0:238    Sequence
0:238      Branch: Return with expression
0:238        Function Call: TDWorldToProj(vf4; ( global highp 4-component vector of float)
0:238          Construct vec4 ( temp highp 4-component vector of float)
0:238            'v' ( in highp 3-component vector of float)
0:238            Constant:
0:238              1.000000
0:240  Function Definition: TDPointColor( ( global highp 4-component vector of float)
0:240    Function Parameters: 
0:241    Sequence
0:241      Branch: Return with expression
0:241        'Cd' (layout( location=2) in highp 4-component vector of float)
0:?   Linker Objects
0:?     'P' (layout( location=0) in highp 3-component vector of float)
0:?     'N' (layout( location=1) in highp 3-component vector of float)
0:?     'Cd' (layout( location=2) in highp 4-component vector of float)
0:?     'uv' (layout( location=3) in 8-element array of highp 3-component vector of float)
0:?     'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:?     'anon@1' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{ global highp 4-component vector of float position,  global highp 3-component vector of float direction,  global highp 3-component vector of float diffuse,  global highp 4-component vector of float nearFar,  global highp 4-component vector of float lightSize,  global highp 4-component vector of float misc,  global highp 4-component vector of float coneLookupScaleBias,  global highp 4-component vector of float attenScaleBiasRoll, layout( column_major std140) global highp 4X4 matrix of float shadowMapMatrix, layout( column_major std140) global highp 4X4 matrix of float shadowMapCamMatrix,  global highp 4-component vector of float shadowMapRes, layout( column_major std140) global highp 4X4 matrix of float projMapMatrix} uTDLights})
0:?     'anon@2' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{ global highp 3-component vector of float color, layout( column_major std140) global highp 3X3 matrix of float rotate} uTDEnvLights})
0:?     'uTDEnvLightBuffers' (layout( column_major std430) restrict readonly buffer 1-element array of block{layout( column_major std430 offset=0) restrict readonly buffer 9-element array of highp 3-component vector of float shCoeffs})
0:?     'anon@3' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals} uTDMats})
0:?     'anon@4' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{ global highp 4-component vector of float nearFar,  global highp 4-component vector of float fog,  global highp 4-component vector of float fogColor,  global highp int renderTOPCameraIndex} uTDCamInfos})
0:?     'anon@5' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform structure{ global highp 4-component vector of float ambientColor,  global highp 4-component vector of float nearFar,  global highp 4-component vector of float viewport,  global highp 4-component vector of float viewportRes,  global highp 4-component vector of float fog,  global highp 4-component vector of float fogColor} uTDGeneral})
0:?     'mTD2DImageOutputs' (layout( rgba8) uniform 1-element array of highp image2D)
0:?     'mTD2DArrayImageOutputs' (layout( rgba8) uniform 1-element array of highp image2DArray)
0:?     'mTD3DImageOutputs' (layout( rgba8) uniform 1-element array of highp image3D)
0:?     'mTDCubeImageOutputs' (layout( rgba8) uniform 1-element array of highp imageCube)
0:?     'gl_VertexIndex' ( in int VertexIndex)
0:?     'gl_InstanceIndex' ( in int InstanceIndex)

vk.relaxed.stagelink.0.2.vert
Shader version: 460
0:? Sequence
0:114  Function Definition: TDInstanceTexCoord(i1;vf3; ( global highp 3-component vector of float)
0:114    Function Parameters: 
0:114      'index' ( in highp int)
0:114      't' ( in highp 3-component vector of float)
0:?     Sequence
0:116      Sequence
0:116        move second child to first child ( temp highp int)
0:116          'coord' ( temp highp int)
0:116          'index' ( in highp int)
0:117      Sequence
0:117        move second child to first child ( temp highp 4-component vector of float)
0:117          'samp' ( temp highp 4-component vector of float)
0:117          textureFetch ( global highp 4-component vector of float)
0:117            'sTDInstanceTexCoord' (layout( binding=16) uniform highp samplerBuffer)
0:117            'coord' ( temp highp int)
0:118      move second child to first child ( temp highp float)
0:118        direct index ( temp highp float)
0:118          'v' ( temp highp 3-component vector of float)
0:118          Constant:
0:118            0 (const int)
0:118        direct index ( temp highp float)
0:118          't' ( in highp 3-component vector of float)
0:118          Constant:
0:118            0 (const int)
0:119      move second child to first child ( temp highp float)
0:119        direct index ( temp highp float)
0:119          'v' ( temp highp 3-component vector of float)
0:119          Constant:
0:119            1 (const int)
0:119        direct index ( temp highp float)
0:119          't' ( in highp 3-component vector of float)
0:119          Constant:
0:119            1 (const int)
0:120      move second child to first child ( temp highp float)
0:120        direct index ( temp highp float)
0:120          'v' ( temp highp 3-component vector of float)
0:120          Constant:
0:120            2 (const int)
0:120        direct index ( temp highp float)
0:120          'samp' ( temp highp 4-component vector of float)
0:120          Constant:
0:120            0 (const int)
0:121      move second child to first child ( temp highp 3-component vector of float)
0:121        vector swizzle ( temp highp 3-component vector of float)
0:121          't' ( in highp 3-component vector of float)
0:121          Sequence
0:121            Constant:
0:121              0 (const int)
0:121            Constant:
0:121              1 (const int)
0:121            Constant:
0:121              2 (const int)
0:121        vector swizzle ( temp highp 3-component vector of float)
0:121          'v' ( temp highp 3-component vector of float)
0:121          Sequence
0:121            Constant:
0:121              0 (const int)
0:121            Constant:
0:121              1 (const int)
0:121            Constant:
0:121              2 (const int)
0:122      Branch: Return with expression
0:122        't' ( in highp 3-component vector of float)
0:124  Function Definition: TDInstanceActive(i1; ( global bool)
0:124    Function Parameters: 
0:124      'index' ( in highp int)
0:125    Sequence
0:125      subtract second child into first child ( temp highp int)
0:125        'index' ( in highp int)
0:125        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:125          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:125          Constant:
0:125            0 (const uint)
0:127      Sequence
0:127        move second child to first child ( temp highp int)
0:127          'coord' ( temp highp int)
0:127          'index' ( in highp int)
0:128      Sequence
0:128        move second child to first child ( temp highp 4-component vector of float)
0:128          'samp' ( temp highp 4-component vector of float)
0:128          textureFetch ( global highp 4-component vector of float)
0:128            'sTDInstanceT' (layout( binding=15) uniform highp samplerBuffer)
0:128            'coord' ( temp highp int)
0:129      move second child to first child ( temp highp float)
0:129        'v' ( temp highp float)
0:129        direct index ( temp highp float)
0:129          'samp' ( temp highp 4-component vector of float)
0:129          Constant:
0:129            0 (const int)
0:130      Branch: Return with expression
0:130        Compare Not Equal ( temp bool)
0:130          'v' ( temp highp float)
0:130          Constant:
0:130            0.000000
0:132  Function Definition: iTDInstanceTranslate(i1;b1; ( global highp 3-component vector of float)
0:132    Function Parameters: 
0:132      'index' ( in highp int)
0:132      'instanceActive' ( out bool)
0:133    Sequence
0:133      Sequence
0:133        move second child to first child ( temp highp int)
0:133          'origIndex' ( temp highp int)
0:133          'index' ( in highp int)
0:134      subtract second child into first child ( temp highp int)
0:134        'index' ( in highp int)
0:134        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:134          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:134          Constant:
0:134            0 (const uint)
0:136      Sequence
0:136        move second child to first child ( temp highp int)
0:136          'coord' ( temp highp int)
0:136          'index' ( in highp int)
0:137      Sequence
0:137        move second child to first child ( temp highp 4-component vector of float)
0:137          'samp' ( temp highp 4-component vector of float)
0:137          textureFetch ( global highp 4-component vector of float)
0:137            'sTDInstanceT' (layout( binding=15) uniform highp samplerBuffer)
0:137            'coord' ( temp highp int)
0:138      move second child to first child ( temp highp float)
0:138        direct index ( temp highp float)
0:138          'v' ( temp highp 3-component vector of float)
0:138          Constant:
0:138            0 (const int)
0:138        direct index ( temp highp float)
0:138          'samp' ( temp highp 4-component vector of float)
0:138          Constant:
0:138            1 (const int)
0:139      move second child to first child ( temp highp float)
0:139        direct index ( temp highp float)
0:139          'v' ( temp highp 3-component vector of float)
0:139          Constant:
0:139            1 (const int)
0:139        direct index ( temp highp float)
0:139          'samp' ( temp highp 4-component vector of float)
0:139          Constant:
0:139            2 (const int)
0:140      move second child to first child ( temp highp float)
0:140        direct index ( temp highp float)
0:140          'v' ( temp highp 3-component vector of float)
0:140          Constant:
0:140            2 (const int)
0:140        direct index ( temp highp float)
0:140          'samp' ( temp highp 4-component vector of float)
0:140          Constant:
0:140            3 (const int)
0:141      move second child to first child ( temp bool)
0:141        'instanceActive' ( out bool)
0:141        Compare Not Equal ( temp bool)
0:141          direct index ( temp highp float)
0:141            'samp' ( temp highp 4-component vector of float)
0:141            Constant:
0:141              0 (const int)
0:141          Constant:
0:141            0.000000
0:142      Branch: Return with expression
0:142        'v' ( temp highp 3-component vector of float)
0:144  Function Definition: TDInstanceTranslate(i1; ( global highp 3-component vector of float)
0:144    Function Parameters: 
0:144      'index' ( in highp int)
0:145    Sequence
0:145      subtract second child into first child ( temp highp int)
0:145        'index' ( in highp int)
0:145        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:145          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:145          Constant:
0:145            0 (const uint)
0:147      Sequence
0:147        move second child to first child ( temp highp int)
0:147          'coord' ( temp highp int)
0:147          'index' ( in highp int)
0:148      Sequence
0:148        move second child to first child ( temp highp 4-component vector of float)
0:148          'samp' ( temp highp 4-component vector of float)
0:148          textureFetch ( global highp 4-component vector of float)
0:148            'sTDInstanceT' (layout( binding=15) uniform highp samplerBuffer)
0:148            'coord' ( temp highp int)
0:149      move second child to first child ( temp highp float)
0:149        direct index ( temp highp float)
0:149          'v' ( temp highp 3-component vector of float)
0:149          Constant:
0:149            0 (const int)
0:149        direct index ( temp highp float)
0:149          'samp' ( temp highp 4-component vector of float)
0:149          Constant:
0:149            1 (const int)
0:150      move second child to first child ( temp highp float)
0:150        direct index ( temp highp float)
0:150          'v' ( temp highp 3-component vector of float)
0:150          Constant:
0:150            1 (const int)
0:150        direct index ( temp highp float)
0:150          'samp' ( temp highp 4-component vector of float)
0:150          Constant:
0:150            2 (const int)
0:151      move second child to first child ( temp highp float)
0:151        direct index ( temp highp float)
0:151          'v' ( temp highp 3-component vector of float)
0:151          Constant:
0:151            2 (const int)
0:151        direct index ( temp highp float)
0:151          'samp' ( temp highp 4-component vector of float)
0:151          Constant:
0:151            3 (const int)
0:152      Branch: Return with expression
0:152        'v' ( temp highp 3-component vector of float)
0:154  Function Definition: TDInstanceRotateMat(i1; ( global highp 3X3 matrix of float)
0:154    Function Parameters: 
0:154      'index' ( in highp int)
0:155    Sequence
0:155      subtract second child into first child ( temp highp int)
0:155        'index' ( in highp int)
0:155        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:155          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:155          Constant:
0:155            0 (const uint)
0:156      Sequence
0:156        move second child to first child ( temp highp 3-component vector of float)
0:156          'v' ( temp highp 3-component vector of float)
0:156          Constant:
0:156            0.000000
0:156            0.000000
0:156            0.000000
0:157      Sequence
0:157        move second child to first child ( temp highp 3X3 matrix of float)
0:157          'm' ( temp highp 3X3 matrix of float)
0:157          Constant:
0:157            1.000000
0:157            0.000000
0:157            0.000000
0:157            0.000000
0:157            1.000000
0:157            0.000000
0:157            0.000000
0:157            0.000000
0:157            1.000000
0:161      Branch: Return with expression
0:161        'm' ( temp highp 3X3 matrix of float)
0:163  Function Definition: TDInstanceScale(i1; ( global highp 3-component vector of float)
0:163    Function Parameters: 
0:163      'index' ( in highp int)
0:164    Sequence
0:164      subtract second child into first child ( temp highp int)
0:164        'index' ( in highp int)
0:164        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:164          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:164          Constant:
0:164            0 (const uint)
0:165      Sequence
0:165        move second child to first child ( temp highp 3-component vector of float)
0:165          'v' ( temp highp 3-component vector of float)
0:165          Constant:
0:165            1.000000
0:165            1.000000
0:165            1.000000
0:166      Branch: Return with expression
0:166        'v' ( temp highp 3-component vector of float)
0:168  Function Definition: TDInstancePivot(i1; ( global highp 3-component vector of float)
0:168    Function Parameters: 
0:168      'index' ( in highp int)
0:169    Sequence
0:169      subtract second child into first child ( temp highp int)
0:169        'index' ( in highp int)
0:169        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:169          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:169          Constant:
0:169            0 (const uint)
0:170      Sequence
0:170        move second child to first child ( temp highp 3-component vector of float)
0:170          'v' ( temp highp 3-component vector of float)
0:170          Constant:
0:170            0.000000
0:170            0.000000
0:170            0.000000
0:171      Branch: Return with expression
0:171        'v' ( temp highp 3-component vector of float)
0:173  Function Definition: TDInstanceRotTo(i1; ( global highp 3-component vector of float)
0:173    Function Parameters: 
0:173      'index' ( in highp int)
0:174    Sequence
0:174      subtract second child into first child ( temp highp int)
0:174        'index' ( in highp int)
0:174        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:174          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:174          Constant:
0:174            0 (const uint)
0:175      Sequence
0:175        move second child to first child ( temp highp 3-component vector of float)
0:175          'v' ( temp highp 3-component vector of float)
0:175          Constant:
0:175            0.000000
0:175            0.000000
0:175            1.000000
0:176      Branch: Return with expression
0:176        'v' ( temp highp 3-component vector of float)
0:178  Function Definition: TDInstanceRotUp(i1; ( global highp 3-component vector of float)
0:178    Function Parameters: 
0:178      'index' ( in highp int)
0:179    Sequence
0:179      subtract second child into first child ( temp highp int)
0:179        'index' ( in highp int)
0:179        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:179          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:179          Constant:
0:179            0 (const uint)
0:180      Sequence
0:180        move second child to first child ( temp highp 3-component vector of float)
0:180          'v' ( temp highp 3-component vector of float)
0:180          Constant:
0:180            0.000000
0:180            1.000000
0:180            0.000000
0:181      Branch: Return with expression
0:181        'v' ( temp highp 3-component vector of float)
0:183  Function Definition: TDInstanceMat(i1; ( global highp 4X4 matrix of float)
0:183    Function Parameters: 
0:183      'id' ( in highp int)
0:184    Sequence
0:184      Sequence
0:184        move second child to first child ( temp bool)
0:184          'instanceActive' ( temp bool)
0:184          Constant:
0:184            true (const bool)
0:185      Sequence
0:185        move second child to first child ( temp highp 3-component vector of float)
0:185          't' ( temp highp 3-component vector of float)
0:185          Function Call: iTDInstanceTranslate(i1;b1; ( global highp 3-component vector of float)
0:185            'id' ( in highp int)
0:185            'instanceActive' ( temp bool)
0:186      Test condition and select ( temp void)
0:186        Condition
0:186        Negate conditional ( temp bool)
0:186          'instanceActive' ( temp bool)
0:186        true case
0:188        Sequence
0:188          Branch: Return with expression
0:188            Constant:
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:190      Sequence
0:190        move second child to first child ( temp highp 4X4 matrix of float)
0:190          'm' ( temp highp 4X4 matrix of float)
0:190          Constant:
0:190            1.000000
0:190            0.000000
0:190            0.000000
0:190            0.000000
0:190            0.000000
0:190            1.000000
0:190            0.000000
0:190            0.000000
0:190            0.000000
0:190            0.000000
0:190            1.000000
0:190            0.000000
0:190            0.000000
0:190            0.000000
0:190            0.000000
0:190            1.000000
0:192      Sequence
0:192        Sequence
0:192          move second child to first child ( temp highp 3-component vector of float)
0:192            'tt' ( temp highp 3-component vector of float)
0:192            't' ( temp highp 3-component vector of float)
0:193        add second child into first child ( temp highp float)
0:193          direct index ( temp highp float)
0:193            direct index ( temp highp 4-component vector of float)
0:193              'm' ( temp highp 4X4 matrix of float)
0:193              Constant:
0:193                3 (const int)
0:193            Constant:
0:193              0 (const int)
0:193          component-wise multiply ( temp highp float)
0:193            direct index ( temp highp float)
0:193              direct index ( temp highp 4-component vector of float)
0:193                'm' ( temp highp 4X4 matrix of float)
0:193                Constant:
0:193                  0 (const int)
0:193              Constant:
0:193                0 (const int)
0:193            direct index ( temp highp float)
0:193              'tt' ( temp highp 3-component vector of float)
0:193              Constant:
0:193                0 (const int)
0:194        add second child into first child ( temp highp float)
0:194          direct index ( temp highp float)
0:194            direct index ( temp highp 4-component vector of float)
0:194              'm' ( temp highp 4X4 matrix of float)
0:194              Constant:
0:194                3 (const int)
0:194            Constant:
0:194              1 (const int)
0:194          component-wise multiply ( temp highp float)
0:194            direct index ( temp highp float)
0:194              direct index ( temp highp 4-component vector of float)
0:194                'm' ( temp highp 4X4 matrix of float)
0:194                Constant:
0:194                  0 (const int)
0:194              Constant:
0:194                1 (const int)
0:194            direct index ( temp highp float)
0:194              'tt' ( temp highp 3-component vector of float)
0:194              Constant:
0:194                0 (const int)
0:195        add second child into first child ( temp highp float)
0:195          direct index ( temp highp float)
0:195            direct index ( temp highp 4-component vector of float)
0:195              'm' ( temp highp 4X4 matrix of float)
0:195              Constant:
0:195                3 (const int)
0:195            Constant:
0:195              2 (const int)
0:195          component-wise multiply ( temp highp float)
0:195            direct index ( temp highp float)
0:195              direct index ( temp highp 4-component vector of float)
0:195                'm' ( temp highp 4X4 matrix of float)
0:195                Constant:
0:195                  0 (const int)
0:195              Constant:
0:195                2 (const int)
0:195            direct index ( temp highp float)
0:195              'tt' ( temp highp 3-component vector of float)
0:195              Constant:
0:195                0 (const int)
0:196        add second child into first child ( temp highp float)
0:196          direct index ( temp highp float)
0:196            direct index ( temp highp 4-component vector of float)
0:196              'm' ( temp highp 4X4 matrix of float)
0:196              Constant:
0:196                3 (const int)
0:196            Constant:
0:196              3 (const int)
0:196          component-wise multiply ( temp highp float)
0:196            direct index ( temp highp float)
0:196              direct index ( temp highp 4-component vector of float)
0:196                'm' ( temp highp 4X4 matrix of float)
0:196                Constant:
0:196                  0 (const int)
0:196              Constant:
0:196                3 (const int)
0:196            direct index ( temp highp float)
0:196              'tt' ( temp highp 3-component vector of float)
0:196              Constant:
0:196                0 (const int)
0:197        add second child into first child ( temp highp float)
0:197          direct index ( temp highp float)
0:197            direct index ( temp highp 4-component vector of float)
0:197              'm' ( temp highp 4X4 matrix of float)
0:197              Constant:
0:197                3 (const int)
0:197            Constant:
0:197              0 (const int)
0:197          component-wise multiply ( temp highp float)
0:197            direct index ( temp highp float)
0:197              direct index ( temp highp 4-component vector of float)
0:197                'm' ( temp highp 4X4 matrix of float)
0:197                Constant:
0:197                  1 (const int)
0:197              Constant:
0:197                0 (const int)
0:197            direct index ( temp highp float)
0:197              'tt' ( temp highp 3-component vector of float)
0:197              Constant:
0:197                1 (const int)
0:198        add second child into first child ( temp highp float)
0:198          direct index ( temp highp float)
0:198            direct index ( temp highp 4-component vector of float)
0:198              'm' ( temp highp 4X4 matrix of float)
0:198              Constant:
0:198                3 (const int)
0:198            Constant:
0:198              1 (const int)
0:198          component-wise multiply ( temp highp float)
0:198            direct index ( temp highp float)
0:198              direct index ( temp highp 4-component vector of float)
0:198                'm' ( temp highp 4X4 matrix of float)
0:198                Constant:
0:198                  1 (const int)
0:198              Constant:
0:198                1 (const int)
0:198            direct index ( temp highp float)
0:198              'tt' ( temp highp 3-component vector of float)
0:198              Constant:
0:198                1 (const int)
0:199        add second child into first child ( temp highp float)
0:199          direct index ( temp highp float)
0:199            direct index ( temp highp 4-component vector of float)
0:199              'm' ( temp highp 4X4 matrix of float)
0:199              Constant:
0:199                3 (const int)
0:199            Constant:
0:199              2 (const int)
0:199          component-wise multiply ( temp highp float)
0:199            direct index ( temp highp float)
0:199              direct index ( temp highp 4-component vector of float)
0:199                'm' ( temp highp 4X4 matrix of float)
0:199                Constant:
0:199                  1 (const int)
0:199              Constant:
0:199                2 (const int)
0:199            direct index ( temp highp float)
0:199              'tt' ( temp highp 3-component vector of float)
0:199              Constant:
0:199                1 (const int)
0:200        add second child into first child ( temp highp float)
0:200          direct index ( temp highp float)
0:200            direct index ( temp highp 4-component vector of float)
0:200              'm' ( temp highp 4X4 matrix of float)
0:200              Constant:
0:200                3 (const int)
0:200            Constant:
0:200              3 (const int)
0:200          component-wise multiply ( temp highp float)
0:200            direct index ( temp highp float)
0:200              direct index ( temp highp 4-component vector of float)
0:200                'm' ( temp highp 4X4 matrix of float)
0:200                Constant:
0:200                  1 (const int)
0:200              Constant:
0:200                3 (const int)
0:200            direct index ( temp highp float)
0:200              'tt' ( temp highp 3-component vector of float)
0:200              Constant:
0:200                1 (const int)
0:201        add second child into first child ( temp highp float)
0:201          direct index ( temp highp float)
0:201            direct index ( temp highp 4-component vector of float)
0:201              'm' ( temp highp 4X4 matrix of float)
0:201              Constant:
0:201                3 (const int)
0:201            Constant:
0:201              0 (const int)
0:201          component-wise multiply ( temp highp float)
0:201            direct index ( temp highp float)
0:201              direct index ( temp highp 4-component vector of float)
0:201                'm' ( temp highp 4X4 matrix of float)
0:201                Constant:
0:201                  2 (const int)
0:201              Constant:
0:201                0 (const int)
0:201            direct index ( temp highp float)
0:201              'tt' ( temp highp 3-component vector of float)
0:201              Constant:
0:201                2 (const int)
0:202        add second child into first child ( temp highp float)
0:202          direct index ( temp highp float)
0:202            direct index ( temp highp 4-component vector of float)
0:202              'm' ( temp highp 4X4 matrix of float)
0:202              Constant:
0:202                3 (const int)
0:202            Constant:
0:202              1 (const int)
0:202          component-wise multiply ( temp highp float)
0:202            direct index ( temp highp float)
0:202              direct index ( temp highp 4-component vector of float)
0:202                'm' ( temp highp 4X4 matrix of float)
0:202                Constant:
0:202                  2 (const int)
0:202              Constant:
0:202                1 (const int)
0:202            direct index ( temp highp float)
0:202              'tt' ( temp highp 3-component vector of float)
0:202              Constant:
0:202                2 (const int)
0:203        add second child into first child ( temp highp float)
0:203          direct index ( temp highp float)
0:203            direct index ( temp highp 4-component vector of float)
0:203              'm' ( temp highp 4X4 matrix of float)
0:203              Constant:
0:203                3 (const int)
0:203            Constant:
0:203              2 (const int)
0:203          component-wise multiply ( temp highp float)
0:203            direct index ( temp highp float)
0:203              direct index ( temp highp 4-component vector of float)
0:203                'm' ( temp highp 4X4 matrix of float)
0:203                Constant:
0:203                  2 (const int)
0:203              Constant:
0:203                2 (const int)
0:203            direct index ( temp highp float)
0:203              'tt' ( temp highp 3-component vector of float)
0:203              Constant:
0:203                2 (const int)
0:204        add second child into first child ( temp highp float)
0:204          direct index ( temp highp float)
0:204            direct index ( temp highp 4-component vector of float)
0:204              'm' ( temp highp 4X4 matrix of float)
0:204              Constant:
0:204                3 (const int)
0:204            Constant:
0:204              3 (const int)
0:204          component-wise multiply ( temp highp float)
0:204            direct index ( temp highp float)
0:204              direct index ( temp highp 4-component vector of float)
0:204                'm' ( temp highp 4X4 matrix of float)
0:204                Constant:
0:204                  2 (const int)
0:204              Constant:
0:204                3 (const int)
0:204            direct index ( temp highp float)
0:204              'tt' ( temp highp 3-component vector of float)
0:204              Constant:
0:204                2 (const int)
0:206      Branch: Return with expression
0:206        'm' ( temp highp 4X4 matrix of float)
0:208  Function Definition: TDInstanceMat3(i1; ( global highp 3X3 matrix of float)
0:208    Function Parameters: 
0:208      'id' ( in highp int)
0:209    Sequence
0:209      Sequence
0:209        move second child to first child ( temp highp 3X3 matrix of float)
0:209          'm' ( temp highp 3X3 matrix of float)
0:209          Constant:
0:209            1.000000
0:209            0.000000
0:209            0.000000
0:209            0.000000
0:209            1.000000
0:209            0.000000
0:209            0.000000
0:209            0.000000
0:209            1.000000
0:210      Branch: Return with expression
0:210        'm' ( temp highp 3X3 matrix of float)
0:212  Function Definition: TDInstanceMat3ForNorm(i1; ( global highp 3X3 matrix of float)
0:212    Function Parameters: 
0:212      'id' ( in highp int)
0:213    Sequence
0:213      Sequence
0:213        move second child to first child ( temp highp 3X3 matrix of float)
0:213          'm' ( temp highp 3X3 matrix of float)
0:213          Function Call: TDInstanceMat3(i1; ( global highp 3X3 matrix of float)
0:213            'id' ( in highp int)
0:214      Branch: Return with expression
0:214        'm' ( temp highp 3X3 matrix of float)
0:216  Function Definition: TDInstanceColor(i1;vf4; ( global highp 4-component vector of float)
0:216    Function Parameters: 
0:216      'index' ( in highp int)
0:216      'curColor' ( in highp 4-component vector of float)
0:217    Sequence
0:217      subtract second child into first child ( temp highp int)
0:217        'index' ( in highp int)
0:217        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:217          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:217          Constant:
0:217            0 (const uint)
0:219      Sequence
0:219        move second child to first child ( temp highp int)
0:219          'coord' ( temp highp int)
0:219          'index' ( in highp int)
0:220      Sequence
0:220        move second child to first child ( temp highp 4-component vector of float)
0:220          'samp' ( temp highp 4-component vector of float)
0:220          textureFetch ( global highp 4-component vector of float)
0:220            'sTDInstanceColor' (layout( binding=17) uniform highp samplerBuffer)
0:220            'coord' ( temp highp int)
0:221      move second child to first child ( temp highp float)
0:221        direct index ( temp highp float)
0:221          'v' ( temp highp 4-component vector of float)
0:221          Constant:
0:221            0 (const int)
0:221        direct index ( temp highp float)
0:221          'samp' ( temp highp 4-component vector of float)
0:221          Constant:
0:221            0 (const int)
0:222      move second child to first child ( temp highp float)
0:222        direct index ( temp highp float)
0:222          'v' ( temp highp 4-component vector of float)
0:222          Constant:
0:222            1 (const int)
0:222        direct index ( temp highp float)
0:222          'samp' ( temp highp 4-component vector of float)
0:222          Constant:
0:222            1 (const int)
0:223      move second child to first child ( temp highp float)
0:223        direct index ( temp highp float)
0:223          'v' ( temp highp 4-component vector of float)
0:223          Constant:
0:223            2 (const int)
0:223        direct index ( temp highp float)
0:223          'samp' ( temp highp 4-component vector of float)
0:223          Constant:
0:223            2 (const int)
0:224      move second child to first child ( temp highp float)
0:224        direct index ( temp highp float)
0:224          'v' ( temp highp 4-component vector of float)
0:224          Constant:
0:224            3 (const int)
0:224        Constant:
0:224          1.000000
0:225      move second child to first child ( temp highp float)
0:225        direct index ( temp highp float)
0:225          'curColor' ( in highp 4-component vector of float)
0:225          Constant:
0:225            0 (const int)
0:225        direct index ( temp highp float)
0:225          'v' ( temp highp 4-component vector of float)
0:225          Constant:
0:225            0 (const int)
0:227      move second child to first child ( temp highp float)
0:227        direct index ( temp highp float)
0:227          'curColor' ( in highp 4-component vector of float)
0:227          Constant:
0:227            1 (const int)
0:227        direct index ( temp highp float)
0:227          'v' ( temp highp 4-component vector of float)
0:227          Constant:
0:227            1 (const int)
0:229      move second child to first child ( temp highp float)
0:229        direct index ( temp highp float)
0:229          'curColor' ( in highp 4-component vector of float)
0:229          Constant:
0:229            2 (const int)
0:229        direct index ( temp highp float)
0:229          'v' ( temp highp 4-component vector of float)
0:229          Constant:
0:229            2 (const int)
0:231      Branch: Return with expression
0:231        'curColor' ( in highp 4-component vector of float)
0:233  Function Definition: TDInstanceDeform(i1;vf4; ( global highp 4-component vector of float)
0:233    Function Parameters: 
0:233      'id' ( in highp int)
0:233      'pos' ( in highp 4-component vector of float)
0:234    Sequence
0:234      move second child to first child ( temp highp 4-component vector of float)
0:234        'pos' ( in highp 4-component vector of float)
0:234        matrix-times-vector ( temp highp 4-component vector of float)
0:234          Function Call: TDInstanceMat(i1; ( global highp 4X4 matrix of float)
0:234            'id' ( in highp int)
0:234          'pos' ( in highp 4-component vector of float)
0:235      Branch: Return with expression
0:235        matrix-times-vector ( temp highp 4-component vector of float)
0:235          world: direct index for structure (layout( column_major std140) global highp 4X4 matrix of float)
0:235            indirect index (layout( column_major std140 offset=0) temp structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals})
0:235              uTDMats: direct index for structure (layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals})
0:235                'anon@3' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals} uTDMats})
0:235                Constant:
0:235                  0 (const uint)
0:235              Function Call: TDCameraIndex( ( global highp int)
0:235            Constant:
0:235              0 (const int)
0:235          'pos' ( in highp 4-component vector of float)
0:238  Function Definition: TDInstanceDeformVec(i1;vf3; ( global highp 3-component vector of float)
0:238    Function Parameters: 
0:238      'id' ( in highp int)
0:238      'vec' ( in highp 3-component vector of float)
0:240    Sequence
0:240      Sequence
0:240        move second child to first child ( temp highp 3X3 matrix of float)
0:240          'm' ( temp highp 3X3 matrix of float)
0:240          Function Call: TDInstanceMat3(i1; ( global highp 3X3 matrix of float)
0:240            'id' ( in highp int)
0:241      Branch: Return with expression
0:241        matrix-times-vector ( temp highp 3-component vector of float)
0:241          Construct mat3 ( temp highp 3X3 matrix of float)
0:241            world: direct index for structure (layout( column_major std140) global highp 4X4 matrix of float)
0:241              indirect index (layout( column_major std140 offset=0) temp structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals})
0:241                uTDMats: direct index for structure (layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals})
0:241                  'anon@3' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals} uTDMats})
0:241                  Constant:
0:241                    0 (const uint)
0:241                Function Call: TDCameraIndex( ( global highp int)
0:241              Constant:
0:241                0 (const int)
0:241          matrix-times-vector ( temp highp 3-component vector of float)
0:241            'm' ( temp highp 3X3 matrix of float)
0:241            'vec' ( in highp 3-component vector of float)
0:243  Function Definition: TDInstanceDeformNorm(i1;vf3; ( global highp 3-component vector of float)
0:243    Function Parameters: 
0:243      'id' ( in highp int)
0:243      'vec' ( in highp 3-component vector of float)
0:245    Sequence
0:245      Sequence
0:245        move second child to first child ( temp highp 3X3 matrix of float)
0:245          'm' ( temp highp 3X3 matrix of float)
0:245          Function Call: TDInstanceMat3ForNorm(i1; ( global highp 3X3 matrix of float)
0:245            'id' ( in highp int)
0:246      Branch: Return with expression
0:246        matrix-times-vector ( temp highp 3-component vector of float)
0:246          Construct mat3 ( temp highp 3X3 matrix of float)
0:246            worldForNormals: direct index for structure (layout( column_major std140) global highp 3X3 matrix of float)
0:246              indirect index (layout( column_major std140 offset=0) temp structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals})
0:246                uTDMats: direct index for structure (layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals})
0:246                  'anon@3' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals} uTDMats})
0:246                  Constant:
0:246                    0 (const uint)
0:246                Function Call: TDCameraIndex( ( global highp int)
0:246              Constant:
0:246                13 (const int)
0:246          matrix-times-vector ( temp highp 3-component vector of float)
0:246            'm' ( temp highp 3X3 matrix of float)
0:246            'vec' ( in highp 3-component vector of float)
0:248  Function Definition: TDInstanceDeform(vf4; ( global highp 4-component vector of float)
0:248    Function Parameters: 
0:248      'pos' ( in highp 4-component vector of float)
0:249    Sequence
0:249      Branch: Return with expression
0:249        Function Call: TDInstanceDeform(i1;vf4; ( global highp 4-component vector of float)
0:249          Function Call: TDInstanceID( ( global highp int)
0:249          'pos' ( in highp 4-component vector of float)
0:251  Function Definition: TDInstanceDeformVec(vf3; ( global highp 3-component vector of float)
0:251    Function Parameters: 
0:251      'vec' ( in highp 3-component vector of float)
0:252    Sequence
0:252      Branch: Return with expression
0:252        Function Call: TDInstanceDeformVec(i1;vf3; ( global highp 3-component vector of float)
0:252          Function Call: TDInstanceID( ( global highp int)
0:252          'vec' ( in highp 3-component vector of float)
0:254  Function Definition: TDInstanceDeformNorm(vf3; ( global highp 3-component vector of float)
0:254    Function Parameters: 
0:254      'vec' ( in highp 3-component vector of float)
0:255    Sequence
0:255      Branch: Return with expression
0:255        Function Call: TDInstanceDeformNorm(i1;vf3; ( global highp 3-component vector of float)
0:255          Function Call: TDInstanceID( ( global highp int)
0:255          'vec' ( in highp 3-component vector of float)
0:257  Function Definition: TDInstanceActive( ( global bool)
0:257    Function Parameters: 
0:257    Sequence
0:257      Branch: Return with expression
0:257        Function Call: TDInstanceActive(i1; ( global bool)
0:257          Function Call: TDInstanceID( ( global highp int)
0:258  Function Definition: TDInstanceTranslate( ( global highp 3-component vector of float)
0:258    Function Parameters: 
0:258    Sequence
0:258      Branch: Return with expression
0:258        Function Call: TDInstanceTranslate(i1; ( global highp 3-component vector of float)
0:258          Function Call: TDInstanceID( ( global highp int)
0:259  Function Definition: TDInstanceRotateMat( ( global highp 3X3 matrix of float)
0:259    Function Parameters: 
0:259    Sequence
0:259      Branch: Return with expression
0:259        Function Call: TDInstanceRotateMat(i1; ( global highp 3X3 matrix of float)
0:259          Function Call: TDInstanceID( ( global highp int)
0:260  Function Definition: TDInstanceScale( ( global highp 3-component vector of float)
0:260    Function Parameters: 
0:260    Sequence
0:260      Branch: Return with expression
0:260        Function Call: TDInstanceScale(i1; ( global highp 3-component vector of float)
0:260          Function Call: TDInstanceID( ( global highp int)
0:261  Function Definition: TDInstanceMat( ( global highp 4X4 matrix of float)
0:261    Function Parameters: 
0:261    Sequence
0:261      Branch: Return with expression
0:261        Function Call: TDInstanceMat(i1; ( global highp 4X4 matrix of float)
0:261          Function Call: TDInstanceID( ( global highp int)
0:263  Function Definition: TDInstanceMat3( ( global highp 3X3 matrix of float)
0:263    Function Parameters: 
0:263    Sequence
0:263      Branch: Return with expression
0:263        Function Call: TDInstanceMat3(i1; ( global highp 3X3 matrix of float)
0:263          Function Call: TDInstanceID( ( global highp int)
0:265  Function Definition: TDInstanceTexCoord(vf3; ( global highp 3-component vector of float)
0:265    Function Parameters: 
0:265      't' ( in highp 3-component vector of float)
0:266    Sequence
0:266      Branch: Return with expression
0:266        Function Call: TDInstanceTexCoord(i1;vf3; ( global highp 3-component vector of float)
0:266          Function Call: TDInstanceID( ( global highp int)
0:266          't' ( in highp 3-component vector of float)
0:268  Function Definition: TDInstanceColor(vf4; ( global highp 4-component vector of float)
0:268    Function Parameters: 
0:268      'curColor' ( in highp 4-component vector of float)
0:269    Sequence
0:269      Branch: Return with expression
0:269        Function Call: TDInstanceColor(i1;vf4; ( global highp 4-component vector of float)
0:269          Function Call: TDInstanceID( ( global highp int)
0:269          'curColor' ( in highp 4-component vector of float)
0:271  Function Definition: TDSkinnedDeform(vf4; ( global highp 4-component vector of float)
0:271    Function Parameters: 
0:271      'pos' ( in highp 4-component vector of float)
0:271    Sequence
0:271      Branch: Return with expression
0:271        'pos' ( in highp 4-component vector of float)
0:273  Function Definition: TDSkinnedDeformVec(vf3; ( global highp 3-component vector of float)
0:273    Function Parameters: 
0:273      'vec' ( in highp 3-component vector of float)
0:273    Sequence
0:273      Branch: Return with expression
0:273        'vec' ( in highp 3-component vector of float)
0:275  Function Definition: TDFastDeformTangent(vf3;vf4;vf3; ( global highp 3-component vector of float)
0:275    Function Parameters: 
0:275      'oldNorm' ( in highp 3-component vector of float)
0:275      'oldTangent' ( in highp 4-component vector of float)
0:275      'deformedNorm' ( in highp 3-component vector of float)
0:276    Sequence
0:276      Branch: Return with expression
0:276        vector swizzle ( temp highp 3-component vector of float)
0:276          'oldTangent' ( in highp 4-component vector of float)
0:276          Sequence
0:276            Constant:
0:276              0 (const int)
0:276            Constant:
0:276              1 (const int)
0:276            Constant:
0:276              2 (const int)
0:277  Function Definition: TDBoneMat(i1; ( global highp 4X4 matrix of float)
0:277    Function Parameters: 
0:277      'index' ( in highp int)
0:278    Sequence
0:278      Branch: Return with expression
0:278        Constant:
0:278          1.000000
0:278          0.000000
0:278          0.000000
0:278          0.000000
0:278          0.000000
0:278          1.000000
0:278          0.000000
0:278          0.000000
0:278          0.000000
0:278          0.000000
0:278          1.000000
0:278          0.000000
0:278          0.000000
0:278          0.000000
0:278          0.000000
0:278          1.000000
0:280  Function Definition: TDDeform(vf4; ( global highp 4-component vector of float)
0:280    Function Parameters: 
0:280      'pos' ( in highp 4-component vector of float)
0:281    Sequence
0:281      move second child to first child ( temp highp 4-component vector of float)
0:281        'pos' ( in highp 4-component vector of float)
0:281        Function Call: TDSkinnedDeform(vf4; ( global highp 4-component vector of float)
0:281          'pos' ( in highp 4-component vector of float)
0:282      move second child to first child ( temp highp 4-component vector of float)
0:282        'pos' ( in highp 4-component vector of float)
0:282        Function Call: TDInstanceDeform(vf4; ( global highp 4-component vector of float)
0:282          'pos' ( in highp 4-component vector of float)
0:283      Branch: Return with expression
0:283        'pos' ( in highp 4-component vector of float)
0:286  Function Definition: TDDeform(i1;vf3; ( global highp 4-component vector of float)
0:286    Function Parameters: 
0:286      'instanceID' ( in highp int)
0:286      'p' ( in highp 3-component vector of float)
0:287    Sequence
0:287      Sequence
0:287        move second child to first child ( temp highp 4-component vector of float)
0:287          'pos' ( temp highp 4-component vector of float)
0:287          Construct vec4 ( temp highp 4-component vector of float)
0:287            'p' ( in highp 3-component vector of float)
0:287            Constant:
0:287              1.000000
0:288      move second child to first child ( temp highp 4-component vector of float)
0:288        'pos' ( temp highp 4-component vector of float)
0:288        Function Call: TDSkinnedDeform(vf4; ( global highp 4-component vector of float)
0:288          'pos' ( temp highp 4-component vector of float)
0:289      move second child to first child ( temp highp 4-component vector of float)
0:289        'pos' ( temp highp 4-component vector of float)
0:289        Function Call: TDInstanceDeform(i1;vf4; ( global highp 4-component vector of float)
0:289          'instanceID' ( in highp int)
0:289          'pos' ( temp highp 4-component vector of float)
0:290      Branch: Return with expression
0:290        'pos' ( temp highp 4-component vector of float)
0:293  Function Definition: TDDeform(vf3; ( global highp 4-component vector of float)
0:293    Function Parameters: 
0:293      'pos' ( in highp 3-component vector of float)
0:294    Sequence
0:294      Branch: Return with expression
0:294        Function Call: TDDeform(i1;vf3; ( global highp 4-component vector of float)
0:294          Function Call: TDInstanceID( ( global highp int)
0:294          'pos' ( in highp 3-component vector of float)
0:297  Function Definition: TDDeformVec(i1;vf3; ( global highp 3-component vector of float)
0:297    Function Parameters: 
0:297      'instanceID' ( in highp int)
0:297      'vec' ( in highp 3-component vector of float)
0:298    Sequence
0:298      move second child to first child ( temp highp 3-component vector of float)
0:298        'vec' ( in highp 3-component vector of float)
0:298        Function Call: TDSkinnedDeformVec(vf3; ( global highp 3-component vector of float)
0:298          'vec' ( in highp 3-component vector of float)
0:299      move second child to first child ( temp highp 3-component vector of float)
0:299        'vec' ( in highp 3-component vector of float)
0:299        Function Call: TDInstanceDeformVec(i1;vf3; ( global highp 3-component vector of float)
0:299          'instanceID' ( in highp int)
0:299          'vec' ( in highp 3-component vector of float)
0:300      Branch: Return with expression
0:300        'vec' ( in highp 3-component vector of float)
0:303  Function Definition: TDDeformVec(vf3; ( global highp 3-component vector of float)
0:303    Function Parameters: 
0:303      'vec' ( in highp 3-component vector of float)
0:304    Sequence
0:304      Branch: Return with expression
0:304        Function Call: TDDeformVec(i1;vf3; ( global highp 3-component vector of float)
0:304          Function Call: TDInstanceID( ( global highp int)
0:304          'vec' ( in highp 3-component vector of float)
0:307  Function Definition: TDDeformNorm(i1;vf3; ( global highp 3-component vector of float)
0:307    Function Parameters: 
0:307      'instanceID' ( in highp int)
0:307      'vec' ( in highp 3-component vector of float)
0:308    Sequence
0:308      move second child to first child ( temp highp 3-component vector of float)
0:308        'vec' ( in highp 3-component vector of float)
0:308        Function Call: TDSkinnedDeformVec(vf3; ( global highp 3-component vector of float)
0:308          'vec' ( in highp 3-component vector of float)
0:309      move second child to first child ( temp highp 3-component vector of float)
0:309        'vec' ( in highp 3-component vector of float)
0:309        Function Call: TDInstanceDeformNorm(i1;vf3; ( global highp 3-component vector of float)
0:309          'instanceID' ( in highp int)
0:309          'vec' ( in highp 3-component vector of float)
0:310      Branch: Return with expression
0:310        'vec' ( in highp 3-component vector of float)
0:313  Function Definition: TDDeformNorm(vf3; ( global highp 3-component vector of float)
0:313    Function Parameters: 
0:313      'vec' ( in highp 3-component vector of float)
0:314    Sequence
0:314      Branch: Return with expression
0:314        Function Call: TDDeformNorm(i1;vf3; ( global highp 3-component vector of float)
0:314          Function Call: TDInstanceID( ( global highp int)
0:314          'vec' ( in highp 3-component vector of float)
0:317  Function Definition: TDSkinnedDeformNorm(vf3; ( global highp 3-component vector of float)
0:317    Function Parameters: 
0:317      'vec' ( in highp 3-component vector of float)
0:318    Sequence
0:318      move second child to first child ( temp highp 3-component vector of float)
0:318        'vec' ( in highp 3-component vector of float)
0:318        Function Call: TDSkinnedDeformVec(vf3; ( global highp 3-component vector of float)
0:318          'vec' ( in highp 3-component vector of float)
0:319      Branch: Return with expression
0:319        'vec' ( in highp 3-component vector of float)
0:?   Linker Objects
0:?     'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:?     'anon@1' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{ global highp 4-component vector of float position,  global highp 3-component vector of float direction,  global highp 3-component vector of float diffuse,  global highp 4-component vector of float nearFar,  global highp 4-component vector of float lightSize,  global highp 4-component vector of float misc,  global highp 4-component vector of float coneLookupScaleBias,  global highp 4-component vector of float attenScaleBiasRoll, layout( column_major std140) global highp 4X4 matrix of float shadowMapMatrix, layout( column_major std140) global highp 4X4 matrix of float shadowMapCamMatrix,  global highp 4-component vector of float shadowMapRes, layout( column_major std140) global highp 4X4 matrix of float projMapMatrix} uTDLights})
0:?     'anon@2' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{ global highp 3-component vector of float color, layout( column_major std140) global highp 3X3 matrix of float rotate} uTDEnvLights})
0:?     'uTDEnvLightBuffers' (layout( column_major std430) restrict readonly buffer 1-element array of block{layout( column_major std430 offset=0) restrict readonly buffer 9-element array of highp 3-component vector of float shCoeffs})
0:?     'anon@3' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals} uTDMats})
0:?     'anon@4' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{ global highp 4-component vector of float nearFar,  global highp 4-component vector of float fog,  global highp 4-component vector of float fogColor,  global highp int renderTOPCameraIndex} uTDCamInfos})
0:?     'anon@5' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform structure{ global highp 4-component vector of float ambientColor,  global highp 4-component vector of float nearFar,  global highp 4-component vector of float viewport,  global highp 4-component vector of float viewportRes,  global highp 4-component vector of float fog,  global highp 4-component vector of float fogColor} uTDGeneral})
0:?     'sTDInstanceT' (layout( binding=15) uniform highp samplerBuffer)
0:?     'sTDInstanceTexCoord' (layout( binding=16) uniform highp samplerBuffer)
0:?     'sTDInstanceColor' (layout( binding=17) uniform highp samplerBuffer)
0:?     'gl_VertexIndex' ( in int VertexIndex)
0:?     'gl_InstanceIndex' ( in int InstanceIndex)

vk.relaxed.stagelink.0.0.frag
Shader version: 460
gl_FragCoord origin is upper left
0:? Sequence
0:95  Function Definition: main( ( global void)
0:95    Function Parameters: 
0:99    Sequence
0:99      Function Call: TDCheckDiscard( ( global void)
0:101      Sequence
0:101        move second child to first child ( temp highp 4-component vector of float)
0:101          'outcol' ( temp highp 4-component vector of float)
0:101          Constant:
0:101            0.000000
0:101            0.000000
0:101            0.000000
0:101            0.000000
0:103      Sequence
0:103        move second child to first child ( temp highp 3-component vector of float)
0:103          'texCoord0' ( temp highp 3-component vector of float)
0:103          vector swizzle ( temp highp 3-component vector of float)
0:103            texCoord0: direct index for structure ( in highp 3-component vector of float)
0:103              'iVert' ( in block{ in highp 4-component vector of float color,  in highp 3-component vector of float worldSpacePos,  in highp 3-component vector of float texCoord0,  flat in highp int cameraIndex,  flat in highp int instance})
0:103              Constant:
0:103                2 (const int)
0:103            Sequence
0:103              Constant:
0:103                0 (const int)
0:103              Constant:
0:103                1 (const int)
0:103              Constant:
0:103                2 (const int)
0:104      Sequence
0:104        move second child to first child ( temp highp float)
0:104          'actualTexZ' ( temp highp float)
0:104          mod ( global highp float)
0:104            Convert int to float ( temp highp float)
0:104              Convert float to int ( temp highp int)
0:104                direct index ( temp highp float)
0:104                  'texCoord0' ( temp highp 3-component vector of float)
0:104                  Constant:
0:104                    2 (const int)
0:104            Constant:
0:104              2048.000000
0:105      Sequence
0:105        move second child to first child ( temp highp float)
0:105          'instanceLoop' ( temp highp float)
0:105          Floor ( global highp float)
0:105            Convert int to float ( temp highp float)
0:105              divide ( temp highp int)
0:105                Convert float to int ( temp highp int)
0:105                  direct index ( temp highp float)
0:105                    'texCoord0' ( temp highp 3-component vector of float)
0:105                    Constant:
0:105                      2 (const int)
0:105                Constant:
0:105                  2048 (const int)
0:106      move second child to first child ( temp highp float)
0:106        direct index ( temp highp float)
0:106          'texCoord0' ( temp highp 3-component vector of float)
0:106          Constant:
0:106            2 (const int)
0:106        'actualTexZ' ( temp highp float)
0:107      Sequence
0:107        move second child to first child ( temp highp 4-component vector of float)
0:107          'colorMapColor' ( temp highp 4-component vector of float)
0:107          texture ( global highp 4-component vector of float)
0:107            'sColorMap' ( uniform highp sampler2DArray)
0:107            vector swizzle ( temp highp 3-component vector of float)
0:107              'texCoord0' ( temp highp 3-component vector of float)
0:107              Sequence
0:107                Constant:
0:107                  0 (const int)
0:107                Constant:
0:107                  1 (const int)
0:107                Constant:
0:107                  2 (const int)
0:109      Sequence
0:109        move second child to first child ( temp highp float)
0:109          'red' ( temp highp float)
0:109          indirect index ( temp highp float)
0:109            'colorMapColor' ( temp highp 4-component vector of float)
0:109            Convert float to int ( temp highp int)
0:109              'instanceLoop' ( temp highp float)
0:110      move second child to first child ( temp highp 4-component vector of float)
0:110        'colorMapColor' ( temp highp 4-component vector of float)
0:110        Construct vec4 ( temp highp 4-component vector of float)
0:110          'red' ( temp highp float)
0:112      add second child into first child ( temp highp 3-component vector of float)
0:112        vector swizzle ( temp highp 3-component vector of float)
0:112          'outcol' ( temp highp 4-component vector of float)
0:112          Sequence
0:112            Constant:
0:112              0 (const int)
0:112            Constant:
0:112              1 (const int)
0:112            Constant:
0:112              2 (const int)
0:112        component-wise multiply ( temp highp 3-component vector of float)
0:112          uConstant: direct index for structure ( uniform highp 3-component vector of float)
0:112            'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal,  uniform highp 3-component vector of float uConstant,  uniform highp float uShadowStrength,  uniform highp 3-component vector of float uShadowColor,  uniform highp 4-component vector of float uDiffuseColor,  uniform highp 4-component vector of float uAmbientColor})
0:112            Constant:
0:112              3 (const uint)
0:112          vector swizzle ( temp highp 3-component vector of float)
0:112            color: direct index for structure ( in highp 4-component vector of float)
0:112              'iVert' ( in block{ in highp 4-component vector of float color,  in highp 3-component vector of float worldSpacePos,  in highp 3-component vector of float texCoord0,  flat in highp int cameraIndex,  flat in highp int instance})
0:112              Constant:
0:112                0 (const int)
0:112            Sequence
0:112              Constant:
0:112                0 (const int)
0:112              Constant:
0:112                1 (const int)
0:112              Constant:
0:112                2 (const int)
0:114      multiply second child into first child ( temp highp 4-component vector of float)
0:114        'outcol' ( temp highp 4-component vector of float)
0:114        'colorMapColor' ( temp highp 4-component vector of float)
0:117      Sequence
0:117        move second child to first child ( temp highp float)
0:117          'alpha' ( temp highp float)
0:117          component-wise multiply ( temp highp float)
0:117            direct index ( temp highp float)
0:117              color: direct index for structure ( in highp 4-component vector of float)
0:117                'iVert' ( in block{ in highp 4-component vector of float color,  in highp 3-component vector of float worldSpacePos,  in highp 3-component vector of float texCoord0,  flat in highp int cameraIndex,  flat in highp int instance})
0:117                Constant:
0:117                  0 (const int)
0:117              Constant:
0:117                3 (const int)
0:117            direct index ( temp highp float)
0:117              'colorMapColor' ( temp highp 4-component vector of float)
0:117              Constant:
0:117                3 (const int)
0:120      move second child to first child ( temp highp 4-component vector of float)
0:120        'outcol' ( temp highp 4-component vector of float)
0:120        Function Call: TDDither(vf4; ( global highp 4-component vector of float)
0:120          'outcol' ( temp highp 4-component vector of float)
0:122      vector scale second child into first child ( temp highp 3-component vector of float)
0:122        vector swizzle ( temp highp 3-component vector of float)
0:122          'outcol' ( temp highp 4-component vector of float)
0:122          Sequence
0:122            Constant:
0:122              0 (const int)
0:122            Constant:
0:122              1 (const int)
0:122            Constant:
0:122              2 (const int)
0:122        'alpha' ( temp highp float)
0:126      Function Call: TDAlphaTest(f1; ( global void)
0:126        'alpha' ( temp highp float)
0:128      move second child to first child ( temp highp float)
0:128        direct index ( temp highp float)
0:128          'outcol' ( temp highp 4-component vector of float)
0:128          Constant:
0:128            3 (const int)
0:128        'alpha' ( temp highp float)
0:129      move second child to first child ( temp highp 4-component vector of float)
0:129        direct index (layout( location=0) temp highp 4-component vector of float)
0:129          'oFragColor' (layout( location=0) out 1-element array of highp 4-component vector of float)
0:129          Constant:
0:129            0 (const int)
0:129        Function Call: TDOutputSwizzle(vf4; ( global highp 4-component vector of float)
0:129          'outcol' ( temp highp 4-component vector of float)
0:135      Sequence
0:135        Sequence
0:135          move second child to first child ( temp highp int)
0:135            'i' ( temp highp int)
0:135            Constant:
0:135              1 (const int)
0:135        Loop with condition tested first
0:135          Loop Condition
0:135          Compare Less Than ( temp bool)
0:135            'i' ( temp highp int)
0:135            Constant:
0:135              1 (const int)
0:135          Loop Body
0:137          Sequence
0:137            move second child to first child ( temp highp 4-component vector of float)
0:137              indirect index (layout( location=0) temp highp 4-component vector of float)
0:137                'oFragColor' (layout( location=0) out 1-element array of highp 4-component vector of float)
0:137                'i' ( temp highp int)
0:137              Constant:
0:137                0.000000
0:137                0.000000
0:137                0.000000
0:137                0.000000
0:135          Loop Terminal Expression
0:135          Post-Increment ( temp highp int)
0:135            'i' ( temp highp int)
0:?   Linker Objects
0:?     'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal,  uniform highp 3-component vector of float uConstant,  uniform highp float uShadowStrength,  uniform highp 3-component vector of float uShadowColor,  uniform highp 4-component vector of float uDiffuseColor,  uniform highp 4-component vector of float uAmbientColor})
0:?     'anon@1' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals} uTDMats})
0:?     'anon@2' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{ global highp 4-component vector of float nearFar,  global highp 4-component vector of float fog,  global highp 4-component vector of float fogColor,  global highp int renderTOPCameraIndex} uTDCamInfos})
0:?     'anon@3' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform structure{ global highp 4-component vector of float ambientColor,  global highp 4-component vector of float nearFar,  global highp 4-component vector of float viewport,  global highp 4-component vector of float viewportRes,  global highp 4-component vector of float fog,  global highp 4-component vector of float fogColor} uTDGeneral})
0:?     'sColorMap' ( uniform highp sampler2DArray)
0:?     'iVert' ( in block{ in highp 4-component vector of float color,  in highp 3-component vector of float worldSpacePos,  in highp 3-component vector of float texCoord0,  flat in highp int cameraIndex,  flat in highp int instance})
0:?     'oFragColor' (layout( location=0) out 1-element array of highp 4-component vector of float)

vk.relaxed.stagelink.0.1.frag
Shader version: 460
gl_FragCoord origin is upper left
0:? Sequence
0:116  Function Definition: TDColor(vf4; ( global highp 4-component vector of float)
0:116    Function Parameters: 
0:116      'color' ( in highp 4-component vector of float)
0:116    Sequence
0:116      Branch: Return with expression
0:116        'color' ( in highp 4-component vector of float)
0:117  Function Definition: TDCheckOrderIndTrans( ( global void)
0:117    Function Parameters: 
0:119  Function Definition: TDCheckDiscard( ( global void)
0:119    Function Parameters: 
0:120    Sequence
0:120      Function Call: TDCheckOrderIndTrans( ( global void)
0:122  Function Definition: TDDither(vf4; ( global highp 4-component vector of float)
0:122    Function Parameters: 
0:122      'color' ( in highp 4-component vector of float)
0:124    Sequence
0:124      Sequence
0:124        move second child to first child ( temp highp float)
0:124          'd' ( temp highp float)
0:125          direct index ( temp highp float)
0:125            texture ( global highp 4-component vector of float)
0:124              'sTDNoiseMap' ( uniform highp sampler2D)
0:125              divide ( temp highp 2-component vector of float)
0:125                vector swizzle ( temp highp 2-component vector of float)
0:125                  'gl_FragCoord' ( gl_FragCoord highp 4-component vector of float FragCoord)
0:125                  Sequence
0:125                    Constant:
0:125                      0 (const int)
0:125                    Constant:
0:125                      1 (const int)
0:125                Constant:
0:125                  256.000000
0:125            Constant:
0:125              0 (const int)
0:126      subtract second child into first child ( temp highp float)
0:126        'd' ( temp highp float)
0:126        Constant:
0:126          0.500000
0:127      divide second child into first child ( temp highp float)
0:127        'd' ( temp highp float)
0:127        Constant:
0:127          256.000000
0:128      Branch: Return with expression
0:128        Construct vec4 ( temp highp 4-component vector of float)
0:128          add ( temp highp 3-component vector of float)
0:128            vector swizzle ( temp highp 3-component vector of float)
0:128              'color' ( in highp 4-component vector of float)
0:128              Sequence
0:128                Constant:
0:128                  0 (const int)
0:128                Constant:
0:128                  1 (const int)
0:128                Constant:
0:128                  2 (const int)
0:128            'd' ( temp highp float)
0:128          direct index ( temp highp float)
0:128            'color' ( in highp 4-component vector of float)
0:128            Constant:
0:128              3 (const int)
0:130  Function Definition: TDFrontFacing(vf3;vf3; ( global bool)
0:130    Function Parameters: 
0:130      'pos' ( in highp 3-component vector of float)
0:130      'normal' ( in highp 3-component vector of float)
0:132    Sequence
0:132      Branch: Return with expression
0:132        'gl_FrontFacing' ( gl_FrontFacing bool Face)
0:134  Function Definition: TDAttenuateLight(i1;f1; ( global highp float)
0:134    Function Parameters: 
0:134      'index' ( in highp int)
0:134      'lightDist' ( in highp float)
0:136    Sequence
0:136      Branch: Return with expression
0:136        Constant:
0:136          1.000000
0:138  Function Definition: TDAlphaTest(f1; ( global void)
0:138    Function Parameters: 
0:138      'alpha' ( in highp float)
0:140  Function Definition: TDHardShadow(i1;vf3; ( global highp float)
0:140    Function Parameters: 
0:140      'lightIndex' ( in highp int)
0:140      'worldSpacePos' ( in highp 3-component vector of float)
0:141    Sequence
0:141      Branch: Return with expression
0:141        Constant:
0:141          0.000000
0:142  Function Definition: TDSoftShadow(i1;vf3;i1;i1; ( global highp float)
0:142    Function Parameters: 
0:142      'lightIndex' ( in highp int)
0:142      'worldSpacePos' ( in highp 3-component vector of float)
0:142      'samples' ( in highp int)
0:142      'steps' ( in highp int)
0:143    Sequence
0:143      Branch: Return with expression
0:143        Constant:
0:143          0.000000
0:144  Function Definition: TDSoftShadow(i1;vf3; ( global highp float)
0:144    Function Parameters: 
0:144      'lightIndex' ( in highp int)
0:144      'worldSpacePos' ( in highp 3-component vector of float)
0:145    Sequence
0:145      Branch: Return with expression
0:145        Constant:
0:145          0.000000
0:146  Function Definition: TDShadow(i1;vf3; ( global highp float)
0:146    Function Parameters: 
0:146      'lightIndex' ( in highp int)
0:146      'worldSpacePos' ( in highp 3-component vector of float)
0:147    Sequence
0:147      Branch: Return with expression
0:147        Constant:
0:147          0.000000
0:152  Function Definition: iTDRadicalInverse_VdC(u1; ( global highp float)
0:152    Function Parameters: 
0:152      'bits' ( in highp uint)
0:154    Sequence
0:154      move second child to first child ( temp highp uint)
0:154        'bits' ( in highp uint)
0:154        inclusive-or ( temp highp uint)
0:154          left-shift ( temp highp uint)
0:154            'bits' ( in highp uint)
0:154            Constant:
0:154              16 (const uint)
0:154          right-shift ( temp highp uint)
0:154            'bits' ( in highp uint)
0:154            Constant:
0:154              16 (const uint)
0:155      move second child to first child ( temp highp uint)
0:155        'bits' ( in highp uint)
0:155        inclusive-or ( temp highp uint)
0:155          left-shift ( temp highp uint)
0:155            bitwise and ( temp highp uint)
0:155              'bits' ( in highp uint)
0:155              Constant:
0:155                1431655765 (const uint)
0:155            Constant:
0:155              1 (const uint)
0:155          right-shift ( temp highp uint)
0:155            bitwise and ( temp highp uint)
0:155              'bits' ( in highp uint)
0:155              Constant:
0:155                2863311530 (const uint)
0:155            Constant:
0:155              1 (const uint)
0:156      move second child to first child ( temp highp uint)
0:156        'bits' ( in highp uint)
0:156        inclusive-or ( temp highp uint)
0:156          left-shift ( temp highp uint)
0:156            bitwise and ( temp highp uint)
0:156              'bits' ( in highp uint)
0:156              Constant:
0:156                858993459 (const uint)
0:156            Constant:
0:156              2 (const uint)
0:156          right-shift ( temp highp uint)
0:156            bitwise and ( temp highp uint)
0:156              'bits' ( in highp uint)
0:156              Constant:
0:156                3435973836 (const uint)
0:156            Constant:
0:156              2 (const uint)
0:157      move second child to first child ( temp highp uint)
0:157        'bits' ( in highp uint)
0:157        inclusive-or ( temp highp uint)
0:157          left-shift ( temp highp uint)
0:157            bitwise and ( temp highp uint)
0:157              'bits' ( in highp uint)
0:157              Constant:
0:157                252645135 (const uint)
0:157            Constant:
0:157              4 (const uint)
0:157          right-shift ( temp highp uint)
0:157            bitwise and ( temp highp uint)
0:157              'bits' ( in highp uint)
0:157              Constant:
0:157                4042322160 (const uint)
0:157            Constant:
0:157              4 (const uint)
0:158      move second child to first child ( temp highp uint)
0:158        'bits' ( in highp uint)
0:158        inclusive-or ( temp highp uint)
0:158          left-shift ( temp highp uint)
0:158            bitwise and ( temp highp uint)
0:158              'bits' ( in highp uint)
0:158              Constant:
0:158                16711935 (const uint)
0:158            Constant:
0:158              8 (const uint)
0:158          right-shift ( temp highp uint)
0:158            bitwise and ( temp highp uint)
0:158              'bits' ( in highp uint)
0:158              Constant:
0:158                4278255360 (const uint)
0:158            Constant:
0:158              8 (const uint)
0:159      Branch: Return with expression
0:159        component-wise multiply ( temp highp float)
0:159          Convert uint to float ( temp highp float)
0:159            'bits' ( in highp uint)
0:159          Constant:
0:159            2.3283064365387e-10
0:161  Function Definition: iTDHammersley(u1;u1; ( global highp 2-component vector of float)
0:161    Function Parameters: 
0:161      'i' ( in highp uint)
0:161      'N' ( in highp uint)
0:163    Sequence
0:163      Branch: Return with expression
0:163        Construct vec2 ( temp highp 2-component vector of float)
0:163          divide ( temp highp float)
0:163            Convert uint to float ( temp highp float)
0:163              'i' ( in highp uint)
0:163            Convert uint to float ( temp highp float)
0:163              'N' ( in highp uint)
0:163          Function Call: iTDRadicalInverse_VdC(u1; ( global highp float)
0:163            'i' ( in highp uint)
0:165  Function Definition: iTDImportanceSampleGGX(vf2;f1;vf3; ( global highp 3-component vector of float)
0:165    Function Parameters: 
0:165      'Xi' ( in highp 2-component vector of float)
0:165      'roughness2' ( in highp float)
0:165      'N' ( in highp 3-component vector of float)
0:167    Sequence
0:167      Sequence
0:167        move second child to first child ( temp highp float)
0:167          'a' ( temp highp float)
0:167          'roughness2' ( in highp float)
0:168      Sequence
0:168        move second child to first child ( temp highp float)
0:168          'phi' ( temp highp float)
0:168          component-wise multiply ( temp highp float)
0:168            Constant:
0:168              6.283185
0:168            direct index ( temp highp float)
0:168              'Xi' ( in highp 2-component vector of float)
0:168              Constant:
0:168                0 (const int)
0:169      Sequence
0:169        move second child to first child ( temp highp float)
0:169          'cosTheta' ( temp highp float)
0:169          sqrt ( global highp float)
0:169            divide ( temp highp float)
0:169              subtract ( temp highp float)
0:169                Constant:
0:169                  1.000000
0:169                direct index ( temp highp float)
0:169                  'Xi' ( in highp 2-component vector of float)
0:169                  Constant:
0:169                    1 (const int)
0:169              add ( temp highp float)
0:169                Constant:
0:169                  1.000000
0:169                component-wise multiply ( temp highp float)
0:169                  subtract ( temp highp float)
0:169                    component-wise multiply ( temp highp float)
0:169                      'a' ( temp highp float)
0:169                      'a' ( temp highp float)
0:169                    Constant:
0:169                      1.000000
0:169                  direct index ( temp highp float)
0:169                    'Xi' ( in highp 2-component vector of float)
0:169                    Constant:
0:169                      1 (const int)
0:170      Sequence
0:170        move second child to first child ( temp highp float)
0:170          'sinTheta' ( temp highp float)
0:170          sqrt ( global highp float)
0:170            subtract ( temp highp float)
0:170              Constant:
0:170                1.000000
0:170              component-wise multiply ( temp highp float)
0:170                'cosTheta' ( temp highp float)
0:170                'cosTheta' ( temp highp float)
0:173      move second child to first child ( temp highp float)
0:173        direct index ( temp highp float)
0:173          'H' ( temp highp 3-component vector of float)
0:173          Constant:
0:173            0 (const int)
0:173        component-wise multiply ( temp highp float)
0:173          'sinTheta' ( temp highp float)
0:173          cosine ( global highp float)
0:173            'phi' ( temp highp float)
0:174      move second child to first child ( temp highp float)
0:174        direct index ( temp highp float)
0:174          'H' ( temp highp 3-component vector of float)
0:174          Constant:
0:174            1 (const int)
0:174        component-wise multiply ( temp highp float)
0:174          'sinTheta' ( temp highp float)
0:174          sine ( global highp float)
0:174            'phi' ( temp highp float)
0:175      move second child to first child ( temp highp float)
0:175        direct index ( temp highp float)
0:175          'H' ( temp highp 3-component vector of float)
0:175          Constant:
0:175            2 (const int)
0:175        'cosTheta' ( temp highp float)
0:177      Sequence
0:177        move second child to first child ( temp highp 3-component vector of float)
0:177          'upVector' ( temp highp 3-component vector of float)
0:177          Test condition and select ( temp highp 3-component vector of float)
0:177            Condition
0:177            Compare Less Than ( temp bool)
0:177              Absolute value ( global highp float)
0:177                direct index ( temp highp float)
0:177                  'N' ( in highp 3-component vector of float)
0:177                  Constant:
0:177                    2 (const int)
0:177              Constant:
0:177                0.999000
0:177            true case
0:177            Constant:
0:177              0.000000
0:177              0.000000
0:177              1.000000
0:177            false case
0:177            Constant:
0:177              1.000000
0:177              0.000000
0:177              0.000000
0:178      Sequence
0:178        move second child to first child ( temp highp 3-component vector of float)
0:178          'tangentX' ( temp highp 3-component vector of float)
0:178          normalize ( global highp 3-component vector of float)
0:178            cross-product ( global highp 3-component vector of float)
0:178              'upVector' ( temp highp 3-component vector of float)
0:178              'N' ( in highp 3-component vector of float)
0:179      Sequence
0:179        move second child to first child ( temp highp 3-component vector of float)
0:179          'tangentY' ( temp highp 3-component vector of float)
0:179          cross-product ( global highp 3-component vector of float)
0:179            'N' ( in highp 3-component vector of float)
0:179            'tangentX' ( temp highp 3-component vector of float)
0:182      Sequence
0:182        move second child to first child ( temp highp 3-component vector of float)
0:182          'worldResult' ( temp highp 3-component vector of float)
0:182          add ( temp highp 3-component vector of float)
0:182            add ( temp highp 3-component vector of float)
0:182              vector-scale ( temp highp 3-component vector of float)
0:182                'tangentX' ( temp highp 3-component vector of float)
0:182                direct index ( temp highp float)
0:182                  'H' ( temp highp 3-component vector of float)
0:182                  Constant:
0:182                    0 (const int)
0:182              vector-scale ( temp highp 3-component vector of float)
0:182                'tangentY' ( temp highp 3-component vector of float)
0:182                direct index ( temp highp float)
0:182                  'H' ( temp highp 3-component vector of float)
0:182                  Constant:
0:182                    1 (const int)
0:182            vector-scale ( temp highp 3-component vector of float)
0:182              'N' ( in highp 3-component vector of float)
0:182              direct index ( temp highp float)
0:182                'H' ( temp highp 3-component vector of float)
0:182                Constant:
0:182                  2 (const int)
0:183      Branch: Return with expression
0:183        'worldResult' ( temp highp 3-component vector of float)
0:185  Function Definition: iTDDistributionGGX(vf3;vf3;f1; ( global highp float)
0:185    Function Parameters: 
0:185      'normal' ( in highp 3-component vector of float)
0:185      'half_vector' ( in highp 3-component vector of float)
0:185      'roughness2' ( in highp float)
0:?     Sequence
0:189      Sequence
0:189        move second child to first child ( temp highp float)
0:189          'NdotH' ( temp highp float)
0:189          clamp ( global highp float)
0:189            dot-product ( global highp float)
0:189              'normal' ( in highp 3-component vector of float)
0:189              'half_vector' ( in highp 3-component vector of float)
0:189            Constant:
0:189              1.0000000000000e-06
0:189            Constant:
0:189              1.000000
0:191      Sequence
0:191        move second child to first child ( temp highp float)
0:191          'alpha2' ( temp highp float)
0:191          component-wise multiply ( temp highp float)
0:191            'roughness2' ( in highp float)
0:191            'roughness2' ( in highp float)
0:193      Sequence
0:193        move second child to first child ( temp highp float)
0:193          'denom' ( temp highp float)
0:193          add ( temp highp float)
0:193            component-wise multiply ( temp highp float)
0:193              component-wise multiply ( temp highp float)
0:193                'NdotH' ( temp highp float)
0:193                'NdotH' ( temp highp float)
0:193              subtract ( temp highp float)
0:193                'alpha2' ( temp highp float)
0:193                Constant:
0:193                  1.000000
0:193            Constant:
0:193              1.000000
0:194      move second child to first child ( temp highp float)
0:194        'denom' ( temp highp float)
0:194        max ( global highp float)
0:194          Constant:
0:194            1.0000000000000e-08
0:194          'denom' ( temp highp float)
0:195      Branch: Return with expression
0:195        divide ( temp highp float)
0:195          'alpha2' ( temp highp float)
0:195          component-wise multiply ( temp highp float)
0:195            component-wise multiply ( temp highp float)
0:195              Constant:
0:195                3.141593
0:195              'denom' ( temp highp float)
0:195            'denom' ( temp highp float)
0:197  Function Definition: iTDCalcF(vf3;f1; ( global highp 3-component vector of float)
0:197    Function Parameters: 
0:197      'F0' ( in highp 3-component vector of float)
0:197      'VdotH' ( in highp float)
0:198    Sequence
0:198      Branch: Return with expression
0:198        add ( temp highp 3-component vector of float)
0:198          'F0' ( in highp 3-component vector of float)
0:198          vector-scale ( temp highp 3-component vector of float)
0:198            subtract ( temp highp 3-component vector of float)
0:198              Constant:
0:198                1.000000
0:198                1.000000
0:198                1.000000
0:198              'F0' ( in highp 3-component vector of float)
0:198            pow ( global highp float)
0:198              Constant:
0:198                2.000000
0:198              component-wise multiply ( temp highp float)
0:198                subtract ( temp highp float)
0:198                  component-wise multiply ( temp highp float)
0:198                    Constant:
0:198                      -5.554730
0:198                    'VdotH' ( in highp float)
0:198                  Constant:
0:198                    6.983160
0:198                'VdotH' ( in highp float)
0:201  Function Definition: iTDCalcG(f1;f1;f1; ( global highp float)
0:201    Function Parameters: 
0:201      'NdotL' ( in highp float)
0:201      'NdotV' ( in highp float)
0:201      'k' ( in highp float)
0:202    Sequence
0:202      Sequence
0:202        move second child to first child ( temp highp float)
0:202          'Gl' ( temp highp float)
0:202          divide ( temp highp float)
0:202            Constant:
0:202              1.000000
0:202            add ( temp highp float)
0:202              component-wise multiply ( temp highp float)
0:202                'NdotL' ( in highp float)
0:202                subtract ( temp highp float)
0:202                  Constant:
0:202                    1.000000
0:202                  'k' ( in highp float)
0:202              'k' ( in highp float)
0:203      Sequence
0:203        move second child to first child ( temp highp float)
0:203          'Gv' ( temp highp float)
0:203          divide ( temp highp float)
0:203            Constant:
0:203              1.000000
0:203            add ( temp highp float)
0:203              component-wise multiply ( temp highp float)
0:203                'NdotV' ( in highp float)
0:203                subtract ( temp highp float)
0:203                  Constant:
0:203                    1.000000
0:203                  'k' ( in highp float)
0:203              'k' ( in highp float)
0:204      Branch: Return with expression
0:204        component-wise multiply ( temp highp float)
0:204          'Gl' ( temp highp float)
0:204          'Gv' ( temp highp float)
0:207  Function Definition: TDLightingPBR(i1;vf3;vf3;vf3;vf3;f1;vf3;vf3;f1; ( global structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:207    Function Parameters: 
0:207      'index' ( in highp int)
0:207      'diffuseColor' ( in highp 3-component vector of float)
0:207      'specularColor' ( in highp 3-component vector of float)
0:207      'worldSpacePos' ( in highp 3-component vector of float)
0:207      'normal' ( in highp 3-component vector of float)
0:207      'shadowStrength' ( in highp float)
0:207      'shadowColor' ( in highp 3-component vector of float)
0:207      'camVector' ( in highp 3-component vector of float)
0:207      'roughness' ( in highp float)
0:?     Sequence
0:210      Branch: Return with expression
0:210        'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:213  Function Definition: TDLightingPBR(vf3;vf3;f1;i1;vf3;vf3;vf3;vf3;f1;vf3;vf3;f1; ( global void)
0:213    Function Parameters: 
0:213      'diffuseContrib' ( inout highp 3-component vector of float)
0:213      'specularContrib' ( inout highp 3-component vector of float)
0:213      'shadowStrengthOut' ( inout highp float)
0:213      'index' ( in highp int)
0:213      'diffuseColor' ( in highp 3-component vector of float)
0:213      'specularColor' ( in highp 3-component vector of float)
0:213      'worldSpacePos' ( in highp 3-component vector of float)
0:213      'normal' ( in highp 3-component vector of float)
0:213      'shadowStrength' ( in highp float)
0:213      'shadowColor' ( in highp 3-component vector of float)
0:213      'camVector' ( in highp 3-component vector of float)
0:213      'roughness' ( in highp float)
0:215    Sequence
0:215      Sequence
0:215        move second child to first child ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:215          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:215          Function Call: TDLightingPBR(i1;vf3;vf3;vf3;vf3;f1;vf3;vf3;f1; ( global structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:215            'index' ( in highp int)
0:215            'diffuseColor' ( in highp 3-component vector of float)
0:215            'specularColor' ( in highp 3-component vector of float)
0:215            'worldSpacePos' ( in highp 3-component vector of float)
0:215            'normal' ( in highp 3-component vector of float)
0:215            'shadowStrength' ( in highp float)
0:215            'shadowColor' ( in highp 3-component vector of float)
0:215            'camVector' ( in highp 3-component vector of float)
0:215            'roughness' ( in highp float)
0:215      move second child to first child ( temp highp 3-component vector of float)
0:215        'diffuseContrib' ( inout highp 3-component vector of float)
0:215        diffuse: direct index for structure ( global highp 3-component vector of float)
0:215          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:215          Constant:
0:215            0 (const int)
0:216      move second child to first child ( temp highp 3-component vector of float)
0:216        'specularContrib' ( inout highp 3-component vector of float)
0:216        specular: direct index for structure ( global highp 3-component vector of float)
0:216          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:216          Constant:
0:216            1 (const int)
0:217      move second child to first child ( temp highp float)
0:217        'shadowStrengthOut' ( inout highp float)
0:217        shadowStrength: direct index for structure ( global highp float)
0:217          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:217          Constant:
0:217            2 (const int)
0:220  Function Definition: TDLightingPBR(vf3;vf3;i1;vf3;vf3;vf3;vf3;f1;vf3;vf3;f1; ( global void)
0:220    Function Parameters: 
0:220      'diffuseContrib' ( inout highp 3-component vector of float)
0:220      'specularContrib' ( inout highp 3-component vector of float)
0:220      'index' ( in highp int)
0:220      'diffuseColor' ( in highp 3-component vector of float)
0:220      'specularColor' ( in highp 3-component vector of float)
0:220      'worldSpacePos' ( in highp 3-component vector of float)
0:220      'normal' ( in highp 3-component vector of float)
0:220      'shadowStrength' ( in highp float)
0:220      'shadowColor' ( in highp 3-component vector of float)
0:220      'camVector' ( in highp 3-component vector of float)
0:220      'roughness' ( in highp float)
0:222    Sequence
0:222      Sequence
0:222        move second child to first child ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:222          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:222          Function Call: TDLightingPBR(i1;vf3;vf3;vf3;vf3;f1;vf3;vf3;f1; ( global structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:222            'index' ( in highp int)
0:222            'diffuseColor' ( in highp 3-component vector of float)
0:222            'specularColor' ( in highp 3-component vector of float)
0:222            'worldSpacePos' ( in highp 3-component vector of float)
0:222            'normal' ( in highp 3-component vector of float)
0:222            'shadowStrength' ( in highp float)
0:222            'shadowColor' ( in highp 3-component vector of float)
0:222            'camVector' ( in highp 3-component vector of float)
0:222            'roughness' ( in highp float)
0:222      move second child to first child ( temp highp 3-component vector of float)
0:222        'diffuseContrib' ( inout highp 3-component vector of float)
0:222        diffuse: direct index for structure ( global highp 3-component vector of float)
0:222          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:222          Constant:
0:222            0 (const int)
0:223      move second child to first child ( temp highp 3-component vector of float)
0:223        'specularContrib' ( inout highp 3-component vector of float)
0:223        specular: direct index for structure ( global highp 3-component vector of float)
0:223          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:223          Constant:
0:223            1 (const int)
0:226  Function Definition: TDEnvLightingPBR(i1;vf3;vf3;vf3;vf3;f1;f1; ( global structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:226    Function Parameters: 
0:226      'index' ( in highp int)
0:226      'diffuseColor' ( in highp 3-component vector of float)
0:226      'specularColor' ( in highp 3-component vector of float)
0:226      'normal' ( in highp 3-component vector of float)
0:226      'camVector' ( in highp 3-component vector of float)
0:226      'roughness' ( in highp float)
0:226      'ambientOcclusion' ( in highp float)
0:?     Sequence
0:229      Branch: Return with expression
0:229        'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:232  Function Definition: TDEnvLightingPBR(vf3;vf3;i1;vf3;vf3;vf3;vf3;f1;f1; ( global void)
0:232    Function Parameters: 
0:232      'diffuseContrib' ( inout highp 3-component vector of float)
0:232      'specularContrib' ( inout highp 3-component vector of float)
0:232      'index' ( in highp int)
0:232      'diffuseColor' ( in highp 3-component vector of float)
0:232      'specularColor' ( in highp 3-component vector of float)
0:232      'normal' ( in highp 3-component vector of float)
0:232      'camVector' ( in highp 3-component vector of float)
0:232      'roughness' ( in highp float)
0:232      'ambientOcclusion' ( in highp float)
0:234    Sequence
0:234      Sequence
0:234        move second child to first child ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:234          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:234          Function Call: TDEnvLightingPBR(i1;vf3;vf3;vf3;vf3;f1;f1; ( global structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:234            'index' ( in highp int)
0:234            'diffuseColor' ( in highp 3-component vector of float)
0:234            'specularColor' ( in highp 3-component vector of float)
0:234            'normal' ( in highp 3-component vector of float)
0:234            'camVector' ( in highp 3-component vector of float)
0:234            'roughness' ( in highp float)
0:234            'ambientOcclusion' ( in highp float)
0:235      move second child to first child ( temp highp 3-component vector of float)
0:235        'diffuseContrib' ( inout highp 3-component vector of float)
0:235        diffuse: direct index for structure ( global highp 3-component vector of float)
0:235          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:235          Constant:
0:235            0 (const int)
0:236      move second child to first child ( temp highp 3-component vector of float)
0:236        'specularContrib' ( inout highp 3-component vector of float)
0:236        specular: direct index for structure ( global highp 3-component vector of float)
0:236          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:236          Constant:
0:236            1 (const int)
0:239  Function Definition: TDLighting(i1;vf3;vf3;f1;vf3;vf3;f1;f1; ( global structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:239    Function Parameters: 
0:239      'index' ( in highp int)
0:239      'worldSpacePos' ( in highp 3-component vector of float)
0:239      'normal' ( in highp 3-component vector of float)
0:239      'shadowStrength' ( in highp float)
0:239      'shadowColor' ( in highp 3-component vector of float)
0:239      'camVector' ( in highp 3-component vector of float)
0:239      'shininess' ( in highp float)
0:239      'shininess2' ( in highp float)
0:?     Sequence
0:242      switch
0:242      condition
0:242        'index' ( in highp int)
0:242      body
0:242        Sequence
0:244          default: 
0:?           Sequence
0:245            move second child to first child ( temp highp 3-component vector of float)
0:245              diffuse: direct index for structure ( global highp 3-component vector of float)
0:245                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:245                Constant:
0:245                  0 (const int)
0:245              Constant:
0:245                0.000000
0:245                0.000000
0:245                0.000000
0:246            move second child to first child ( temp highp 3-component vector of float)
0:246              specular: direct index for structure ( global highp 3-component vector of float)
0:246                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:246                Constant:
0:246                  1 (const int)
0:246              Constant:
0:246                0.000000
0:246                0.000000
0:246                0.000000
0:247            move second child to first child ( temp highp 3-component vector of float)
0:247              specular2: direct index for structure ( global highp 3-component vector of float)
0:247                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:247                Constant:
0:247                  2 (const int)
0:247              Constant:
0:247                0.000000
0:247                0.000000
0:247                0.000000
0:248            move second child to first child ( temp highp float)
0:248              shadowStrength: direct index for structure ( global highp float)
0:248                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:248                Constant:
0:248                  3 (const int)
0:248              Constant:
0:248                0.000000
0:249            Branch: Break
0:251      Branch: Return with expression
0:251        'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:254  Function Definition: TDLighting(vf3;vf3;vf3;f1;i1;vf3;vf3;f1;vf3;vf3;f1;f1; ( global void)
0:254    Function Parameters: 
0:254      'diffuseContrib' ( inout highp 3-component vector of float)
0:254      'specularContrib' ( inout highp 3-component vector of float)
0:254      'specularContrib2' ( inout highp 3-component vector of float)
0:254      'shadowStrengthOut' ( inout highp float)
0:254      'index' ( in highp int)
0:254      'worldSpacePos' ( in highp 3-component vector of float)
0:254      'normal' ( in highp 3-component vector of float)
0:254      'shadowStrength' ( in highp float)
0:254      'shadowColor' ( in highp 3-component vector of float)
0:254      'camVector' ( in highp 3-component vector of float)
0:254      'shininess' ( in highp float)
0:254      'shininess2' ( in highp float)
0:?     Sequence
0:257      switch
0:257      condition
0:257        'index' ( in highp int)
0:257      body
0:257        Sequence
0:259          default: 
0:?           Sequence
0:260            move second child to first child ( temp highp 3-component vector of float)
0:260              diffuse: direct index for structure ( global highp 3-component vector of float)
0:260                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:260                Constant:
0:260                  0 (const int)
0:260              Constant:
0:260                0.000000
0:260                0.000000
0:260                0.000000
0:261            move second child to first child ( temp highp 3-component vector of float)
0:261              specular: direct index for structure ( global highp 3-component vector of float)
0:261                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:261                Constant:
0:261                  1 (const int)
0:261              Constant:
0:261                0.000000
0:261                0.000000
0:261                0.000000
0:262            move second child to first child ( temp highp 3-component vector of float)
0:262              specular2: direct index for structure ( global highp 3-component vector of float)
0:262                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:262                Constant:
0:262                  2 (const int)
0:262              Constant:
0:262                0.000000
0:262                0.000000
0:262                0.000000
0:263            move second child to first child ( temp highp float)
0:263              shadowStrength: direct index for structure ( global highp float)
0:263                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:263                Constant:
0:263                  3 (const int)
0:263              Constant:
0:263                0.000000
0:264            Branch: Break
0:266      move second child to first child ( temp highp 3-component vector of float)
0:266        'diffuseContrib' ( inout highp 3-component vector of float)
0:266        diffuse: direct index for structure ( global highp 3-component vector of float)
0:266          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:266          Constant:
0:266            0 (const int)
0:267      move second child to first child ( temp highp 3-component vector of float)
0:267        'specularContrib' ( inout highp 3-component vector of float)
0:267        specular: direct index for structure ( global highp 3-component vector of float)
0:267          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:267          Constant:
0:267            1 (const int)
0:268      move second child to first child ( temp highp 3-component vector of float)
0:268        'specularContrib2' ( inout highp 3-component vector of float)
0:268        specular2: direct index for structure ( global highp 3-component vector of float)
0:268          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:268          Constant:
0:268            2 (const int)
0:269      move second child to first child ( temp highp float)
0:269        'shadowStrengthOut' ( inout highp float)
0:269        shadowStrength: direct index for structure ( global highp float)
0:269          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:269          Constant:
0:269            3 (const int)
0:272  Function Definition: TDLighting(vf3;vf3;vf3;i1;vf3;vf3;f1;vf3;vf3;f1;f1; ( global void)
0:272    Function Parameters: 
0:272      'diffuseContrib' ( inout highp 3-component vector of float)
0:272      'specularContrib' ( inout highp 3-component vector of float)
0:272      'specularContrib2' ( inout highp 3-component vector of float)
0:272      'index' ( in highp int)
0:272      'worldSpacePos' ( in highp 3-component vector of float)
0:272      'normal' ( in highp 3-component vector of float)
0:272      'shadowStrength' ( in highp float)
0:272      'shadowColor' ( in highp 3-component vector of float)
0:272      'camVector' ( in highp 3-component vector of float)
0:272      'shininess' ( in highp float)
0:272      'shininess2' ( in highp float)
0:?     Sequence
0:275      switch
0:275      condition
0:275        'index' ( in highp int)
0:275      body
0:275        Sequence
0:277          default: 
0:?           Sequence
0:278            move second child to first child ( temp highp 3-component vector of float)
0:278              diffuse: direct index for structure ( global highp 3-component vector of float)
0:278                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:278                Constant:
0:278                  0 (const int)
0:278              Constant:
0:278                0.000000
0:278                0.000000
0:278                0.000000
0:279            move second child to first child ( temp highp 3-component vector of float)
0:279              specular: direct index for structure ( global highp 3-component vector of float)
0:279                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:279                Constant:
0:279                  1 (const int)
0:279              Constant:
0:279                0.000000
0:279                0.000000
0:279                0.000000
0:280            move second child to first child ( temp highp 3-component vector of float)
0:280              specular2: direct index for structure ( global highp 3-component vector of float)
0:280                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:280                Constant:
0:280                  2 (const int)
0:280              Constant:
0:280                0.000000
0:280                0.000000
0:280                0.000000
0:281            move second child to first child ( temp highp float)
0:281              shadowStrength: direct index for structure ( global highp float)
0:281                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:281                Constant:
0:281                  3 (const int)
0:281              Constant:
0:281                0.000000
0:282            Branch: Break
0:284      move second child to first child ( temp highp 3-component vector of float)
0:284        'diffuseContrib' ( inout highp 3-component vector of float)
0:284        diffuse: direct index for structure ( global highp 3-component vector of float)
0:284          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:284          Constant:
0:284            0 (const int)
0:285      move second child to first child ( temp highp 3-component vector of float)
0:285        'specularContrib' ( inout highp 3-component vector of float)
0:285        specular: direct index for structure ( global highp 3-component vector of float)
0:285          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:285          Constant:
0:285            1 (const int)
0:286      move second child to first child ( temp highp 3-component vector of float)
0:286        'specularContrib2' ( inout highp 3-component vector of float)
0:286        specular2: direct index for structure ( global highp 3-component vector of float)
0:286          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:286          Constant:
0:286            2 (const int)
0:289  Function Definition: TDLighting(vf3;vf3;i1;vf3;vf3;f1;vf3;vf3;f1; ( global void)
0:289    Function Parameters: 
0:289      'diffuseContrib' ( inout highp 3-component vector of float)
0:289      'specularContrib' ( inout highp 3-component vector of float)
0:289      'index' ( in highp int)
0:289      'worldSpacePos' ( in highp 3-component vector of float)
0:289      'normal' ( in highp 3-component vector of float)
0:289      'shadowStrength' ( in highp float)
0:289      'shadowColor' ( in highp 3-component vector of float)
0:289      'camVector' ( in highp 3-component vector of float)
0:289      'shininess' ( in highp float)
0:?     Sequence
0:292      switch
0:292      condition
0:292        'index' ( in highp int)
0:292      body
0:292        Sequence
0:294          default: 
0:?           Sequence
0:295            move second child to first child ( temp highp 3-component vector of float)
0:295              diffuse: direct index for structure ( global highp 3-component vector of float)
0:295                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:295                Constant:
0:295                  0 (const int)
0:295              Constant:
0:295                0.000000
0:295                0.000000
0:295                0.000000
0:296            move second child to first child ( temp highp 3-component vector of float)
0:296              specular: direct index for structure ( global highp 3-component vector of float)
0:296                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:296                Constant:
0:296                  1 (const int)
0:296              Constant:
0:296                0.000000
0:296                0.000000
0:296                0.000000
0:297            move second child to first child ( temp highp 3-component vector of float)
0:297              specular2: direct index for structure ( global highp 3-component vector of float)
0:297                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:297                Constant:
0:297                  2 (const int)
0:297              Constant:
0:297                0.000000
0:297                0.000000
0:297                0.000000
0:298            move second child to first child ( temp highp float)
0:298              shadowStrength: direct index for structure ( global highp float)
0:298                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:298                Constant:
0:298                  3 (const int)
0:298              Constant:
0:298                0.000000
0:299            Branch: Break
0:301      move second child to first child ( temp highp 3-component vector of float)
0:301        'diffuseContrib' ( inout highp 3-component vector of float)
0:301        diffuse: direct index for structure ( global highp 3-component vector of float)
0:301          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:301          Constant:
0:301            0 (const int)
0:302      move second child to first child ( temp highp 3-component vector of float)
0:302        'specularContrib' ( inout highp 3-component vector of float)
0:302        specular: direct index for structure ( global highp 3-component vector of float)
0:302          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:302          Constant:
0:302            1 (const int)
0:305  Function Definition: TDLighting(vf3;vf3;vf3;i1;vf3;vf3;vf3;f1;f1; ( global void)
0:305    Function Parameters: 
0:305      'diffuseContrib' ( inout highp 3-component vector of float)
0:305      'specularContrib' ( inout highp 3-component vector of float)
0:305      'specularContrib2' ( inout highp 3-component vector of float)
0:305      'index' ( in highp int)
0:305      'worldSpacePos' ( in highp 3-component vector of float)
0:305      'normal' ( in highp 3-component vector of float)
0:305      'camVector' ( in highp 3-component vector of float)
0:305      'shininess' ( in highp float)
0:305      'shininess2' ( in highp float)
0:?     Sequence
0:308      switch
0:308      condition
0:308        'index' ( in highp int)
0:308      body
0:308        Sequence
0:310          default: 
0:?           Sequence
0:311            move second child to first child ( temp highp 3-component vector of float)
0:311              diffuse: direct index for structure ( global highp 3-component vector of float)
0:311                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:311                Constant:
0:311                  0 (const int)
0:311              Constant:
0:311                0.000000
0:311                0.000000
0:311                0.000000
0:312            move second child to first child ( temp highp 3-component vector of float)
0:312              specular: direct index for structure ( global highp 3-component vector of float)
0:312                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:312                Constant:
0:312                  1 (const int)
0:312              Constant:
0:312                0.000000
0:312                0.000000
0:312                0.000000
0:313            move second child to first child ( temp highp 3-component vector of float)
0:313              specular2: direct index for structure ( global highp 3-component vector of float)
0:313                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:313                Constant:
0:313                  2 (const int)
0:313              Constant:
0:313                0.000000
0:313                0.000000
0:313                0.000000
0:314            move second child to first child ( temp highp float)
0:314              shadowStrength: direct index for structure ( global highp float)
0:314                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:314                Constant:
0:314                  3 (const int)
0:314              Constant:
0:314                0.000000
0:315            Branch: Break
0:317      move second child to first child ( temp highp 3-component vector of float)
0:317        'diffuseContrib' ( inout highp 3-component vector of float)
0:317        diffuse: direct index for structure ( global highp 3-component vector of float)
0:317          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:317          Constant:
0:317            0 (const int)
0:318      move second child to first child ( temp highp 3-component vector of float)
0:318        'specularContrib' ( inout highp 3-component vector of float)
0:318        specular: direct index for structure ( global highp 3-component vector of float)
0:318          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:318          Constant:
0:318            1 (const int)
0:319      move second child to first child ( temp highp 3-component vector of float)
0:319        'specularContrib2' ( inout highp 3-component vector of float)
0:319        specular2: direct index for structure ( global highp 3-component vector of float)
0:319          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:319          Constant:
0:319            2 (const int)
0:322  Function Definition: TDLighting(vf3;vf3;i1;vf3;vf3;vf3;f1; ( global void)
0:322    Function Parameters: 
0:322      'diffuseContrib' ( inout highp 3-component vector of float)
0:322      'specularContrib' ( inout highp 3-component vector of float)
0:322      'index' ( in highp int)
0:322      'worldSpacePos' ( in highp 3-component vector of float)
0:322      'normal' ( in highp 3-component vector of float)
0:322      'camVector' ( in highp 3-component vector of float)
0:322      'shininess' ( in highp float)
0:?     Sequence
0:325      switch
0:325      condition
0:325        'index' ( in highp int)
0:325      body
0:325        Sequence
0:327          default: 
0:?           Sequence
0:328            move second child to first child ( temp highp 3-component vector of float)
0:328              diffuse: direct index for structure ( global highp 3-component vector of float)
0:328                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:328                Constant:
0:328                  0 (const int)
0:328              Constant:
0:328                0.000000
0:328                0.000000
0:328                0.000000
0:329            move second child to first child ( temp highp 3-component vector of float)
0:329              specular: direct index for structure ( global highp 3-component vector of float)
0:329                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:329                Constant:
0:329                  1 (const int)
0:329              Constant:
0:329                0.000000
0:329                0.000000
0:329                0.000000
0:330            move second child to first child ( temp highp 3-component vector of float)
0:330              specular2: direct index for structure ( global highp 3-component vector of float)
0:330                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:330                Constant:
0:330                  2 (const int)
0:330              Constant:
0:330                0.000000
0:330                0.000000
0:330                0.000000
0:331            move second child to first child ( temp highp float)
0:331              shadowStrength: direct index for structure ( global highp float)
0:331                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:331                Constant:
0:331                  3 (const int)
0:331              Constant:
0:331                0.000000
0:332            Branch: Break
0:334      move second child to first child ( temp highp 3-component vector of float)
0:334        'diffuseContrib' ( inout highp 3-component vector of float)
0:334        diffuse: direct index for structure ( global highp 3-component vector of float)
0:334          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:334          Constant:
0:334            0 (const int)
0:335      move second child to first child ( temp highp 3-component vector of float)
0:335        'specularContrib' ( inout highp 3-component vector of float)
0:335        specular: direct index for structure ( global highp 3-component vector of float)
0:335          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:335          Constant:
0:335            1 (const int)
0:338  Function Definition: TDLighting(vf3;i1;vf3;vf3; ( global void)
0:338    Function Parameters: 
0:338      'diffuseContrib' ( inout highp 3-component vector of float)
0:338      'index' ( in highp int)
0:338      'worldSpacePos' ( in highp 3-component vector of float)
0:338      'normal' ( in highp 3-component vector of float)
0:?     Sequence
0:341      switch
0:341      condition
0:341        'index' ( in highp int)
0:341      body
0:341        Sequence
0:343          default: 
0:?           Sequence
0:344            move second child to first child ( temp highp 3-component vector of float)
0:344              diffuse: direct index for structure ( global highp 3-component vector of float)
0:344                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:344                Constant:
0:344                  0 (const int)
0:344              Constant:
0:344                0.000000
0:344                0.000000
0:344                0.000000
0:345            move second child to first child ( temp highp 3-component vector of float)
0:345              specular: direct index for structure ( global highp 3-component vector of float)
0:345                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:345                Constant:
0:345                  1 (const int)
0:345              Constant:
0:345                0.000000
0:345                0.000000
0:345                0.000000
0:346            move second child to first child ( temp highp 3-component vector of float)
0:346              specular2: direct index for structure ( global highp 3-component vector of float)
0:346                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:346                Constant:
0:346                  2 (const int)
0:346              Constant:
0:346                0.000000
0:346                0.000000
0:346                0.000000
0:347            move second child to first child ( temp highp float)
0:347              shadowStrength: direct index for structure ( global highp float)
0:347                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:347                Constant:
0:347                  3 (const int)
0:347              Constant:
0:347                0.000000
0:348            Branch: Break
0:350      move second child to first child ( temp highp 3-component vector of float)
0:350        'diffuseContrib' ( inout highp 3-component vector of float)
0:350        diffuse: direct index for structure ( global highp 3-component vector of float)
0:350          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:350          Constant:
0:350            0 (const int)
0:353  Function Definition: TDLighting(vf3;i1;vf3;vf3;f1;vf3; ( global void)
0:353    Function Parameters: 
0:353      'diffuseContrib' ( inout highp 3-component vector of float)
0:353      'index' ( in highp int)
0:353      'worldSpacePos' ( in highp 3-component vector of float)
0:353      'normal' ( in highp 3-component vector of float)
0:353      'shadowStrength' ( in highp float)
0:353      'shadowColor' ( in highp 3-component vector of float)
0:?     Sequence
0:356      switch
0:356      condition
0:356        'index' ( in highp int)
0:356      body
0:356        Sequence
0:358          default: 
0:?           Sequence
0:359            move second child to first child ( temp highp 3-component vector of float)
0:359              diffuse: direct index for structure ( global highp 3-component vector of float)
0:359                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:359                Constant:
0:359                  0 (const int)
0:359              Constant:
0:359                0.000000
0:359                0.000000
0:359                0.000000
0:360            move second child to first child ( temp highp 3-component vector of float)
0:360              specular: direct index for structure ( global highp 3-component vector of float)
0:360                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:360                Constant:
0:360                  1 (const int)
0:360              Constant:
0:360                0.000000
0:360                0.000000
0:360                0.000000
0:361            move second child to first child ( temp highp 3-component vector of float)
0:361              specular2: direct index for structure ( global highp 3-component vector of float)
0:361                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:361                Constant:
0:361                  2 (const int)
0:361              Constant:
0:361                0.000000
0:361                0.000000
0:361                0.000000
0:362            move second child to first child ( temp highp float)
0:362              shadowStrength: direct index for structure ( global highp float)
0:362                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:362                Constant:
0:362                  3 (const int)
0:362              Constant:
0:362                0.000000
0:363            Branch: Break
0:365      move second child to first child ( temp highp 3-component vector of float)
0:365        'diffuseContrib' ( inout highp 3-component vector of float)
0:365        diffuse: direct index for structure ( global highp 3-component vector of float)
0:365          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:365          Constant:
0:365            0 (const int)
0:367  Function Definition: TDProjMap(i1;vf3;vf4; ( global highp 4-component vector of float)
0:367    Function Parameters: 
0:367      'index' ( in highp int)
0:367      'worldSpacePos' ( in highp 3-component vector of float)
0:367      'defaultColor' ( in highp 4-component vector of float)
0:368    Sequence
0:368      switch
0:368      condition
0:368        'index' ( in highp int)
0:368      body
0:368        Sequence
0:370          default: 
0:?           Sequence
0:370            Branch: Return with expression
0:370              'defaultColor' ( in highp 4-component vector of float)
0:373  Function Definition: TDFog(vf4;vf3;i1; ( global highp 4-component vector of float)
0:373    Function Parameters: 
0:373      'color' ( in highp 4-component vector of float)
0:373      'lightingSpacePosition' ( in highp 3-component vector of float)
0:373      'cameraIndex' ( in highp int)
0:374    Sequence
0:374      switch
0:374      condition
0:374        'cameraIndex' ( in highp int)
0:374      body
0:374        Sequence
0:375          default: 
0:376          case:  with expression
0:376            Constant:
0:376              0 (const int)
0:?           Sequence
0:378            Sequence
0:378              Branch: Return with expression
0:378                'color' ( in highp 4-component vector of float)
0:382  Function Definition: TDFog(vf4;vf3; ( global highp 4-component vector of float)
0:382    Function Parameters: 
0:382      'color' ( in highp 4-component vector of float)
0:382      'lightingSpacePosition' ( in highp 3-component vector of float)
0:384    Sequence
0:384      Branch: Return with expression
0:384        Function Call: TDFog(vf4;vf3;i1; ( global highp 4-component vector of float)
0:384          'color' ( in highp 4-component vector of float)
0:384          'lightingSpacePosition' ( in highp 3-component vector of float)
0:384          Constant:
0:384            0 (const int)
0:386  Function Definition: TDInstanceTexCoord(i1;vf3; ( global highp 3-component vector of float)
0:386    Function Parameters: 
0:386      'index' ( in highp int)
0:386      't' ( in highp 3-component vector of float)
0:?     Sequence
0:388      Sequence
0:388        move second child to first child ( temp highp int)
0:388          'coord' ( temp highp int)
0:388          'index' ( in highp int)
0:389      Sequence
0:389        move second child to first child ( temp highp 4-component vector of float)
0:389          'samp' ( temp highp 4-component vector of float)
0:389          textureFetch ( global highp 4-component vector of float)
0:389            'sTDInstanceTexCoord' (layout( binding=16) uniform highp samplerBuffer)
0:389            'coord' ( temp highp int)
0:390      move second child to first child ( temp highp float)
0:390        direct index ( temp highp float)
0:390          'v' ( temp highp 3-component vector of float)
0:390          Constant:
0:390            0 (const int)
0:390        direct index ( temp highp float)
0:390          't' ( in highp 3-component vector of float)
0:390          Constant:
0:390            0 (const int)
0:391      move second child to first child ( temp highp float)
0:391        direct index ( temp highp float)
0:391          'v' ( temp highp 3-component vector of float)
0:391          Constant:
0:391            1 (const int)
0:391        direct index ( temp highp float)
0:391          't' ( in highp 3-component vector of float)
0:391          Constant:
0:391            1 (const int)
0:392      move second child to first child ( temp highp float)
0:392        direct index ( temp highp float)
0:392          'v' ( temp highp 3-component vector of float)
0:392          Constant:
0:392            2 (const int)
0:392        direct index ( temp highp float)
0:392          'samp' ( temp highp 4-component vector of float)
0:392          Constant:
0:392            0 (const int)
0:393      move second child to first child ( temp highp 3-component vector of float)
0:393        vector swizzle ( temp highp 3-component vector of float)
0:393          't' ( in highp 3-component vector of float)
0:393          Sequence
0:393            Constant:
0:393              0 (const int)
0:393            Constant:
0:393              1 (const int)
0:393            Constant:
0:393              2 (const int)
0:393        vector swizzle ( temp highp 3-component vector of float)
0:393          'v' ( temp highp 3-component vector of float)
0:393          Sequence
0:393            Constant:
0:393              0 (const int)
0:393            Constant:
0:393              1 (const int)
0:393            Constant:
0:393              2 (const int)
0:394      Branch: Return with expression
0:394        't' ( in highp 3-component vector of float)
0:396  Function Definition: TDInstanceActive(i1; ( global bool)
0:396    Function Parameters: 
0:396      'index' ( in highp int)
0:397    Sequence
0:397      subtract second child into first child ( temp highp int)
0:397        'index' ( in highp int)
0:397        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:397          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:397          Constant:
0:397            0 (const uint)
0:399      Sequence
0:399        move second child to first child ( temp highp int)
0:399          'coord' ( temp highp int)
0:399          'index' ( in highp int)
0:400      Sequence
0:400        move second child to first child ( temp highp 4-component vector of float)
0:400          'samp' ( temp highp 4-component vector of float)
0:400          textureFetch ( global highp 4-component vector of float)
0:400            'sTDInstanceT' (layout( binding=15) uniform highp samplerBuffer)
0:400            'coord' ( temp highp int)
0:401      move second child to first child ( temp highp float)
0:401        'v' ( temp highp float)
0:401        direct index ( temp highp float)
0:401          'samp' ( temp highp 4-component vector of float)
0:401          Constant:
0:401            0 (const int)
0:402      Branch: Return with expression
0:402        Compare Not Equal ( temp bool)
0:402          'v' ( temp highp float)
0:402          Constant:
0:402            0.000000
0:404  Function Definition: iTDInstanceTranslate(i1;b1; ( global highp 3-component vector of float)
0:404    Function Parameters: 
0:404      'index' ( in highp int)
0:404      'instanceActive' ( out bool)
0:405    Sequence
0:405      Sequence
0:405        move second child to first child ( temp highp int)
0:405          'origIndex' ( temp highp int)
0:405          'index' ( in highp int)
0:406      subtract second child into first child ( temp highp int)
0:406        'index' ( in highp int)
0:406        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:406          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:406          Constant:
0:406            0 (const uint)
0:408      Sequence
0:408        move second child to first child ( temp highp int)
0:408          'coord' ( temp highp int)
0:408          'index' ( in highp int)
0:409      Sequence
0:409        move second child to first child ( temp highp 4-component vector of float)
0:409          'samp' ( temp highp 4-component vector of float)
0:409          textureFetch ( global highp 4-component vector of float)
0:409            'sTDInstanceT' (layout( binding=15) uniform highp samplerBuffer)
0:409            'coord' ( temp highp int)
0:410      move second child to first child ( temp highp float)
0:410        direct index ( temp highp float)
0:410          'v' ( temp highp 3-component vector of float)
0:410          Constant:
0:410            0 (const int)
0:410        direct index ( temp highp float)
0:410          'samp' ( temp highp 4-component vector of float)
0:410          Constant:
0:410            1 (const int)
0:411      move second child to first child ( temp highp float)
0:411        direct index ( temp highp float)
0:411          'v' ( temp highp 3-component vector of float)
0:411          Constant:
0:411            1 (const int)
0:411        direct index ( temp highp float)
0:411          'samp' ( temp highp 4-component vector of float)
0:411          Constant:
0:411            2 (const int)
0:412      move second child to first child ( temp highp float)
0:412        direct index ( temp highp float)
0:412          'v' ( temp highp 3-component vector of float)
0:412          Constant:
0:412            2 (const int)
0:412        direct index ( temp highp float)
0:412          'samp' ( temp highp 4-component vector of float)
0:412          Constant:
0:412            3 (const int)
0:413      move second child to first child ( temp bool)
0:413        'instanceActive' ( out bool)
0:413        Compare Not Equal ( temp bool)
0:413          direct index ( temp highp float)
0:413            'samp' ( temp highp 4-component vector of float)
0:413            Constant:
0:413              0 (const int)
0:413          Constant:
0:413            0.000000
0:414      Branch: Return with expression
0:414        'v' ( temp highp 3-component vector of float)
0:416  Function Definition: TDInstanceTranslate(i1; ( global highp 3-component vector of float)
0:416    Function Parameters: 
0:416      'index' ( in highp int)
0:417    Sequence
0:417      subtract second child into first child ( temp highp int)
0:417        'index' ( in highp int)
0:417        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:417          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:417          Constant:
0:417            0 (const uint)
0:419      Sequence
0:419        move second child to first child ( temp highp int)
0:419          'coord' ( temp highp int)
0:419          'index' ( in highp int)
0:420      Sequence
0:420        move second child to first child ( temp highp 4-component vector of float)
0:420          'samp' ( temp highp 4-component vector of float)
0:420          textureFetch ( global highp 4-component vector of float)
0:420            'sTDInstanceT' (layout( binding=15) uniform highp samplerBuffer)
0:420            'coord' ( temp highp int)
0:421      move second child to first child ( temp highp float)
0:421        direct index ( temp highp float)
0:421          'v' ( temp highp 3-component vector of float)
0:421          Constant:
0:421            0 (const int)
0:421        direct index ( temp highp float)
0:421          'samp' ( temp highp 4-component vector of float)
0:421          Constant:
0:421            1 (const int)
0:422      move second child to first child ( temp highp float)
0:422        direct index ( temp highp float)
0:422          'v' ( temp highp 3-component vector of float)
0:422          Constant:
0:422            1 (const int)
0:422        direct index ( temp highp float)
0:422          'samp' ( temp highp 4-component vector of float)
0:422          Constant:
0:422            2 (const int)
0:423      move second child to first child ( temp highp float)
0:423        direct index ( temp highp float)
0:423          'v' ( temp highp 3-component vector of float)
0:423          Constant:
0:423            2 (const int)
0:423        direct index ( temp highp float)
0:423          'samp' ( temp highp 4-component vector of float)
0:423          Constant:
0:423            3 (const int)
0:424      Branch: Return with expression
0:424        'v' ( temp highp 3-component vector of float)
0:426  Function Definition: TDInstanceRotateMat(i1; ( global highp 3X3 matrix of float)
0:426    Function Parameters: 
0:426      'index' ( in highp int)
0:427    Sequence
0:427      subtract second child into first child ( temp highp int)
0:427        'index' ( in highp int)
0:427        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:427          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:427          Constant:
0:427            0 (const uint)
0:428      Sequence
0:428        move second child to first child ( temp highp 3-component vector of float)
0:428          'v' ( temp highp 3-component vector of float)
0:428          Constant:
0:428            0.000000
0:428            0.000000
0:428            0.000000
0:429      Sequence
0:429        move second child to first child ( temp highp 3X3 matrix of float)
0:429          'm' ( temp highp 3X3 matrix of float)
0:429          Constant:
0:429            1.000000
0:429            0.000000
0:429            0.000000
0:429            0.000000
0:429            1.000000
0:429            0.000000
0:429            0.000000
0:429            0.000000
0:429            1.000000
0:433      Branch: Return with expression
0:433        'm' ( temp highp 3X3 matrix of float)
0:435  Function Definition: TDInstanceScale(i1; ( global highp 3-component vector of float)
0:435    Function Parameters: 
0:435      'index' ( in highp int)
0:436    Sequence
0:436      subtract second child into first child ( temp highp int)
0:436        'index' ( in highp int)
0:436        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:436          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:436          Constant:
0:436            0 (const uint)
0:437      Sequence
0:437        move second child to first child ( temp highp 3-component vector of float)
0:437          'v' ( temp highp 3-component vector of float)
0:437          Constant:
0:437            1.000000
0:437            1.000000
0:437            1.000000
0:438      Branch: Return with expression
0:438        'v' ( temp highp 3-component vector of float)
0:440  Function Definition: TDInstancePivot(i1; ( global highp 3-component vector of float)
0:440    Function Parameters: 
0:440      'index' ( in highp int)
0:441    Sequence
0:441      subtract second child into first child ( temp highp int)
0:441        'index' ( in highp int)
0:441        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:441          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:441          Constant:
0:441            0 (const uint)
0:442      Sequence
0:442        move second child to first child ( temp highp 3-component vector of float)
0:442          'v' ( temp highp 3-component vector of float)
0:442          Constant:
0:442            0.000000
0:442            0.000000
0:442            0.000000
0:443      Branch: Return with expression
0:443        'v' ( temp highp 3-component vector of float)
0:445  Function Definition: TDInstanceRotTo(i1; ( global highp 3-component vector of float)
0:445    Function Parameters: 
0:445      'index' ( in highp int)
0:446    Sequence
0:446      subtract second child into first child ( temp highp int)
0:446        'index' ( in highp int)
0:446        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:446          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:446          Constant:
0:446            0 (const uint)
0:447      Sequence
0:447        move second child to first child ( temp highp 3-component vector of float)
0:447          'v' ( temp highp 3-component vector of float)
0:447          Constant:
0:447            0.000000
0:447            0.000000
0:447            1.000000
0:448      Branch: Return with expression
0:448        'v' ( temp highp 3-component vector of float)
0:450  Function Definition: TDInstanceRotUp(i1; ( global highp 3-component vector of float)
0:450    Function Parameters: 
0:450      'index' ( in highp int)
0:451    Sequence
0:451      subtract second child into first child ( temp highp int)
0:451        'index' ( in highp int)
0:451        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:451          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:451          Constant:
0:451            0 (const uint)
0:452      Sequence
0:452        move second child to first child ( temp highp 3-component vector of float)
0:452          'v' ( temp highp 3-component vector of float)
0:452          Constant:
0:452            0.000000
0:452            1.000000
0:452            0.000000
0:453      Branch: Return with expression
0:453        'v' ( temp highp 3-component vector of float)
0:455  Function Definition: TDInstanceMat(i1; ( global highp 4X4 matrix of float)
0:455    Function Parameters: 
0:455      'id' ( in highp int)
0:456    Sequence
0:456      Sequence
0:456        move second child to first child ( temp bool)
0:456          'instanceActive' ( temp bool)
0:456          Constant:
0:456            true (const bool)
0:457      Sequence
0:457        move second child to first child ( temp highp 3-component vector of float)
0:457          't' ( temp highp 3-component vector of float)
0:457          Function Call: iTDInstanceTranslate(i1;b1; ( global highp 3-component vector of float)
0:457            'id' ( in highp int)
0:457            'instanceActive' ( temp bool)
0:458      Test condition and select ( temp void)
0:458        Condition
0:458        Negate conditional ( temp bool)
0:458          'instanceActive' ( temp bool)
0:458        true case
0:460        Sequence
0:460          Branch: Return with expression
0:460            Constant:
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:462      Sequence
0:462        move second child to first child ( temp highp 4X4 matrix of float)
0:462          'm' ( temp highp 4X4 matrix of float)
0:462          Constant:
0:462            1.000000
0:462            0.000000
0:462            0.000000
0:462            0.000000
0:462            0.000000
0:462            1.000000
0:462            0.000000
0:462            0.000000
0:462            0.000000
0:462            0.000000
0:462            1.000000
0:462            0.000000
0:462            0.000000
0:462            0.000000
0:462            0.000000
0:462            1.000000
0:464      Sequence
0:464        Sequence
0:464          move second child to first child ( temp highp 3-component vector of float)
0:464            'tt' ( temp highp 3-component vector of float)
0:464            't' ( temp highp 3-component vector of float)
0:465        add second child into first child ( temp highp float)
0:465          direct index ( temp highp float)
0:465            direct index ( temp highp 4-component vector of float)
0:465              'm' ( temp highp 4X4 matrix of float)
0:465              Constant:
0:465                3 (const int)
0:465            Constant:
0:465              0 (const int)
0:465          component-wise multiply ( temp highp float)
0:465            direct index ( temp highp float)
0:465              direct index ( temp highp 4-component vector of float)
0:465                'm' ( temp highp 4X4 matrix of float)
0:465                Constant:
0:465                  0 (const int)
0:465              Constant:
0:465                0 (const int)
0:465            direct index ( temp highp float)
0:465              'tt' ( temp highp 3-component vector of float)
0:465              Constant:
0:465                0 (const int)
0:466        add second child into first child ( temp highp float)
0:466          direct index ( temp highp float)
0:466            direct index ( temp highp 4-component vector of float)
0:466              'm' ( temp highp 4X4 matrix of float)
0:466              Constant:
0:466                3 (const int)
0:466            Constant:
0:466              1 (const int)
0:466          component-wise multiply ( temp highp float)
0:466            direct index ( temp highp float)
0:466              direct index ( temp highp 4-component vector of float)
0:466                'm' ( temp highp 4X4 matrix of float)
0:466                Constant:
0:466                  0 (const int)
0:466              Constant:
0:466                1 (const int)
0:466            direct index ( temp highp float)
0:466              'tt' ( temp highp 3-component vector of float)
0:466              Constant:
0:466                0 (const int)
0:467        add second child into first child ( temp highp float)
0:467          direct index ( temp highp float)
0:467            direct index ( temp highp 4-component vector of float)
0:467              'm' ( temp highp 4X4 matrix of float)
0:467              Constant:
0:467                3 (const int)
0:467            Constant:
0:467              2 (const int)
0:467          component-wise multiply ( temp highp float)
0:467            direct index ( temp highp float)
0:467              direct index ( temp highp 4-component vector of float)
0:467                'm' ( temp highp 4X4 matrix of float)
0:467                Constant:
0:467                  0 (const int)
0:467              Constant:
0:467                2 (const int)
0:467            direct index ( temp highp float)
0:467              'tt' ( temp highp 3-component vector of float)
0:467              Constant:
0:467                0 (const int)
0:468        add second child into first child ( temp highp float)
0:468          direct index ( temp highp float)
0:468            direct index ( temp highp 4-component vector of float)
0:468              'm' ( temp highp 4X4 matrix of float)
0:468              Constant:
0:468                3 (const int)
0:468            Constant:
0:468              3 (const int)
0:468          component-wise multiply ( temp highp float)
0:468            direct index ( temp highp float)
0:468              direct index ( temp highp 4-component vector of float)
0:468                'm' ( temp highp 4X4 matrix of float)
0:468                Constant:
0:468                  0 (const int)
0:468              Constant:
0:468                3 (const int)
0:468            direct index ( temp highp float)
0:468              'tt' ( temp highp 3-component vector of float)
0:468              Constant:
0:468                0 (const int)
0:469        add second child into first child ( temp highp float)
0:469          direct index ( temp highp float)
0:469            direct index ( temp highp 4-component vector of float)
0:469              'm' ( temp highp 4X4 matrix of float)
0:469              Constant:
0:469                3 (const int)
0:469            Constant:
0:469              0 (const int)
0:469          component-wise multiply ( temp highp float)
0:469            direct index ( temp highp float)
0:469              direct index ( temp highp 4-component vector of float)
0:469                'm' ( temp highp 4X4 matrix of float)
0:469                Constant:
0:469                  1 (const int)
0:469              Constant:
0:469                0 (const int)
0:469            direct index ( temp highp float)
0:469              'tt' ( temp highp 3-component vector of float)
0:469              Constant:
0:469                1 (const int)
0:470        add second child into first child ( temp highp float)
0:470          direct index ( temp highp float)
0:470            direct index ( temp highp 4-component vector of float)
0:470              'm' ( temp highp 4X4 matrix of float)
0:470              Constant:
0:470                3 (const int)
0:470            Constant:
0:470              1 (const int)
0:470          component-wise multiply ( temp highp float)
0:470            direct index ( temp highp float)
0:470              direct index ( temp highp 4-component vector of float)
0:470                'm' ( temp highp 4X4 matrix of float)
0:470                Constant:
0:470                  1 (const int)
0:470              Constant:
0:470                1 (const int)
0:470            direct index ( temp highp float)
0:470              'tt' ( temp highp 3-component vector of float)
0:470              Constant:
0:470                1 (const int)
0:471        add second child into first child ( temp highp float)
0:471          direct index ( temp highp float)
0:471            direct index ( temp highp 4-component vector of float)
0:471              'm' ( temp highp 4X4 matrix of float)
0:471              Constant:
0:471                3 (const int)
0:471            Constant:
0:471              2 (const int)
0:471          component-wise multiply ( temp highp float)
0:471            direct index ( temp highp float)
0:471              direct index ( temp highp 4-component vector of float)
0:471                'm' ( temp highp 4X4 matrix of float)
0:471                Constant:
0:471                  1 (const int)
0:471              Constant:
0:471                2 (const int)
0:471            direct index ( temp highp float)
0:471              'tt' ( temp highp 3-component vector of float)
0:471              Constant:
0:471                1 (const int)
0:472        add second child into first child ( temp highp float)
0:472          direct index ( temp highp float)
0:472            direct index ( temp highp 4-component vector of float)
0:472              'm' ( temp highp 4X4 matrix of float)
0:472              Constant:
0:472                3 (const int)
0:472            Constant:
0:472              3 (const int)
0:472          component-wise multiply ( temp highp float)
0:472            direct index ( temp highp float)
0:472              direct index ( temp highp 4-component vector of float)
0:472                'm' ( temp highp 4X4 matrix of float)
0:472                Constant:
0:472                  1 (const int)
0:472              Constant:
0:472                3 (const int)
0:472            direct index ( temp highp float)
0:472              'tt' ( temp highp 3-component vector of float)
0:472              Constant:
0:472                1 (const int)
0:473        add second child into first child ( temp highp float)
0:473          direct index ( temp highp float)
0:473            direct index ( temp highp 4-component vector of float)
0:473              'm' ( temp highp 4X4 matrix of float)
0:473              Constant:
0:473                3 (const int)
0:473            Constant:
0:473              0 (const int)
0:473          component-wise multiply ( temp highp float)
0:473            direct index ( temp highp float)
0:473              direct index ( temp highp 4-component vector of float)
0:473                'm' ( temp highp 4X4 matrix of float)
0:473                Constant:
0:473                  2 (const int)
0:473              Constant:
0:473                0 (const int)
0:473            direct index ( temp highp float)
0:473              'tt' ( temp highp 3-component vector of float)
0:473              Constant:
0:473                2 (const int)
0:474        add second child into first child ( temp highp float)
0:474          direct index ( temp highp float)
0:474            direct index ( temp highp 4-component vector of float)
0:474              'm' ( temp highp 4X4 matrix of float)
0:474              Constant:
0:474                3 (const int)
0:474            Constant:
0:474              1 (const int)
0:474          component-wise multiply ( temp highp float)
0:474            direct index ( temp highp float)
0:474              direct index ( temp highp 4-component vector of float)
0:474                'm' ( temp highp 4X4 matrix of float)
0:474                Constant:
0:474                  2 (const int)
0:474              Constant:
0:474                1 (const int)
0:474            direct index ( temp highp float)
0:474              'tt' ( temp highp 3-component vector of float)
0:474              Constant:
0:474                2 (const int)
0:475        add second child into first child ( temp highp float)
0:475          direct index ( temp highp float)
0:475            direct index ( temp highp 4-component vector of float)
0:475              'm' ( temp highp 4X4 matrix of float)
0:475              Constant:
0:475                3 (const int)
0:475            Constant:
0:475              2 (const int)
0:475          component-wise multiply ( temp highp float)
0:475            direct index ( temp highp float)
0:475              direct index ( temp highp 4-component vector of float)
0:475                'm' ( temp highp 4X4 matrix of float)
0:475                Constant:
0:475                  2 (const int)
0:475              Constant:
0:475                2 (const int)
0:475            direct index ( temp highp float)
0:475              'tt' ( temp highp 3-component vector of float)
0:475              Constant:
0:475                2 (const int)
0:476        add second child into first child ( temp highp float)
0:476          direct index ( temp highp float)
0:476            direct index ( temp highp 4-component vector of float)
0:476              'm' ( temp highp 4X4 matrix of float)
0:476              Constant:
0:476                3 (const int)
0:476            Constant:
0:476              3 (const int)
0:476          component-wise multiply ( temp highp float)
0:476            direct index ( temp highp float)
0:476              direct index ( temp highp 4-component vector of float)
0:476                'm' ( temp highp 4X4 matrix of float)
0:476                Constant:
0:476                  2 (const int)
0:476              Constant:
0:476                3 (const int)
0:476            direct index ( temp highp float)
0:476              'tt' ( temp highp 3-component vector of float)
0:476              Constant:
0:476                2 (const int)
0:478      Branch: Return with expression
0:478        'm' ( temp highp 4X4 matrix of float)
0:480  Function Definition: TDInstanceMat3(i1; ( global highp 3X3 matrix of float)
0:480    Function Parameters: 
0:480      'id' ( in highp int)
0:481    Sequence
0:481      Sequence
0:481        move second child to first child ( temp highp 3X3 matrix of float)
0:481          'm' ( temp highp 3X3 matrix of float)
0:481          Constant:
0:481            1.000000
0:481            0.000000
0:481            0.000000
0:481            0.000000
0:481            1.000000
0:481            0.000000
0:481            0.000000
0:481            0.000000
0:481            1.000000
0:482      Branch: Return with expression
0:482        'm' ( temp highp 3X3 matrix of float)
0:484  Function Definition: TDInstanceMat3ForNorm(i1; ( global highp 3X3 matrix of float)
0:484    Function Parameters: 
0:484      'id' ( in highp int)
0:485    Sequence
0:485      Sequence
0:485        move second child to first child ( temp highp 3X3 matrix of float)
0:485          'm' ( temp highp 3X3 matrix of float)
0:485          Function Call: TDInstanceMat3(i1; ( global highp 3X3 matrix of float)
0:485            'id' ( in highp int)
0:486      Branch: Return with expression
0:486        'm' ( temp highp 3X3 matrix of float)
0:488  Function Definition: TDInstanceColor(i1;vf4; ( global highp 4-component vector of float)
0:488    Function Parameters: 
0:488      'index' ( in highp int)
0:488      'curColor' ( in highp 4-component vector of float)
0:489    Sequence
0:489      subtract second child into first child ( temp highp int)
0:489        'index' ( in highp int)
0:489        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:489          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:489          Constant:
0:489            0 (const uint)
0:491      Sequence
0:491        move second child to first child ( temp highp int)
0:491          'coord' ( temp highp int)
0:491          'index' ( in highp int)
0:492      Sequence
0:492        move second child to first child ( temp highp 4-component vector of float)
0:492          'samp' ( temp highp 4-component vector of float)
0:492          textureFetch ( global highp 4-component vector of float)
0:492            'sTDInstanceColor' (layout( binding=17) uniform highp samplerBuffer)
0:492            'coord' ( temp highp int)
0:493      move second child to first child ( temp highp float)
0:493        direct index ( temp highp float)
0:493          'v' ( temp highp 4-component vector of float)
0:493          Constant:
0:493            0 (const int)
0:493        direct index ( temp highp float)
0:493          'samp' ( temp highp 4-component vector of float)
0:493          Constant:
0:493            0 (const int)
0:494      move second child to first child ( temp highp float)
0:494        direct index ( temp highp float)
0:494          'v' ( temp highp 4-component vector of float)
0:494          Constant:
0:494            1 (const int)
0:494        direct index ( temp highp float)
0:494          'samp' ( temp highp 4-component vector of float)
0:494          Constant:
0:494            1 (const int)
0:495      move second child to first child ( temp highp float)
0:495        direct index ( temp highp float)
0:495          'v' ( temp highp 4-component vector of float)
0:495          Constant:
0:495            2 (const int)
0:495        direct index ( temp highp float)
0:495          'samp' ( temp highp 4-component vector of float)
0:495          Constant:
0:495            2 (const int)
0:496      move second child to first child ( temp highp float)
0:496        direct index ( temp highp float)
0:496          'v' ( temp highp 4-component vector of float)
0:496          Constant:
0:496            3 (const int)
0:496        Constant:
0:496          1.000000
0:497      move second child to first child ( temp highp float)
0:497        direct index ( temp highp float)
0:497          'curColor' ( in highp 4-component vector of float)
0:497          Constant:
0:497            0 (const int)
0:497        direct index ( temp highp float)
0:497          'v' ( temp highp 4-component vector of float)
0:497          Constant:
0:497            0 (const int)
0:499      move second child to first child ( temp highp float)
0:499        direct index ( temp highp float)
0:499          'curColor' ( in highp 4-component vector of float)
0:499          Constant:
0:499            1 (const int)
0:499        direct index ( temp highp float)
0:499          'v' ( temp highp 4-component vector of float)
0:499          Constant:
0:499            1 (const int)
0:501      move second child to first child ( temp highp float)
0:501        direct index ( temp highp float)
0:501          'curColor' ( in highp 4-component vector of float)
0:501          Constant:
0:501            2 (const int)
0:501        direct index ( temp highp float)
0:501          'v' ( temp highp 4-component vector of float)
0:501          Constant:
0:501            2 (const int)
0:503      Branch: Return with expression
0:503        'curColor' ( in highp 4-component vector of float)
0:?   Linker Objects
0:?     'sTDNoiseMap' ( uniform highp sampler2D)
0:?     'sTDSineLookup' ( uniform highp sampler1D)
0:?     'sTDWhite2D' ( uniform highp sampler2D)
0:?     'sTDWhite3D' ( uniform highp sampler3D)
0:?     'sTDWhite2DArray' ( uniform highp sampler2DArray)
0:?     'sTDWhiteCube' ( uniform highp samplerCube)
0:?     'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:?     'anon@1' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{ global highp 4-component vector of float position,  global highp 3-component vector of float direction,  global highp 3-component vector of float diffuse,  global highp 4-component vector of float nearFar,  global highp 4-component vector of float lightSize,  global highp 4-component vector of float misc,  global highp 4-component vector of float coneLookupScaleBias,  global highp 4-component vector of float attenScaleBiasRoll, layout( column_major std140) global highp 4X4 matrix of float shadowMapMatrix, layout( column_major std140) global highp 4X4 matrix of float shadowMapCamMatrix,  global highp 4-component vector of float shadowMapRes, layout( column_major std140) global highp 4X4 matrix of float projMapMatrix} uTDLights})
0:?     'anon@2' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{ global highp 3-component vector of float color, layout( column_major std140) global highp 3X3 matrix of float rotate} uTDEnvLights})
0:?     'uTDEnvLightBuffers' (layout( column_major std430) restrict readonly buffer 1-element array of block{layout( column_major std430 offset=0) restrict readonly buffer 9-element array of highp 3-component vector of float shCoeffs})
0:?     'anon@3' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals} uTDMats})
0:?     'anon@4' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{ global highp 4-component vector of float nearFar,  global highp 4-component vector of float fog,  global highp 4-component vector of float fogColor,  global highp int renderTOPCameraIndex} uTDCamInfos})
0:?     'anon@5' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform structure{ global highp 4-component vector of float ambientColor,  global highp 4-component vector of float nearFar,  global highp 4-component vector of float viewport,  global highp 4-component vector of float viewportRes,  global highp 4-component vector of float fog,  global highp 4-component vector of float fogColor} uTDGeneral})
0:?     'sTDInstanceT' (layout( binding=15) uniform highp samplerBuffer)
0:?     'sTDInstanceTexCoord' (layout( binding=16) uniform highp samplerBuffer)
0:?     'sTDInstanceColor' (layout( binding=17) uniform highp samplerBuffer)

vk.relaxed.stagelink.0.2.frag
Shader version: 460
gl_FragCoord origin is upper left
0:? Sequence
0:2  Function Definition: TDOutputSwizzle(vf4; ( global highp 4-component vector of float)
0:2    Function Parameters: 
0:2      'c' ( in highp 4-component vector of float)
0:4    Sequence
0:4      Branch: Return with expression
0:4        vector swizzle ( temp highp 4-component vector of float)
0:4          'c' ( in highp 4-component vector of float)
0:4          Sequence
0:4            Constant:
0:4              0 (const int)
0:4            Constant:
0:4              1 (const int)
0:4            Constant:
0:4              2 (const int)
0:4            Constant:
0:4              3 (const int)
0:6  Function Definition: TDOutputSwizzle(vu4; ( global highp 4-component vector of uint)
0:6    Function Parameters: 
0:6      'c' ( in highp 4-component vector of uint)
0:8    Sequence
0:8      Branch: Return with expression
0:8        vector swizzle ( temp highp 4-component vector of uint)
0:8          'c' ( in highp 4-component vector of uint)
0:8          Sequence
0:8            Constant:
0:8              0 (const int)
0:8            Constant:
0:8              1 (const int)
0:8            Constant:
0:8              2 (const int)
0:8            Constant:
0:8              3 (const int)
0:?   Linker Objects


Linked vertex stage:


Linked fragment stage:


Shader version: 460
0:? Sequence
0:11  Function Definition: main( ( global void)
0:11    Function Parameters: 
0:15    Sequence
0:15      Sequence
0:15        Sequence
0:15          move second child to first child ( temp highp 3-component vector of float)
0:15            'texcoord' ( temp highp 3-component vector of float)
0:15            Function Call: TDInstanceTexCoord(vf3; ( global highp 3-component vector of float)
0:15              direct index (layout( location=3) temp highp 3-component vector of float)
0:15                'uv' (layout( location=3) in 8-element array of highp 3-component vector of float)
0:15                Constant:
0:15                  0 (const int)
0:16        move second child to first child ( temp highp 3-component vector of float)
0:16          vector swizzle ( temp highp 3-component vector of float)
0:16            texCoord0: direct index for structure ( out highp 3-component vector of float)
0:16              'oVert' ( out block{ out highp 4-component vector of float color,  out highp 3-component vector of float worldSpacePos,  out highp 3-component vector of float texCoord0,  flat out highp int cameraIndex,  flat out highp int instance})
0:16              Constant:
0:16                2 (const int)
0:16            Sequence
0:16              Constant:
0:16                0 (const int)
0:16              Constant:
0:16                1 (const int)
0:16              Constant:
0:16                2 (const int)
0:16          vector swizzle ( temp highp 3-component vector of float)
0:16            'texcoord' ( temp highp 3-component vector of float)
0:16            Sequence
0:16              Constant:
0:16                0 (const int)
0:16              Constant:
0:16                1 (const int)
0:16              Constant:
0:16                2 (const int)
0:20      move second child to first child ( temp highp int)
0:20        instance: direct index for structure ( flat out highp int)
0:20          'oVert' ( out block{ out highp 4-component vector of float color,  out highp 3-component vector of float worldSpacePos,  out highp 3-component vector of float texCoord0,  flat out highp int cameraIndex,  flat out highp int instance})
0:20          Constant:
0:20            4 (const int)
0:20        Function Call: TDInstanceID( ( global highp int)
0:21      Sequence
0:21        move second child to first child ( temp highp 4-component vector of float)
0:21          'worldSpacePos' ( temp highp 4-component vector of float)
0:21          Function Call: TDDeform(vf3; ( global highp 4-component vector of float)
0:21            'P' (layout( location=0) in highp 3-component vector of float)
0:22      Sequence
0:22        move second child to first child ( temp highp 3-component vector of float)
0:22          'uvUnwrapCoord' ( temp highp 3-component vector of float)
0:22          Function Call: TDInstanceTexCoord(vf3; ( global highp 3-component vector of float)
0:22            Function Call: TDUVUnwrapCoord( ( global highp 3-component vector of float)
0:23      move second child to first child ( temp highp 4-component vector of float)
0:23        gl_Position: direct index for structure ( gl_Position highp 4-component vector of float Position)
0:23          'anon@4' ( out block{ gl_Position 4-component vector of float Position gl_Position,  gl_PointSize float PointSize gl_PointSize,  out 1-element array of float ClipDistance gl_ClipDistance,  out 1-element array of float CullDistance gl_CullDistance})
0:23          Constant:
0:23            0 (const uint)
0:23        Function Call: TDWorldToProj(vf4;vf3; ( global highp 4-component vector of float)
0:23          'worldSpacePos' ( temp highp 4-component vector of float)
0:23          'uvUnwrapCoord' ( temp highp 3-component vector of float)
0:32      Sequence
0:32        move second child to first child ( temp highp int)
0:32          'cameraIndex' ( temp highp int)
0:32          Function Call: TDCameraIndex( ( global highp int)
0:33      move second child to first child ( temp highp int)
0:33        cameraIndex: direct index for structure ( flat out highp int)
0:33          'oVert' ( out block{ out highp 4-component vector of float color,  out highp 3-component vector of float worldSpacePos,  out highp 3-component vector of float texCoord0,  flat out highp int cameraIndex,  flat out highp int instance})
0:33          Constant:
0:33            3 (const int)
0:33        'cameraIndex' ( temp highp int)
0:34      move second child to first child ( temp highp 3-component vector of float)
0:34        vector swizzle ( temp highp 3-component vector of float)
0:34          worldSpacePos: direct index for structure ( out highp 3-component vector of float)
0:34            'oVert' ( out block{ out highp 4-component vector of float color,  out highp 3-component vector of float worldSpacePos,  out highp 3-component vector of float texCoord0,  flat out highp int cameraIndex,  flat out highp int instance})
0:34            Constant:
0:34              1 (const int)
0:34          Sequence
0:34            Constant:
0:34              0 (const int)
0:34            Constant:
0:34              1 (const int)
0:34            Constant:
0:34              2 (const int)
0:34        vector swizzle ( temp highp 3-component vector of float)
0:34          'worldSpacePos' ( temp highp 4-component vector of float)
0:34          Sequence
0:34            Constant:
0:34              0 (const int)
0:34            Constant:
0:34              1 (const int)
0:34            Constant:
0:34              2 (const int)
0:35      move second child to first child ( temp highp 4-component vector of float)
0:35        color: direct index for structure ( out highp 4-component vector of float)
0:35          'oVert' ( out block{ out highp 4-component vector of float color,  out highp 3-component vector of float worldSpacePos,  out highp 3-component vector of float texCoord0,  flat out highp int cameraIndex,  flat out highp int instance})
0:35          Constant:
0:35            0 (const int)
0:35        Function Call: TDInstanceColor(vf4; ( global highp 4-component vector of float)
0:35          'Cd' (layout( location=2) in highp 4-component vector of float)
0:176  Function Definition: iTDCamToProj(vf4;vf3;i1;b1; ( global highp 4-component vector of float)
0:176    Function Parameters: 
0:176      'v' ( in highp 4-component vector of float)
0:176      'uv' ( in highp 3-component vector of float)
0:176      'cameraIndex' ( in highp int)
0:176      'applyPickMod' ( in bool)
0:178    Sequence
0:178      Test condition and select ( temp void)
0:178        Condition
0:178        Negate conditional ( temp bool)
0:178          Function Call: TDInstanceActive( ( global bool)
0:178        true case
0:179        Branch: Return with expression
0:179          Constant:
0:179            2.000000
0:179            2.000000
0:179            2.000000
0:179            0.000000
0:180      move second child to first child ( temp highp 4-component vector of float)
0:180        'v' ( in highp 4-component vector of float)
0:180        matrix-times-vector ( temp highp 4-component vector of float)
0:180          proj: direct index for structure (layout( column_major std140) global highp 4X4 matrix of float)
0:180            direct index (layout( column_major std140 offset=0) temp structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals})
0:180              uTDMats: direct index for structure (layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals})
0:180                'anon@3' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals} uTDMats})
0:180                Constant:
0:180                  0 (const uint)
0:180              Constant:
0:180                0 (const int)
0:180            Constant:
0:180              8 (const int)
0:180          'v' ( in highp 4-component vector of float)
0:181      Branch: Return with expression
0:181        'v' ( in highp 4-component vector of float)
0:183  Function Definition: iTDWorldToProj(vf4;vf3;i1;b1; ( global highp 4-component vector of float)
0:183    Function Parameters: 
0:183      'v' ( in highp 4-component vector of float)
0:183      'uv' ( in highp 3-component vector of float)
0:183      'cameraIndex' ( in highp int)
0:183      'applyPickMod' ( in bool)
0:184    Sequence
0:184      Test condition and select ( temp void)
0:184        Condition
0:184        Negate conditional ( temp bool)
0:184          Function Call: TDInstanceActive( ( global bool)
0:184        true case
0:185        Branch: Return with expression
0:185          Constant:
0:185            2.000000
0:185            2.000000
0:185            2.000000
0:185            0.000000
0:186      move second child to first child ( temp highp 4-component vector of float)
0:186        'v' ( in highp 4-component vector of float)
0:186        matrix-times-vector ( temp highp 4-component vector of float)
0:186          camProj: direct index for structure (layout( column_major std140) global highp 4X4 matrix of float)
0:186            direct index (layout( column_major std140 offset=0) temp structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals})
0:186              uTDMats: direct index for structure (layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals})
0:186                'anon@3' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals} uTDMats})
0:186                Constant:
0:186                  0 (const uint)
0:186              Constant:
0:186                0 (const int)
0:186            Constant:
0:186              6 (const int)
0:186          'v' ( in highp 4-component vector of float)
0:187      Branch: Return with expression
0:187        'v' ( in highp 4-component vector of float)
0:193  Function Definition: TDInstanceID( ( global highp int)
0:193    Function Parameters: 
0:194    Sequence
0:194      Branch: Return with expression
0:194        add ( temp highp int)
0:194          'gl_InstanceIndex' ( in highp int InstanceIndex)
0:194          uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:194            'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:194            Constant:
0:194              0 (const uint)
0:196  Function Definition: TDCameraIndex( ( global highp int)
0:196    Function Parameters: 
0:197    Sequence
0:197      Branch: Return with expression
0:197        Constant:
0:197          0 (const int)
0:199  Function Definition: TDUVUnwrapCoord( ( global highp 3-component vector of float)
0:199    Function Parameters: 
0:200    Sequence
0:200      Branch: Return with expression
0:200        direct index (layout( location=3) temp highp 3-component vector of float)
0:200          'uv' (layout( location=3) in 8-element array of highp 3-component vector of float)
0:200          Constant:
0:200            0 (const int)
0:205  Function Definition: TDPickID( ( global highp int)
0:205    Function Parameters: 
0:209    Sequence
0:209      Branch: Return with expression
0:209        Constant:
0:209          0 (const int)
0:212  Function Definition: iTDConvertPickId(i1; ( global highp float)
0:212    Function Parameters: 
0:212      'id' ( in highp int)
0:213    Sequence
0:213      or second child into first child ( temp highp int)
0:213        'id' ( in highp int)
0:213        Constant:
0:213          1073741824 (const int)
0:214      Branch: Return with expression
0:214        intBitsToFloat ( global highp float)
0:214          'id' ( in highp int)
0:217  Function Definition: TDWritePickingValues( ( global void)
0:217    Function Parameters: 
0:224  Function Definition: TDWorldToProj(vf4;vf3; ( global highp 4-component vector of float)
0:224    Function Parameters: 
0:224      'v' ( in highp 4-component vector of float)
0:224      'uv' ( in highp 3-component vector of float)
0:226    Sequence
0:226      Branch: Return with expression
0:226        Function Call: iTDWorldToProj(vf4;vf3;i1;b1; ( global highp 4-component vector of float)
0:226          'v' ( in highp 4-component vector of float)
0:226          'uv' ( in highp 3-component vector of float)
0:226          Function Call: TDCameraIndex( ( global highp int)
0:226          Constant:
0:226            true (const bool)
0:228  Function Definition: TDWorldToProj(vf3;vf3; ( global highp 4-component vector of float)
0:228    Function Parameters: 
0:228      'v' ( in highp 3-component vector of float)
0:228      'uv' ( in highp 3-component vector of float)
0:230    Sequence
0:230      Branch: Return with expression
0:230        Function Call: TDWorldToProj(vf4;vf3; ( global highp 4-component vector of float)
0:230          Construct vec4 ( temp highp 4-component vector of float)
0:230            'v' ( in highp 3-component vector of float)
0:230            Constant:
0:230              1.000000
0:230          'uv' ( in highp 3-component vector of float)
0:232  Function Definition: TDWorldToProj(vf4; ( global highp 4-component vector of float)
0:232    Function Parameters: 
0:232      'v' ( in highp 4-component vector of float)
0:234    Sequence
0:234      Branch: Return with expression
0:234        Function Call: TDWorldToProj(vf4;vf3; ( global highp 4-component vector of float)
0:234          'v' ( in highp 4-component vector of float)
0:234          Constant:
0:234            0.000000
0:234            0.000000
0:234            0.000000
0:236  Function Definition: TDWorldToProj(vf3; ( global highp 4-component vector of float)
0:236    Function Parameters: 
0:236      'v' ( in highp 3-component vector of float)
0:238    Sequence
0:238      Branch: Return with expression
0:238        Function Call: TDWorldToProj(vf4; ( global highp 4-component vector of float)
0:238          Construct vec4 ( temp highp 4-component vector of float)
0:238            'v' ( in highp 3-component vector of float)
0:238            Constant:
0:238              1.000000
0:240  Function Definition: TDPointColor( ( global highp 4-component vector of float)
0:240    Function Parameters: 
0:241    Sequence
0:241      Branch: Return with expression
0:241        'Cd' (layout( location=2) in highp 4-component vector of float)
0:114  Function Definition: TDInstanceTexCoord(i1;vf3; ( global highp 3-component vector of float)
0:114    Function Parameters: 
0:114      'index' ( in highp int)
0:114      't' ( in highp 3-component vector of float)
0:?     Sequence
0:116      Sequence
0:116        move second child to first child ( temp highp int)
0:116          'coord' ( temp highp int)
0:116          'index' ( in highp int)
0:117      Sequence
0:117        move second child to first child ( temp highp 4-component vector of float)
0:117          'samp' ( temp highp 4-component vector of float)
0:117          textureFetch ( global highp 4-component vector of float)
0:117            'sTDInstanceTexCoord' (layout( binding=16) uniform highp samplerBuffer)
0:117            'coord' ( temp highp int)
0:118      move second child to first child ( temp highp float)
0:118        direct index ( temp highp float)
0:118          'v' ( temp highp 3-component vector of float)
0:118          Constant:
0:118            0 (const int)
0:118        direct index ( temp highp float)
0:118          't' ( in highp 3-component vector of float)
0:118          Constant:
0:118            0 (const int)
0:119      move second child to first child ( temp highp float)
0:119        direct index ( temp highp float)
0:119          'v' ( temp highp 3-component vector of float)
0:119          Constant:
0:119            1 (const int)
0:119        direct index ( temp highp float)
0:119          't' ( in highp 3-component vector of float)
0:119          Constant:
0:119            1 (const int)
0:120      move second child to first child ( temp highp float)
0:120        direct index ( temp highp float)
0:120          'v' ( temp highp 3-component vector of float)
0:120          Constant:
0:120            2 (const int)
0:120        direct index ( temp highp float)
0:120          'samp' ( temp highp 4-component vector of float)
0:120          Constant:
0:120            0 (const int)
0:121      move second child to first child ( temp highp 3-component vector of float)
0:121        vector swizzle ( temp highp 3-component vector of float)
0:121          't' ( in highp 3-component vector of float)
0:121          Sequence
0:121            Constant:
0:121              0 (const int)
0:121            Constant:
0:121              1 (const int)
0:121            Constant:
0:121              2 (const int)
0:121        vector swizzle ( temp highp 3-component vector of float)
0:121          'v' ( temp highp 3-component vector of float)
0:121          Sequence
0:121            Constant:
0:121              0 (const int)
0:121            Constant:
0:121              1 (const int)
0:121            Constant:
0:121              2 (const int)
0:122      Branch: Return with expression
0:122        't' ( in highp 3-component vector of float)
0:124  Function Definition: TDInstanceActive(i1; ( global bool)
0:124    Function Parameters: 
0:124      'index' ( in highp int)
0:125    Sequence
0:125      subtract second child into first child ( temp highp int)
0:125        'index' ( in highp int)
0:125        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:125          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:125          Constant:
0:125            0 (const uint)
0:127      Sequence
0:127        move second child to first child ( temp highp int)
0:127          'coord' ( temp highp int)
0:127          'index' ( in highp int)
0:128      Sequence
0:128        move second child to first child ( temp highp 4-component vector of float)
0:128          'samp' ( temp highp 4-component vector of float)
0:128          textureFetch ( global highp 4-component vector of float)
0:128            'sTDInstanceT' (layout( binding=15) uniform highp samplerBuffer)
0:128            'coord' ( temp highp int)
0:129      move second child to first child ( temp highp float)
0:129        'v' ( temp highp float)
0:129        direct index ( temp highp float)
0:129          'samp' ( temp highp 4-component vector of float)
0:129          Constant:
0:129            0 (const int)
0:130      Branch: Return with expression
0:130        Compare Not Equal ( temp bool)
0:130          'v' ( temp highp float)
0:130          Constant:
0:130            0.000000
0:132  Function Definition: iTDInstanceTranslate(i1;b1; ( global highp 3-component vector of float)
0:132    Function Parameters: 
0:132      'index' ( in highp int)
0:132      'instanceActive' ( out bool)
0:133    Sequence
0:133      Sequence
0:133        move second child to first child ( temp highp int)
0:133          'origIndex' ( temp highp int)
0:133          'index' ( in highp int)
0:134      subtract second child into first child ( temp highp int)
0:134        'index' ( in highp int)
0:134        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:134          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:134          Constant:
0:134            0 (const uint)
0:136      Sequence
0:136        move second child to first child ( temp highp int)
0:136          'coord' ( temp highp int)
0:136          'index' ( in highp int)
0:137      Sequence
0:137        move second child to first child ( temp highp 4-component vector of float)
0:137          'samp' ( temp highp 4-component vector of float)
0:137          textureFetch ( global highp 4-component vector of float)
0:137            'sTDInstanceT' (layout( binding=15) uniform highp samplerBuffer)
0:137            'coord' ( temp highp int)
0:138      move second child to first child ( temp highp float)
0:138        direct index ( temp highp float)
0:138          'v' ( temp highp 3-component vector of float)
0:138          Constant:
0:138            0 (const int)
0:138        direct index ( temp highp float)
0:138          'samp' ( temp highp 4-component vector of float)
0:138          Constant:
0:138            1 (const int)
0:139      move second child to first child ( temp highp float)
0:139        direct index ( temp highp float)
0:139          'v' ( temp highp 3-component vector of float)
0:139          Constant:
0:139            1 (const int)
0:139        direct index ( temp highp float)
0:139          'samp' ( temp highp 4-component vector of float)
0:139          Constant:
0:139            2 (const int)
0:140      move second child to first child ( temp highp float)
0:140        direct index ( temp highp float)
0:140          'v' ( temp highp 3-component vector of float)
0:140          Constant:
0:140            2 (const int)
0:140        direct index ( temp highp float)
0:140          'samp' ( temp highp 4-component vector of float)
0:140          Constant:
0:140            3 (const int)
0:141      move second child to first child ( temp bool)
0:141        'instanceActive' ( out bool)
0:141        Compare Not Equal ( temp bool)
0:141          direct index ( temp highp float)
0:141            'samp' ( temp highp 4-component vector of float)
0:141            Constant:
0:141              0 (const int)
0:141          Constant:
0:141            0.000000
0:142      Branch: Return with expression
0:142        'v' ( temp highp 3-component vector of float)
0:144  Function Definition: TDInstanceTranslate(i1; ( global highp 3-component vector of float)
0:144    Function Parameters: 
0:144      'index' ( in highp int)
0:145    Sequence
0:145      subtract second child into first child ( temp highp int)
0:145        'index' ( in highp int)
0:145        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:145          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:145          Constant:
0:145            0 (const uint)
0:147      Sequence
0:147        move second child to first child ( temp highp int)
0:147          'coord' ( temp highp int)
0:147          'index' ( in highp int)
0:148      Sequence
0:148        move second child to first child ( temp highp 4-component vector of float)
0:148          'samp' ( temp highp 4-component vector of float)
0:148          textureFetch ( global highp 4-component vector of float)
0:148            'sTDInstanceT' (layout( binding=15) uniform highp samplerBuffer)
0:148            'coord' ( temp highp int)
0:149      move second child to first child ( temp highp float)
0:149        direct index ( temp highp float)
0:149          'v' ( temp highp 3-component vector of float)
0:149          Constant:
0:149            0 (const int)
0:149        direct index ( temp highp float)
0:149          'samp' ( temp highp 4-component vector of float)
0:149          Constant:
0:149            1 (const int)
0:150      move second child to first child ( temp highp float)
0:150        direct index ( temp highp float)
0:150          'v' ( temp highp 3-component vector of float)
0:150          Constant:
0:150            1 (const int)
0:150        direct index ( temp highp float)
0:150          'samp' ( temp highp 4-component vector of float)
0:150          Constant:
0:150            2 (const int)
0:151      move second child to first child ( temp highp float)
0:151        direct index ( temp highp float)
0:151          'v' ( temp highp 3-component vector of float)
0:151          Constant:
0:151            2 (const int)
0:151        direct index ( temp highp float)
0:151          'samp' ( temp highp 4-component vector of float)
0:151          Constant:
0:151            3 (const int)
0:152      Branch: Return with expression
0:152        'v' ( temp highp 3-component vector of float)
0:154  Function Definition: TDInstanceRotateMat(i1; ( global highp 3X3 matrix of float)
0:154    Function Parameters: 
0:154      'index' ( in highp int)
0:155    Sequence
0:155      subtract second child into first child ( temp highp int)
0:155        'index' ( in highp int)
0:155        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:155          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:155          Constant:
0:155            0 (const uint)
0:156      Sequence
0:156        move second child to first child ( temp highp 3-component vector of float)
0:156          'v' ( temp highp 3-component vector of float)
0:156          Constant:
0:156            0.000000
0:156            0.000000
0:156            0.000000
0:157      Sequence
0:157        move second child to first child ( temp highp 3X3 matrix of float)
0:157          'm' ( temp highp 3X3 matrix of float)
0:157          Constant:
0:157            1.000000
0:157            0.000000
0:157            0.000000
0:157            0.000000
0:157            1.000000
0:157            0.000000
0:157            0.000000
0:157            0.000000
0:157            1.000000
0:161      Branch: Return with expression
0:161        'm' ( temp highp 3X3 matrix of float)
0:163  Function Definition: TDInstanceScale(i1; ( global highp 3-component vector of float)
0:163    Function Parameters: 
0:163      'index' ( in highp int)
0:164    Sequence
0:164      subtract second child into first child ( temp highp int)
0:164        'index' ( in highp int)
0:164        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:164          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:164          Constant:
0:164            0 (const uint)
0:165      Sequence
0:165        move second child to first child ( temp highp 3-component vector of float)
0:165          'v' ( temp highp 3-component vector of float)
0:165          Constant:
0:165            1.000000
0:165            1.000000
0:165            1.000000
0:166      Branch: Return with expression
0:166        'v' ( temp highp 3-component vector of float)
0:168  Function Definition: TDInstancePivot(i1; ( global highp 3-component vector of float)
0:168    Function Parameters: 
0:168      'index' ( in highp int)
0:169    Sequence
0:169      subtract second child into first child ( temp highp int)
0:169        'index' ( in highp int)
0:169        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:169          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:169          Constant:
0:169            0 (const uint)
0:170      Sequence
0:170        move second child to first child ( temp highp 3-component vector of float)
0:170          'v' ( temp highp 3-component vector of float)
0:170          Constant:
0:170            0.000000
0:170            0.000000
0:170            0.000000
0:171      Branch: Return with expression
0:171        'v' ( temp highp 3-component vector of float)
0:173  Function Definition: TDInstanceRotTo(i1; ( global highp 3-component vector of float)
0:173    Function Parameters: 
0:173      'index' ( in highp int)
0:174    Sequence
0:174      subtract second child into first child ( temp highp int)
0:174        'index' ( in highp int)
0:174        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:174          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:174          Constant:
0:174            0 (const uint)
0:175      Sequence
0:175        move second child to first child ( temp highp 3-component vector of float)
0:175          'v' ( temp highp 3-component vector of float)
0:175          Constant:
0:175            0.000000
0:175            0.000000
0:175            1.000000
0:176      Branch: Return with expression
0:176        'v' ( temp highp 3-component vector of float)
0:178  Function Definition: TDInstanceRotUp(i1; ( global highp 3-component vector of float)
0:178    Function Parameters: 
0:178      'index' ( in highp int)
0:179    Sequence
0:179      subtract second child into first child ( temp highp int)
0:179        'index' ( in highp int)
0:179        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:179          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:179          Constant:
0:179            0 (const uint)
0:180      Sequence
0:180        move second child to first child ( temp highp 3-component vector of float)
0:180          'v' ( temp highp 3-component vector of float)
0:180          Constant:
0:180            0.000000
0:180            1.000000
0:180            0.000000
0:181      Branch: Return with expression
0:181        'v' ( temp highp 3-component vector of float)
0:183  Function Definition: TDInstanceMat(i1; ( global highp 4X4 matrix of float)
0:183    Function Parameters: 
0:183      'id' ( in highp int)
0:184    Sequence
0:184      Sequence
0:184        move second child to first child ( temp bool)
0:184          'instanceActive' ( temp bool)
0:184          Constant:
0:184            true (const bool)
0:185      Sequence
0:185        move second child to first child ( temp highp 3-component vector of float)
0:185          't' ( temp highp 3-component vector of float)
0:185          Function Call: iTDInstanceTranslate(i1;b1; ( global highp 3-component vector of float)
0:185            'id' ( in highp int)
0:185            'instanceActive' ( temp bool)
0:186      Test condition and select ( temp void)
0:186        Condition
0:186        Negate conditional ( temp bool)
0:186          'instanceActive' ( temp bool)
0:186        true case
0:188        Sequence
0:188          Branch: Return with expression
0:188            Constant:
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:188              0.000000
0:190      Sequence
0:190        move second child to first child ( temp highp 4X4 matrix of float)
0:190          'm' ( temp highp 4X4 matrix of float)
0:190          Constant:
0:190            1.000000
0:190            0.000000
0:190            0.000000
0:190            0.000000
0:190            0.000000
0:190            1.000000
0:190            0.000000
0:190            0.000000
0:190            0.000000
0:190            0.000000
0:190            1.000000
0:190            0.000000
0:190            0.000000
0:190            0.000000
0:190            0.000000
0:190            1.000000
0:192      Sequence
0:192        Sequence
0:192          move second child to first child ( temp highp 3-component vector of float)
0:192            'tt' ( temp highp 3-component vector of float)
0:192            't' ( temp highp 3-component vector of float)
0:193        add second child into first child ( temp highp float)
0:193          direct index ( temp highp float)
0:193            direct index ( temp highp 4-component vector of float)
0:193              'm' ( temp highp 4X4 matrix of float)
0:193              Constant:
0:193                3 (const int)
0:193            Constant:
0:193              0 (const int)
0:193          component-wise multiply ( temp highp float)
0:193            direct index ( temp highp float)
0:193              direct index ( temp highp 4-component vector of float)
0:193                'm' ( temp highp 4X4 matrix of float)
0:193                Constant:
0:193                  0 (const int)
0:193              Constant:
0:193                0 (const int)
0:193            direct index ( temp highp float)
0:193              'tt' ( temp highp 3-component vector of float)
0:193              Constant:
0:193                0 (const int)
0:194        add second child into first child ( temp highp float)
0:194          direct index ( temp highp float)
0:194            direct index ( temp highp 4-component vector of float)
0:194              'm' ( temp highp 4X4 matrix of float)
0:194              Constant:
0:194                3 (const int)
0:194            Constant:
0:194              1 (const int)
0:194          component-wise multiply ( temp highp float)
0:194            direct index ( temp highp float)
0:194              direct index ( temp highp 4-component vector of float)
0:194                'm' ( temp highp 4X4 matrix of float)
0:194                Constant:
0:194                  0 (const int)
0:194              Constant:
0:194                1 (const int)
0:194            direct index ( temp highp float)
0:194              'tt' ( temp highp 3-component vector of float)
0:194              Constant:
0:194                0 (const int)
0:195        add second child into first child ( temp highp float)
0:195          direct index ( temp highp float)
0:195            direct index ( temp highp 4-component vector of float)
0:195              'm' ( temp highp 4X4 matrix of float)
0:195              Constant:
0:195                3 (const int)
0:195            Constant:
0:195              2 (const int)
0:195          component-wise multiply ( temp highp float)
0:195            direct index ( temp highp float)
0:195              direct index ( temp highp 4-component vector of float)
0:195                'm' ( temp highp 4X4 matrix of float)
0:195                Constant:
0:195                  0 (const int)
0:195              Constant:
0:195                2 (const int)
0:195            direct index ( temp highp float)
0:195              'tt' ( temp highp 3-component vector of float)
0:195              Constant:
0:195                0 (const int)
0:196        add second child into first child ( temp highp float)
0:196          direct index ( temp highp float)
0:196            direct index ( temp highp 4-component vector of float)
0:196              'm' ( temp highp 4X4 matrix of float)
0:196              Constant:
0:196                3 (const int)
0:196            Constant:
0:196              3 (const int)
0:196          component-wise multiply ( temp highp float)
0:196            direct index ( temp highp float)
0:196              direct index ( temp highp 4-component vector of float)
0:196                'm' ( temp highp 4X4 matrix of float)
0:196                Constant:
0:196                  0 (const int)
0:196              Constant:
0:196                3 (const int)
0:196            direct index ( temp highp float)
0:196              'tt' ( temp highp 3-component vector of float)
0:196              Constant:
0:196                0 (const int)
0:197        add second child into first child ( temp highp float)
0:197          direct index ( temp highp float)
0:197            direct index ( temp highp 4-component vector of float)
0:197              'm' ( temp highp 4X4 matrix of float)
0:197              Constant:
0:197                3 (const int)
0:197            Constant:
0:197              0 (const int)
0:197          component-wise multiply ( temp highp float)
0:197            direct index ( temp highp float)
0:197              direct index ( temp highp 4-component vector of float)
0:197                'm' ( temp highp 4X4 matrix of float)
0:197                Constant:
0:197                  1 (const int)
0:197              Constant:
0:197                0 (const int)
0:197            direct index ( temp highp float)
0:197              'tt' ( temp highp 3-component vector of float)
0:197              Constant:
0:197                1 (const int)
0:198        add second child into first child ( temp highp float)
0:198          direct index ( temp highp float)
0:198            direct index ( temp highp 4-component vector of float)
0:198              'm' ( temp highp 4X4 matrix of float)
0:198              Constant:
0:198                3 (const int)
0:198            Constant:
0:198              1 (const int)
0:198          component-wise multiply ( temp highp float)
0:198            direct index ( temp highp float)
0:198              direct index ( temp highp 4-component vector of float)
0:198                'm' ( temp highp 4X4 matrix of float)
0:198                Constant:
0:198                  1 (const int)
0:198              Constant:
0:198                1 (const int)
0:198            direct index ( temp highp float)
0:198              'tt' ( temp highp 3-component vector of float)
0:198              Constant:
0:198                1 (const int)
0:199        add second child into first child ( temp highp float)
0:199          direct index ( temp highp float)
0:199            direct index ( temp highp 4-component vector of float)
0:199              'm' ( temp highp 4X4 matrix of float)
0:199              Constant:
0:199                3 (const int)
0:199            Constant:
0:199              2 (const int)
0:199          component-wise multiply ( temp highp float)
0:199            direct index ( temp highp float)
0:199              direct index ( temp highp 4-component vector of float)
0:199                'm' ( temp highp 4X4 matrix of float)
0:199                Constant:
0:199                  1 (const int)
0:199              Constant:
0:199                2 (const int)
0:199            direct index ( temp highp float)
0:199              'tt' ( temp highp 3-component vector of float)
0:199              Constant:
0:199                1 (const int)
0:200        add second child into first child ( temp highp float)
0:200          direct index ( temp highp float)
0:200            direct index ( temp highp 4-component vector of float)
0:200              'm' ( temp highp 4X4 matrix of float)
0:200              Constant:
0:200                3 (const int)
0:200            Constant:
0:200              3 (const int)
0:200          component-wise multiply ( temp highp float)
0:200            direct index ( temp highp float)
0:200              direct index ( temp highp 4-component vector of float)
0:200                'm' ( temp highp 4X4 matrix of float)
0:200                Constant:
0:200                  1 (const int)
0:200              Constant:
0:200                3 (const int)
0:200            direct index ( temp highp float)
0:200              'tt' ( temp highp 3-component vector of float)
0:200              Constant:
0:200                1 (const int)
0:201        add second child into first child ( temp highp float)
0:201          direct index ( temp highp float)
0:201            direct index ( temp highp 4-component vector of float)
0:201              'm' ( temp highp 4X4 matrix of float)
0:201              Constant:
0:201                3 (const int)
0:201            Constant:
0:201              0 (const int)
0:201          component-wise multiply ( temp highp float)
0:201            direct index ( temp highp float)
0:201              direct index ( temp highp 4-component vector of float)
0:201                'm' ( temp highp 4X4 matrix of float)
0:201                Constant:
0:201                  2 (const int)
0:201              Constant:
0:201                0 (const int)
0:201            direct index ( temp highp float)
0:201              'tt' ( temp highp 3-component vector of float)
0:201              Constant:
0:201                2 (const int)
0:202        add second child into first child ( temp highp float)
0:202          direct index ( temp highp float)
0:202            direct index ( temp highp 4-component vector of float)
0:202              'm' ( temp highp 4X4 matrix of float)
0:202              Constant:
0:202                3 (const int)
0:202            Constant:
0:202              1 (const int)
0:202          component-wise multiply ( temp highp float)
0:202            direct index ( temp highp float)
0:202              direct index ( temp highp 4-component vector of float)
0:202                'm' ( temp highp 4X4 matrix of float)
0:202                Constant:
0:202                  2 (const int)
0:202              Constant:
0:202                1 (const int)
0:202            direct index ( temp highp float)
0:202              'tt' ( temp highp 3-component vector of float)
0:202              Constant:
0:202                2 (const int)
0:203        add second child into first child ( temp highp float)
0:203          direct index ( temp highp float)
0:203            direct index ( temp highp 4-component vector of float)
0:203              'm' ( temp highp 4X4 matrix of float)
0:203              Constant:
0:203                3 (const int)
0:203            Constant:
0:203              2 (const int)
0:203          component-wise multiply ( temp highp float)
0:203            direct index ( temp highp float)
0:203              direct index ( temp highp 4-component vector of float)
0:203                'm' ( temp highp 4X4 matrix of float)
0:203                Constant:
0:203                  2 (const int)
0:203              Constant:
0:203                2 (const int)
0:203            direct index ( temp highp float)
0:203              'tt' ( temp highp 3-component vector of float)
0:203              Constant:
0:203                2 (const int)
0:204        add second child into first child ( temp highp float)
0:204          direct index ( temp highp float)
0:204            direct index ( temp highp 4-component vector of float)
0:204              'm' ( temp highp 4X4 matrix of float)
0:204              Constant:
0:204                3 (const int)
0:204            Constant:
0:204              3 (const int)
0:204          component-wise multiply ( temp highp float)
0:204            direct index ( temp highp float)
0:204              direct index ( temp highp 4-component vector of float)
0:204                'm' ( temp highp 4X4 matrix of float)
0:204                Constant:
0:204                  2 (const int)
0:204              Constant:
0:204                3 (const int)
0:204            direct index ( temp highp float)
0:204              'tt' ( temp highp 3-component vector of float)
0:204              Constant:
0:204                2 (const int)
0:206      Branch: Return with expression
0:206        'm' ( temp highp 4X4 matrix of float)
0:208  Function Definition: TDInstanceMat3(i1; ( global highp 3X3 matrix of float)
0:208    Function Parameters: 
0:208      'id' ( in highp int)
0:209    Sequence
0:209      Sequence
0:209        move second child to first child ( temp highp 3X3 matrix of float)
0:209          'm' ( temp highp 3X3 matrix of float)
0:209          Constant:
0:209            1.000000
0:209            0.000000
0:209            0.000000
0:209            0.000000
0:209            1.000000
0:209            0.000000
0:209            0.000000
0:209            0.000000
0:209            1.000000
0:210      Branch: Return with expression
0:210        'm' ( temp highp 3X3 matrix of float)
0:212  Function Definition: TDInstanceMat3ForNorm(i1; ( global highp 3X3 matrix of float)
0:212    Function Parameters: 
0:212      'id' ( in highp int)
0:213    Sequence
0:213      Sequence
0:213        move second child to first child ( temp highp 3X3 matrix of float)
0:213          'm' ( temp highp 3X3 matrix of float)
0:213          Function Call: TDInstanceMat3(i1; ( global highp 3X3 matrix of float)
0:213            'id' ( in highp int)
0:214      Branch: Return with expression
0:214        'm' ( temp highp 3X3 matrix of float)
0:216  Function Definition: TDInstanceColor(i1;vf4; ( global highp 4-component vector of float)
0:216    Function Parameters: 
0:216      'index' ( in highp int)
0:216      'curColor' ( in highp 4-component vector of float)
0:217    Sequence
0:217      subtract second child into first child ( temp highp int)
0:217        'index' ( in highp int)
0:217        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:217          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:217          Constant:
0:217            0 (const uint)
0:219      Sequence
0:219        move second child to first child ( temp highp int)
0:219          'coord' ( temp highp int)
0:219          'index' ( in highp int)
0:220      Sequence
0:220        move second child to first child ( temp highp 4-component vector of float)
0:220          'samp' ( temp highp 4-component vector of float)
0:220          textureFetch ( global highp 4-component vector of float)
0:220            'sTDInstanceColor' (layout( binding=17) uniform highp samplerBuffer)
0:220            'coord' ( temp highp int)
0:221      move second child to first child ( temp highp float)
0:221        direct index ( temp highp float)
0:221          'v' ( temp highp 4-component vector of float)
0:221          Constant:
0:221            0 (const int)
0:221        direct index ( temp highp float)
0:221          'samp' ( temp highp 4-component vector of float)
0:221          Constant:
0:221            0 (const int)
0:222      move second child to first child ( temp highp float)
0:222        direct index ( temp highp float)
0:222          'v' ( temp highp 4-component vector of float)
0:222          Constant:
0:222            1 (const int)
0:222        direct index ( temp highp float)
0:222          'samp' ( temp highp 4-component vector of float)
0:222          Constant:
0:222            1 (const int)
0:223      move second child to first child ( temp highp float)
0:223        direct index ( temp highp float)
0:223          'v' ( temp highp 4-component vector of float)
0:223          Constant:
0:223            2 (const int)
0:223        direct index ( temp highp float)
0:223          'samp' ( temp highp 4-component vector of float)
0:223          Constant:
0:223            2 (const int)
0:224      move second child to first child ( temp highp float)
0:224        direct index ( temp highp float)
0:224          'v' ( temp highp 4-component vector of float)
0:224          Constant:
0:224            3 (const int)
0:224        Constant:
0:224          1.000000
0:225      move second child to first child ( temp highp float)
0:225        direct index ( temp highp float)
0:225          'curColor' ( in highp 4-component vector of float)
0:225          Constant:
0:225            0 (const int)
0:225        direct index ( temp highp float)
0:225          'v' ( temp highp 4-component vector of float)
0:225          Constant:
0:225            0 (const int)
0:227      move second child to first child ( temp highp float)
0:227        direct index ( temp highp float)
0:227          'curColor' ( in highp 4-component vector of float)
0:227          Constant:
0:227            1 (const int)
0:227        direct index ( temp highp float)
0:227          'v' ( temp highp 4-component vector of float)
0:227          Constant:
0:227            1 (const int)
0:229      move second child to first child ( temp highp float)
0:229        direct index ( temp highp float)
0:229          'curColor' ( in highp 4-component vector of float)
0:229          Constant:
0:229            2 (const int)
0:229        direct index ( temp highp float)
0:229          'v' ( temp highp 4-component vector of float)
0:229          Constant:
0:229            2 (const int)
0:231      Branch: Return with expression
0:231        'curColor' ( in highp 4-component vector of float)
0:233  Function Definition: TDInstanceDeform(i1;vf4; ( global highp 4-component vector of float)
0:233    Function Parameters: 
0:233      'id' ( in highp int)
0:233      'pos' ( in highp 4-component vector of float)
0:234    Sequence
0:234      move second child to first child ( temp highp 4-component vector of float)
0:234        'pos' ( in highp 4-component vector of float)
0:234        matrix-times-vector ( temp highp 4-component vector of float)
0:234          Function Call: TDInstanceMat(i1; ( global highp 4X4 matrix of float)
0:234            'id' ( in highp int)
0:234          'pos' ( in highp 4-component vector of float)
0:235      Branch: Return with expression
0:235        matrix-times-vector ( temp highp 4-component vector of float)
0:235          world: direct index for structure (layout( column_major std140) global highp 4X4 matrix of float)
0:235            indirect index (layout( column_major std140 offset=0) temp structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals})
0:235              uTDMats: direct index for structure (layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals})
0:235                'anon@3' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals} uTDMats})
0:235                Constant:
0:235                  0 (const uint)
0:235              Function Call: TDCameraIndex( ( global highp int)
0:235            Constant:
0:235              0 (const int)
0:235          'pos' ( in highp 4-component vector of float)
0:238  Function Definition: TDInstanceDeformVec(i1;vf3; ( global highp 3-component vector of float)
0:238    Function Parameters: 
0:238      'id' ( in highp int)
0:238      'vec' ( in highp 3-component vector of float)
0:240    Sequence
0:240      Sequence
0:240        move second child to first child ( temp highp 3X3 matrix of float)
0:240          'm' ( temp highp 3X3 matrix of float)
0:240          Function Call: TDInstanceMat3(i1; ( global highp 3X3 matrix of float)
0:240            'id' ( in highp int)
0:241      Branch: Return with expression
0:241        matrix-times-vector ( temp highp 3-component vector of float)
0:241          Construct mat3 ( temp highp 3X3 matrix of float)
0:241            world: direct index for structure (layout( column_major std140) global highp 4X4 matrix of float)
0:241              indirect index (layout( column_major std140 offset=0) temp structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals})
0:241                uTDMats: direct index for structure (layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals})
0:241                  'anon@3' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals} uTDMats})
0:241                  Constant:
0:241                    0 (const uint)
0:241                Function Call: TDCameraIndex( ( global highp int)
0:241              Constant:
0:241                0 (const int)
0:241          matrix-times-vector ( temp highp 3-component vector of float)
0:241            'm' ( temp highp 3X3 matrix of float)
0:241            'vec' ( in highp 3-component vector of float)
0:243  Function Definition: TDInstanceDeformNorm(i1;vf3; ( global highp 3-component vector of float)
0:243    Function Parameters: 
0:243      'id' ( in highp int)
0:243      'vec' ( in highp 3-component vector of float)
0:245    Sequence
0:245      Sequence
0:245        move second child to first child ( temp highp 3X3 matrix of float)
0:245          'm' ( temp highp 3X3 matrix of float)
0:245          Function Call: TDInstanceMat3ForNorm(i1; ( global highp 3X3 matrix of float)
0:245            'id' ( in highp int)
0:246      Branch: Return with expression
0:246        matrix-times-vector ( temp highp 3-component vector of float)
0:246          Construct mat3 ( temp highp 3X3 matrix of float)
0:246            worldForNormals: direct index for structure (layout( column_major std140) global highp 3X3 matrix of float)
0:246              indirect index (layout( column_major std140 offset=0) temp structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals})
0:246                uTDMats: direct index for structure (layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals})
0:246                  'anon@3' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals} uTDMats})
0:246                  Constant:
0:246                    0 (const uint)
0:246                Function Call: TDCameraIndex( ( global highp int)
0:246              Constant:
0:246                13 (const int)
0:246          matrix-times-vector ( temp highp 3-component vector of float)
0:246            'm' ( temp highp 3X3 matrix of float)
0:246            'vec' ( in highp 3-component vector of float)
0:248  Function Definition: TDInstanceDeform(vf4; ( global highp 4-component vector of float)
0:248    Function Parameters: 
0:248      'pos' ( in highp 4-component vector of float)
0:249    Sequence
0:249      Branch: Return with expression
0:249        Function Call: TDInstanceDeform(i1;vf4; ( global highp 4-component vector of float)
0:249          Function Call: TDInstanceID( ( global highp int)
0:249          'pos' ( in highp 4-component vector of float)
0:251  Function Definition: TDInstanceDeformVec(vf3; ( global highp 3-component vector of float)
0:251    Function Parameters: 
0:251      'vec' ( in highp 3-component vector of float)
0:252    Sequence
0:252      Branch: Return with expression
0:252        Function Call: TDInstanceDeformVec(i1;vf3; ( global highp 3-component vector of float)
0:252          Function Call: TDInstanceID( ( global highp int)
0:252          'vec' ( in highp 3-component vector of float)
0:254  Function Definition: TDInstanceDeformNorm(vf3; ( global highp 3-component vector of float)
0:254    Function Parameters: 
0:254      'vec' ( in highp 3-component vector of float)
0:255    Sequence
0:255      Branch: Return with expression
0:255        Function Call: TDInstanceDeformNorm(i1;vf3; ( global highp 3-component vector of float)
0:255          Function Call: TDInstanceID( ( global highp int)
0:255          'vec' ( in highp 3-component vector of float)
0:257  Function Definition: TDInstanceActive( ( global bool)
0:257    Function Parameters: 
0:257    Sequence
0:257      Branch: Return with expression
0:257        Function Call: TDInstanceActive(i1; ( global bool)
0:257          Function Call: TDInstanceID( ( global highp int)
0:258  Function Definition: TDInstanceTranslate( ( global highp 3-component vector of float)
0:258    Function Parameters: 
0:258    Sequence
0:258      Branch: Return with expression
0:258        Function Call: TDInstanceTranslate(i1; ( global highp 3-component vector of float)
0:258          Function Call: TDInstanceID( ( global highp int)
0:259  Function Definition: TDInstanceRotateMat( ( global highp 3X3 matrix of float)
0:259    Function Parameters: 
0:259    Sequence
0:259      Branch: Return with expression
0:259        Function Call: TDInstanceRotateMat(i1; ( global highp 3X3 matrix of float)
0:259          Function Call: TDInstanceID( ( global highp int)
0:260  Function Definition: TDInstanceScale( ( global highp 3-component vector of float)
0:260    Function Parameters: 
0:260    Sequence
0:260      Branch: Return with expression
0:260        Function Call: TDInstanceScale(i1; ( global highp 3-component vector of float)
0:260          Function Call: TDInstanceID( ( global highp int)
0:261  Function Definition: TDInstanceMat( ( global highp 4X4 matrix of float)
0:261    Function Parameters: 
0:261    Sequence
0:261      Branch: Return with expression
0:261        Function Call: TDInstanceMat(i1; ( global highp 4X4 matrix of float)
0:261          Function Call: TDInstanceID( ( global highp int)
0:263  Function Definition: TDInstanceMat3( ( global highp 3X3 matrix of float)
0:263    Function Parameters: 
0:263    Sequence
0:263      Branch: Return with expression
0:263        Function Call: TDInstanceMat3(i1; ( global highp 3X3 matrix of float)
0:263          Function Call: TDInstanceID( ( global highp int)
0:265  Function Definition: TDInstanceTexCoord(vf3; ( global highp 3-component vector of float)
0:265    Function Parameters: 
0:265      't' ( in highp 3-component vector of float)
0:266    Sequence
0:266      Branch: Return with expression
0:266        Function Call: TDInstanceTexCoord(i1;vf3; ( global highp 3-component vector of float)
0:266          Function Call: TDInstanceID( ( global highp int)
0:266          't' ( in highp 3-component vector of float)
0:268  Function Definition: TDInstanceColor(vf4; ( global highp 4-component vector of float)
0:268    Function Parameters: 
0:268      'curColor' ( in highp 4-component vector of float)
0:269    Sequence
0:269      Branch: Return with expression
0:269        Function Call: TDInstanceColor(i1;vf4; ( global highp 4-component vector of float)
0:269          Function Call: TDInstanceID( ( global highp int)
0:269          'curColor' ( in highp 4-component vector of float)
0:271  Function Definition: TDSkinnedDeform(vf4; ( global highp 4-component vector of float)
0:271    Function Parameters: 
0:271      'pos' ( in highp 4-component vector of float)
0:271    Sequence
0:271      Branch: Return with expression
0:271        'pos' ( in highp 4-component vector of float)
0:273  Function Definition: TDSkinnedDeformVec(vf3; ( global highp 3-component vector of float)
0:273    Function Parameters: 
0:273      'vec' ( in highp 3-component vector of float)
0:273    Sequence
0:273      Branch: Return with expression
0:273        'vec' ( in highp 3-component vector of float)
0:275  Function Definition: TDFastDeformTangent(vf3;vf4;vf3; ( global highp 3-component vector of float)
0:275    Function Parameters: 
0:275      'oldNorm' ( in highp 3-component vector of float)
0:275      'oldTangent' ( in highp 4-component vector of float)
0:275      'deformedNorm' ( in highp 3-component vector of float)
0:276    Sequence
0:276      Branch: Return with expression
0:276        vector swizzle ( temp highp 3-component vector of float)
0:276          'oldTangent' ( in highp 4-component vector of float)
0:276          Sequence
0:276            Constant:
0:276              0 (const int)
0:276            Constant:
0:276              1 (const int)
0:276            Constant:
0:276              2 (const int)
0:277  Function Definition: TDBoneMat(i1; ( global highp 4X4 matrix of float)
0:277    Function Parameters: 
0:277      'index' ( in highp int)
0:278    Sequence
0:278      Branch: Return with expression
0:278        Constant:
0:278          1.000000
0:278          0.000000
0:278          0.000000
0:278          0.000000
0:278          0.000000
0:278          1.000000
0:278          0.000000
0:278          0.000000
0:278          0.000000
0:278          0.000000
0:278          1.000000
0:278          0.000000
0:278          0.000000
0:278          0.000000
0:278          0.000000
0:278          1.000000
0:280  Function Definition: TDDeform(vf4; ( global highp 4-component vector of float)
0:280    Function Parameters: 
0:280      'pos' ( in highp 4-component vector of float)
0:281    Sequence
0:281      move second child to first child ( temp highp 4-component vector of float)
0:281        'pos' ( in highp 4-component vector of float)
0:281        Function Call: TDSkinnedDeform(vf4; ( global highp 4-component vector of float)
0:281          'pos' ( in highp 4-component vector of float)
0:282      move second child to first child ( temp highp 4-component vector of float)
0:282        'pos' ( in highp 4-component vector of float)
0:282        Function Call: TDInstanceDeform(vf4; ( global highp 4-component vector of float)
0:282          'pos' ( in highp 4-component vector of float)
0:283      Branch: Return with expression
0:283        'pos' ( in highp 4-component vector of float)
0:286  Function Definition: TDDeform(i1;vf3; ( global highp 4-component vector of float)
0:286    Function Parameters: 
0:286      'instanceID' ( in highp int)
0:286      'p' ( in highp 3-component vector of float)
0:287    Sequence
0:287      Sequence
0:287        move second child to first child ( temp highp 4-component vector of float)
0:287          'pos' ( temp highp 4-component vector of float)
0:287          Construct vec4 ( temp highp 4-component vector of float)
0:287            'p' ( in highp 3-component vector of float)
0:287            Constant:
0:287              1.000000
0:288      move second child to first child ( temp highp 4-component vector of float)
0:288        'pos' ( temp highp 4-component vector of float)
0:288        Function Call: TDSkinnedDeform(vf4; ( global highp 4-component vector of float)
0:288          'pos' ( temp highp 4-component vector of float)
0:289      move second child to first child ( temp highp 4-component vector of float)
0:289        'pos' ( temp highp 4-component vector of float)
0:289        Function Call: TDInstanceDeform(i1;vf4; ( global highp 4-component vector of float)
0:289          'instanceID' ( in highp int)
0:289          'pos' ( temp highp 4-component vector of float)
0:290      Branch: Return with expression
0:290        'pos' ( temp highp 4-component vector of float)
0:293  Function Definition: TDDeform(vf3; ( global highp 4-component vector of float)
0:293    Function Parameters: 
0:293      'pos' ( in highp 3-component vector of float)
0:294    Sequence
0:294      Branch: Return with expression
0:294        Function Call: TDDeform(i1;vf3; ( global highp 4-component vector of float)
0:294          Function Call: TDInstanceID( ( global highp int)
0:294          'pos' ( in highp 3-component vector of float)
0:297  Function Definition: TDDeformVec(i1;vf3; ( global highp 3-component vector of float)
0:297    Function Parameters: 
0:297      'instanceID' ( in highp int)
0:297      'vec' ( in highp 3-component vector of float)
0:298    Sequence
0:298      move second child to first child ( temp highp 3-component vector of float)
0:298        'vec' ( in highp 3-component vector of float)
0:298        Function Call: TDSkinnedDeformVec(vf3; ( global highp 3-component vector of float)
0:298          'vec' ( in highp 3-component vector of float)
0:299      move second child to first child ( temp highp 3-component vector of float)
0:299        'vec' ( in highp 3-component vector of float)
0:299        Function Call: TDInstanceDeformVec(i1;vf3; ( global highp 3-component vector of float)
0:299          'instanceID' ( in highp int)
0:299          'vec' ( in highp 3-component vector of float)
0:300      Branch: Return with expression
0:300        'vec' ( in highp 3-component vector of float)
0:303  Function Definition: TDDeformVec(vf3; ( global highp 3-component vector of float)
0:303    Function Parameters: 
0:303      'vec' ( in highp 3-component vector of float)
0:304    Sequence
0:304      Branch: Return with expression
0:304        Function Call: TDDeformVec(i1;vf3; ( global highp 3-component vector of float)
0:304          Function Call: TDInstanceID( ( global highp int)
0:304          'vec' ( in highp 3-component vector of float)
0:307  Function Definition: TDDeformNorm(i1;vf3; ( global highp 3-component vector of float)
0:307    Function Parameters: 
0:307      'instanceID' ( in highp int)
0:307      'vec' ( in highp 3-component vector of float)
0:308    Sequence
0:308      move second child to first child ( temp highp 3-component vector of float)
0:308        'vec' ( in highp 3-component vector of float)
0:308        Function Call: TDSkinnedDeformVec(vf3; ( global highp 3-component vector of float)
0:308          'vec' ( in highp 3-component vector of float)
0:309      move second child to first child ( temp highp 3-component vector of float)
0:309        'vec' ( in highp 3-component vector of float)
0:309        Function Call: TDInstanceDeformNorm(i1;vf3; ( global highp 3-component vector of float)
0:309          'instanceID' ( in highp int)
0:309          'vec' ( in highp 3-component vector of float)
0:310      Branch: Return with expression
0:310        'vec' ( in highp 3-component vector of float)
0:313  Function Definition: TDDeformNorm(vf3; ( global highp 3-component vector of float)
0:313    Function Parameters: 
0:313      'vec' ( in highp 3-component vector of float)
0:314    Sequence
0:314      Branch: Return with expression
0:314        Function Call: TDDeformNorm(i1;vf3; ( global highp 3-component vector of float)
0:314          Function Call: TDInstanceID( ( global highp int)
0:314          'vec' ( in highp 3-component vector of float)
0:317  Function Definition: TDSkinnedDeformNorm(vf3; ( global highp 3-component vector of float)
0:317    Function Parameters: 
0:317      'vec' ( in highp 3-component vector of float)
0:318    Sequence
0:318      move second child to first child ( temp highp 3-component vector of float)
0:318        'vec' ( in highp 3-component vector of float)
0:318        Function Call: TDSkinnedDeformVec(vf3; ( global highp 3-component vector of float)
0:318          'vec' ( in highp 3-component vector of float)
0:319      Branch: Return with expression
0:319        'vec' ( in highp 3-component vector of float)
0:?   Linker Objects
0:?     'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal})
0:?     'anon@1' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals} uTDMats})
0:?     'anon@2' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{ global highp 4-component vector of float nearFar,  global highp 4-component vector of float fog,  global highp 4-component vector of float fogColor,  global highp int renderTOPCameraIndex} uTDCamInfos})
0:?     'anon@3' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform structure{ global highp 4-component vector of float ambientColor,  global highp 4-component vector of float nearFar,  global highp 4-component vector of float viewport,  global highp 4-component vector of float viewportRes,  global highp 4-component vector of float fog,  global highp 4-component vector of float fogColor} uTDGeneral})
0:?     'P' (layout( location=0) in highp 3-component vector of float)
0:?     'N' (layout( location=1) in highp 3-component vector of float)
0:?     'Cd' (layout( location=2) in highp 4-component vector of float)
0:?     'uv' (layout( location=3) in 8-element array of highp 3-component vector of float)
0:?     'oVert' ( out block{ out highp 4-component vector of float color,  out highp 3-component vector of float worldSpacePos,  out highp 3-component vector of float texCoord0,  flat out highp int cameraIndex,  flat out highp int instance})
0:?     'anon@4' ( out block{ gl_Position 4-component vector of float Position gl_Position,  gl_PointSize float PointSize gl_PointSize,  out 1-element array of float ClipDistance gl_ClipDistance,  out 1-element array of float CullDistance gl_CullDistance})
0:?     'gl_VertexIndex' ( in int VertexIndex)
0:?     'gl_InstanceIndex' ( in int InstanceIndex)
0:?     'anon@1' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{ global highp 4-component vector of float position,  global highp 3-component vector of float direction,  global highp 3-component vector of float diffuse,  global highp 4-component vector of float nearFar,  global highp 4-component vector of float lightSize,  global highp 4-component vector of float misc,  global highp 4-component vector of float coneLookupScaleBias,  global highp 4-component vector of float attenScaleBiasRoll, layout( column_major std140) global highp 4X4 matrix of float shadowMapMatrix, layout( column_major std140) global highp 4X4 matrix of float shadowMapCamMatrix,  global highp 4-component vector of float shadowMapRes, layout( column_major std140) global highp 4X4 matrix of float projMapMatrix} uTDLights})
0:?     'anon@2' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{ global highp 3-component vector of float color, layout( column_major std140) global highp 3X3 matrix of float rotate} uTDEnvLights})
0:?     'uTDEnvLightBuffers' (layout( column_major std430) restrict readonly buffer 1-element array of block{layout( column_major std430 offset=0) restrict readonly buffer 9-element array of highp 3-component vector of float shCoeffs})
0:?     'mTD2DImageOutputs' (layout( rgba8) uniform 1-element array of highp image2D)
0:?     'mTD2DArrayImageOutputs' (layout( rgba8) uniform 1-element array of highp image2DArray)
0:?     'mTD3DImageOutputs' (layout( rgba8) uniform 1-element array of highp image3D)
0:?     'mTDCubeImageOutputs' (layout( rgba8) uniform 1-element array of highp imageCube)
0:?     'sTDInstanceT' (layout( binding=15) uniform highp samplerBuffer)
0:?     'sTDInstanceTexCoord' (layout( binding=16) uniform highp samplerBuffer)
0:?     'sTDInstanceColor' (layout( binding=17) uniform highp samplerBuffer)
Shader version: 460
gl_FragCoord origin is upper left
0:? Sequence
0:95  Function Definition: main( ( global void)
0:95    Function Parameters: 
0:99    Sequence
0:99      Function Call: TDCheckDiscard( ( global void)
0:101      Sequence
0:101        move second child to first child ( temp highp 4-component vector of float)
0:101          'outcol' ( temp highp 4-component vector of float)
0:101          Constant:
0:101            0.000000
0:101            0.000000
0:101            0.000000
0:101            0.000000
0:103      Sequence
0:103        move second child to first child ( temp highp 3-component vector of float)
0:103          'texCoord0' ( temp highp 3-component vector of float)
0:103          vector swizzle ( temp highp 3-component vector of float)
0:103            texCoord0: direct index for structure ( in highp 3-component vector of float)
0:103              'iVert' ( in block{ in highp 4-component vector of float color,  in highp 3-component vector of float worldSpacePos,  in highp 3-component vector of float texCoord0,  flat in highp int cameraIndex,  flat in highp int instance})
0:103              Constant:
0:103                2 (const int)
0:103            Sequence
0:103              Constant:
0:103                0 (const int)
0:103              Constant:
0:103                1 (const int)
0:103              Constant:
0:103                2 (const int)
0:104      Sequence
0:104        move second child to first child ( temp highp float)
0:104          'actualTexZ' ( temp highp float)
0:104          mod ( global highp float)
0:104            Convert int to float ( temp highp float)
0:104              Convert float to int ( temp highp int)
0:104                direct index ( temp highp float)
0:104                  'texCoord0' ( temp highp 3-component vector of float)
0:104                  Constant:
0:104                    2 (const int)
0:104            Constant:
0:104              2048.000000
0:105      Sequence
0:105        move second child to first child ( temp highp float)
0:105          'instanceLoop' ( temp highp float)
0:105          Floor ( global highp float)
0:105            Convert int to float ( temp highp float)
0:105              divide ( temp highp int)
0:105                Convert float to int ( temp highp int)
0:105                  direct index ( temp highp float)
0:105                    'texCoord0' ( temp highp 3-component vector of float)
0:105                    Constant:
0:105                      2 (const int)
0:105                Constant:
0:105                  2048 (const int)
0:106      move second child to first child ( temp highp float)
0:106        direct index ( temp highp float)
0:106          'texCoord0' ( temp highp 3-component vector of float)
0:106          Constant:
0:106            2 (const int)
0:106        'actualTexZ' ( temp highp float)
0:107      Sequence
0:107        move second child to first child ( temp highp 4-component vector of float)
0:107          'colorMapColor' ( temp highp 4-component vector of float)
0:107          texture ( global highp 4-component vector of float)
0:107            'sColorMap' ( uniform highp sampler2DArray)
0:107            vector swizzle ( temp highp 3-component vector of float)
0:107              'texCoord0' ( temp highp 3-component vector of float)
0:107              Sequence
0:107                Constant:
0:107                  0 (const int)
0:107                Constant:
0:107                  1 (const int)
0:107                Constant:
0:107                  2 (const int)
0:109      Sequence
0:109        move second child to first child ( temp highp float)
0:109          'red' ( temp highp float)
0:109          indirect index ( temp highp float)
0:109            'colorMapColor' ( temp highp 4-component vector of float)
0:109            Convert float to int ( temp highp int)
0:109              'instanceLoop' ( temp highp float)
0:110      move second child to first child ( temp highp 4-component vector of float)
0:110        'colorMapColor' ( temp highp 4-component vector of float)
0:110        Construct vec4 ( temp highp 4-component vector of float)
0:110          'red' ( temp highp float)
0:112      add second child into first child ( temp highp 3-component vector of float)
0:112        vector swizzle ( temp highp 3-component vector of float)
0:112          'outcol' ( temp highp 4-component vector of float)
0:112          Sequence
0:112            Constant:
0:112              0 (const int)
0:112            Constant:
0:112              1 (const int)
0:112            Constant:
0:112              2 (const int)
0:112        component-wise multiply ( temp highp 3-component vector of float)
0:112          uConstant: direct index for structure ( uniform highp 3-component vector of float)
0:112            'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal,  uniform highp 3-component vector of float uConstant,  uniform highp float uShadowStrength,  uniform highp 3-component vector of float uShadowColor,  uniform highp 4-component vector of float uDiffuseColor,  uniform highp 4-component vector of float uAmbientColor})
0:112            Constant:
0:112              3 (const uint)
0:112          vector swizzle ( temp highp 3-component vector of float)
0:112            color: direct index for structure ( in highp 4-component vector of float)
0:112              'iVert' ( in block{ in highp 4-component vector of float color,  in highp 3-component vector of float worldSpacePos,  in highp 3-component vector of float texCoord0,  flat in highp int cameraIndex,  flat in highp int instance})
0:112              Constant:
0:112                0 (const int)
0:112            Sequence
0:112              Constant:
0:112                0 (const int)
0:112              Constant:
0:112                1 (const int)
0:112              Constant:
0:112                2 (const int)
0:114      multiply second child into first child ( temp highp 4-component vector of float)
0:114        'outcol' ( temp highp 4-component vector of float)
0:114        'colorMapColor' ( temp highp 4-component vector of float)
0:117      Sequence
0:117        move second child to first child ( temp highp float)
0:117          'alpha' ( temp highp float)
0:117          component-wise multiply ( temp highp float)
0:117            direct index ( temp highp float)
0:117              color: direct index for structure ( in highp 4-component vector of float)
0:117                'iVert' ( in block{ in highp 4-component vector of float color,  in highp 3-component vector of float worldSpacePos,  in highp 3-component vector of float texCoord0,  flat in highp int cameraIndex,  flat in highp int instance})
0:117                Constant:
0:117                  0 (const int)
0:117              Constant:
0:117                3 (const int)
0:117            direct index ( temp highp float)
0:117              'colorMapColor' ( temp highp 4-component vector of float)
0:117              Constant:
0:117                3 (const int)
0:120      move second child to first child ( temp highp 4-component vector of float)
0:120        'outcol' ( temp highp 4-component vector of float)
0:120        Function Call: TDDither(vf4; ( global highp 4-component vector of float)
0:120          'outcol' ( temp highp 4-component vector of float)
0:122      vector scale second child into first child ( temp highp 3-component vector of float)
0:122        vector swizzle ( temp highp 3-component vector of float)
0:122          'outcol' ( temp highp 4-component vector of float)
0:122          Sequence
0:122            Constant:
0:122              0 (const int)
0:122            Constant:
0:122              1 (const int)
0:122            Constant:
0:122              2 (const int)
0:122        'alpha' ( temp highp float)
0:126      Function Call: TDAlphaTest(f1; ( global void)
0:126        'alpha' ( temp highp float)
0:128      move second child to first child ( temp highp float)
0:128        direct index ( temp highp float)
0:128          'outcol' ( temp highp 4-component vector of float)
0:128          Constant:
0:128            3 (const int)
0:128        'alpha' ( temp highp float)
0:129      move second child to first child ( temp highp 4-component vector of float)
0:129        direct index (layout( location=0) temp highp 4-component vector of float)
0:129          'oFragColor' (layout( location=0) out 1-element array of highp 4-component vector of float)
0:129          Constant:
0:129            0 (const int)
0:129        Function Call: TDOutputSwizzle(vf4; ( global highp 4-component vector of float)
0:129          'outcol' ( temp highp 4-component vector of float)
0:135      Sequence
0:135        Sequence
0:135          move second child to first child ( temp highp int)
0:135            'i' ( temp highp int)
0:135            Constant:
0:135              1 (const int)
0:135        Loop with condition tested first
0:135          Loop Condition
0:135          Compare Less Than ( temp bool)
0:135            'i' ( temp highp int)
0:135            Constant:
0:135              1 (const int)
0:135          Loop Body
0:137          Sequence
0:137            move second child to first child ( temp highp 4-component vector of float)
0:137              indirect index (layout( location=0) temp highp 4-component vector of float)
0:137                'oFragColor' (layout( location=0) out 1-element array of highp 4-component vector of float)
0:137                'i' ( temp highp int)
0:137              Constant:
0:137                0.000000
0:137                0.000000
0:137                0.000000
0:137                0.000000
0:135          Loop Terminal Expression
0:135          Post-Increment ( temp highp int)
0:135            'i' ( temp highp int)
0:116  Function Definition: TDColor(vf4; ( global highp 4-component vector of float)
0:116    Function Parameters: 
0:116      'color' ( in highp 4-component vector of float)
0:116    Sequence
0:116      Branch: Return with expression
0:116        'color' ( in highp 4-component vector of float)
0:117  Function Definition: TDCheckOrderIndTrans( ( global void)
0:117    Function Parameters: 
0:119  Function Definition: TDCheckDiscard( ( global void)
0:119    Function Parameters: 
0:120    Sequence
0:120      Function Call: TDCheckOrderIndTrans( ( global void)
0:122  Function Definition: TDDither(vf4; ( global highp 4-component vector of float)
0:122    Function Parameters: 
0:122      'color' ( in highp 4-component vector of float)
0:124    Sequence
0:124      Sequence
0:124        move second child to first child ( temp highp float)
0:124          'd' ( temp highp float)
0:125          direct index ( temp highp float)
0:125            texture ( global highp 4-component vector of float)
0:124              'sTDNoiseMap' ( uniform highp sampler2D)
0:125              divide ( temp highp 2-component vector of float)
0:125                vector swizzle ( temp highp 2-component vector of float)
0:125                  'gl_FragCoord' ( gl_FragCoord highp 4-component vector of float FragCoord)
0:125                  Sequence
0:125                    Constant:
0:125                      0 (const int)
0:125                    Constant:
0:125                      1 (const int)
0:125                Constant:
0:125                  256.000000
0:125            Constant:
0:125              0 (const int)
0:126      subtract second child into first child ( temp highp float)
0:126        'd' ( temp highp float)
0:126        Constant:
0:126          0.500000
0:127      divide second child into first child ( temp highp float)
0:127        'd' ( temp highp float)
0:127        Constant:
0:127          256.000000
0:128      Branch: Return with expression
0:128        Construct vec4 ( temp highp 4-component vector of float)
0:128          add ( temp highp 3-component vector of float)
0:128            vector swizzle ( temp highp 3-component vector of float)
0:128              'color' ( in highp 4-component vector of float)
0:128              Sequence
0:128                Constant:
0:128                  0 (const int)
0:128                Constant:
0:128                  1 (const int)
0:128                Constant:
0:128                  2 (const int)
0:128            'd' ( temp highp float)
0:128          direct index ( temp highp float)
0:128            'color' ( in highp 4-component vector of float)
0:128            Constant:
0:128              3 (const int)
0:130  Function Definition: TDFrontFacing(vf3;vf3; ( global bool)
0:130    Function Parameters: 
0:130      'pos' ( in highp 3-component vector of float)
0:130      'normal' ( in highp 3-component vector of float)
0:132    Sequence
0:132      Branch: Return with expression
0:132        'gl_FrontFacing' ( gl_FrontFacing bool Face)
0:134  Function Definition: TDAttenuateLight(i1;f1; ( global highp float)
0:134    Function Parameters: 
0:134      'index' ( in highp int)
0:134      'lightDist' ( in highp float)
0:136    Sequence
0:136      Branch: Return with expression
0:136        Constant:
0:136          1.000000
0:138  Function Definition: TDAlphaTest(f1; ( global void)
0:138    Function Parameters: 
0:138      'alpha' ( in highp float)
0:140  Function Definition: TDHardShadow(i1;vf3; ( global highp float)
0:140    Function Parameters: 
0:140      'lightIndex' ( in highp int)
0:140      'worldSpacePos' ( in highp 3-component vector of float)
0:141    Sequence
0:141      Branch: Return with expression
0:141        Constant:
0:141          0.000000
0:142  Function Definition: TDSoftShadow(i1;vf3;i1;i1; ( global highp float)
0:142    Function Parameters: 
0:142      'lightIndex' ( in highp int)
0:142      'worldSpacePos' ( in highp 3-component vector of float)
0:142      'samples' ( in highp int)
0:142      'steps' ( in highp int)
0:143    Sequence
0:143      Branch: Return with expression
0:143        Constant:
0:143          0.000000
0:144  Function Definition: TDSoftShadow(i1;vf3; ( global highp float)
0:144    Function Parameters: 
0:144      'lightIndex' ( in highp int)
0:144      'worldSpacePos' ( in highp 3-component vector of float)
0:145    Sequence
0:145      Branch: Return with expression
0:145        Constant:
0:145          0.000000
0:146  Function Definition: TDShadow(i1;vf3; ( global highp float)
0:146    Function Parameters: 
0:146      'lightIndex' ( in highp int)
0:146      'worldSpacePos' ( in highp 3-component vector of float)
0:147    Sequence
0:147      Branch: Return with expression
0:147        Constant:
0:147          0.000000
0:152  Function Definition: iTDRadicalInverse_VdC(u1; ( global highp float)
0:152    Function Parameters: 
0:152      'bits' ( in highp uint)
0:154    Sequence
0:154      move second child to first child ( temp highp uint)
0:154        'bits' ( in highp uint)
0:154        inclusive-or ( temp highp uint)
0:154          left-shift ( temp highp uint)
0:154            'bits' ( in highp uint)
0:154            Constant:
0:154              16 (const uint)
0:154          right-shift ( temp highp uint)
0:154            'bits' ( in highp uint)
0:154            Constant:
0:154              16 (const uint)
0:155      move second child to first child ( temp highp uint)
0:155        'bits' ( in highp uint)
0:155        inclusive-or ( temp highp uint)
0:155          left-shift ( temp highp uint)
0:155            bitwise and ( temp highp uint)
0:155              'bits' ( in highp uint)
0:155              Constant:
0:155                1431655765 (const uint)
0:155            Constant:
0:155              1 (const uint)
0:155          right-shift ( temp highp uint)
0:155            bitwise and ( temp highp uint)
0:155              'bits' ( in highp uint)
0:155              Constant:
0:155                2863311530 (const uint)
0:155            Constant:
0:155              1 (const uint)
0:156      move second child to first child ( temp highp uint)
0:156        'bits' ( in highp uint)
0:156        inclusive-or ( temp highp uint)
0:156          left-shift ( temp highp uint)
0:156            bitwise and ( temp highp uint)
0:156              'bits' ( in highp uint)
0:156              Constant:
0:156                858993459 (const uint)
0:156            Constant:
0:156              2 (const uint)
0:156          right-shift ( temp highp uint)
0:156            bitwise and ( temp highp uint)
0:156              'bits' ( in highp uint)
0:156              Constant:
0:156                3435973836 (const uint)
0:156            Constant:
0:156              2 (const uint)
0:157      move second child to first child ( temp highp uint)
0:157        'bits' ( in highp uint)
0:157        inclusive-or ( temp highp uint)
0:157          left-shift ( temp highp uint)
0:157            bitwise and ( temp highp uint)
0:157              'bits' ( in highp uint)
0:157              Constant:
0:157                252645135 (const uint)
0:157            Constant:
0:157              4 (const uint)
0:157          right-shift ( temp highp uint)
0:157            bitwise and ( temp highp uint)
0:157              'bits' ( in highp uint)
0:157              Constant:
0:157                4042322160 (const uint)
0:157            Constant:
0:157              4 (const uint)
0:158      move second child to first child ( temp highp uint)
0:158        'bits' ( in highp uint)
0:158        inclusive-or ( temp highp uint)
0:158          left-shift ( temp highp uint)
0:158            bitwise and ( temp highp uint)
0:158              'bits' ( in highp uint)
0:158              Constant:
0:158                16711935 (const uint)
0:158            Constant:
0:158              8 (const uint)
0:158          right-shift ( temp highp uint)
0:158            bitwise and ( temp highp uint)
0:158              'bits' ( in highp uint)
0:158              Constant:
0:158                4278255360 (const uint)
0:158            Constant:
0:158              8 (const uint)
0:159      Branch: Return with expression
0:159        component-wise multiply ( temp highp float)
0:159          Convert uint to float ( temp highp float)
0:159            'bits' ( in highp uint)
0:159          Constant:
0:159            2.3283064365387e-10
0:161  Function Definition: iTDHammersley(u1;u1; ( global highp 2-component vector of float)
0:161    Function Parameters: 
0:161      'i' ( in highp uint)
0:161      'N' ( in highp uint)
0:163    Sequence
0:163      Branch: Return with expression
0:163        Construct vec2 ( temp highp 2-component vector of float)
0:163          divide ( temp highp float)
0:163            Convert uint to float ( temp highp float)
0:163              'i' ( in highp uint)
0:163            Convert uint to float ( temp highp float)
0:163              'N' ( in highp uint)
0:163          Function Call: iTDRadicalInverse_VdC(u1; ( global highp float)
0:163            'i' ( in highp uint)
0:165  Function Definition: iTDImportanceSampleGGX(vf2;f1;vf3; ( global highp 3-component vector of float)
0:165    Function Parameters: 
0:165      'Xi' ( in highp 2-component vector of float)
0:165      'roughness2' ( in highp float)
0:165      'N' ( in highp 3-component vector of float)
0:167    Sequence
0:167      Sequence
0:167        move second child to first child ( temp highp float)
0:167          'a' ( temp highp float)
0:167          'roughness2' ( in highp float)
0:168      Sequence
0:168        move second child to first child ( temp highp float)
0:168          'phi' ( temp highp float)
0:168          component-wise multiply ( temp highp float)
0:168            Constant:
0:168              6.283185
0:168            direct index ( temp highp float)
0:168              'Xi' ( in highp 2-component vector of float)
0:168              Constant:
0:168                0 (const int)
0:169      Sequence
0:169        move second child to first child ( temp highp float)
0:169          'cosTheta' ( temp highp float)
0:169          sqrt ( global highp float)
0:169            divide ( temp highp float)
0:169              subtract ( temp highp float)
0:169                Constant:
0:169                  1.000000
0:169                direct index ( temp highp float)
0:169                  'Xi' ( in highp 2-component vector of float)
0:169                  Constant:
0:169                    1 (const int)
0:169              add ( temp highp float)
0:169                Constant:
0:169                  1.000000
0:169                component-wise multiply ( temp highp float)
0:169                  subtract ( temp highp float)
0:169                    component-wise multiply ( temp highp float)
0:169                      'a' ( temp highp float)
0:169                      'a' ( temp highp float)
0:169                    Constant:
0:169                      1.000000
0:169                  direct index ( temp highp float)
0:169                    'Xi' ( in highp 2-component vector of float)
0:169                    Constant:
0:169                      1 (const int)
0:170      Sequence
0:170        move second child to first child ( temp highp float)
0:170          'sinTheta' ( temp highp float)
0:170          sqrt ( global highp float)
0:170            subtract ( temp highp float)
0:170              Constant:
0:170                1.000000
0:170              component-wise multiply ( temp highp float)
0:170                'cosTheta' ( temp highp float)
0:170                'cosTheta' ( temp highp float)
0:173      move second child to first child ( temp highp float)
0:173        direct index ( temp highp float)
0:173          'H' ( temp highp 3-component vector of float)
0:173          Constant:
0:173            0 (const int)
0:173        component-wise multiply ( temp highp float)
0:173          'sinTheta' ( temp highp float)
0:173          cosine ( global highp float)
0:173            'phi' ( temp highp float)
0:174      move second child to first child ( temp highp float)
0:174        direct index ( temp highp float)
0:174          'H' ( temp highp 3-component vector of float)
0:174          Constant:
0:174            1 (const int)
0:174        component-wise multiply ( temp highp float)
0:174          'sinTheta' ( temp highp float)
0:174          sine ( global highp float)
0:174            'phi' ( temp highp float)
0:175      move second child to first child ( temp highp float)
0:175        direct index ( temp highp float)
0:175          'H' ( temp highp 3-component vector of float)
0:175          Constant:
0:175            2 (const int)
0:175        'cosTheta' ( temp highp float)
0:177      Sequence
0:177        move second child to first child ( temp highp 3-component vector of float)
0:177          'upVector' ( temp highp 3-component vector of float)
0:177          Test condition and select ( temp highp 3-component vector of float)
0:177            Condition
0:177            Compare Less Than ( temp bool)
0:177              Absolute value ( global highp float)
0:177                direct index ( temp highp float)
0:177                  'N' ( in highp 3-component vector of float)
0:177                  Constant:
0:177                    2 (const int)
0:177              Constant:
0:177                0.999000
0:177            true case
0:177            Constant:
0:177              0.000000
0:177              0.000000
0:177              1.000000
0:177            false case
0:177            Constant:
0:177              1.000000
0:177              0.000000
0:177              0.000000
0:178      Sequence
0:178        move second child to first child ( temp highp 3-component vector of float)
0:178          'tangentX' ( temp highp 3-component vector of float)
0:178          normalize ( global highp 3-component vector of float)
0:178            cross-product ( global highp 3-component vector of float)
0:178              'upVector' ( temp highp 3-component vector of float)
0:178              'N' ( in highp 3-component vector of float)
0:179      Sequence
0:179        move second child to first child ( temp highp 3-component vector of float)
0:179          'tangentY' ( temp highp 3-component vector of float)
0:179          cross-product ( global highp 3-component vector of float)
0:179            'N' ( in highp 3-component vector of float)
0:179            'tangentX' ( temp highp 3-component vector of float)
0:182      Sequence
0:182        move second child to first child ( temp highp 3-component vector of float)
0:182          'worldResult' ( temp highp 3-component vector of float)
0:182          add ( temp highp 3-component vector of float)
0:182            add ( temp highp 3-component vector of float)
0:182              vector-scale ( temp highp 3-component vector of float)
0:182                'tangentX' ( temp highp 3-component vector of float)
0:182                direct index ( temp highp float)
0:182                  'H' ( temp highp 3-component vector of float)
0:182                  Constant:
0:182                    0 (const int)
0:182              vector-scale ( temp highp 3-component vector of float)
0:182                'tangentY' ( temp highp 3-component vector of float)
0:182                direct index ( temp highp float)
0:182                  'H' ( temp highp 3-component vector of float)
0:182                  Constant:
0:182                    1 (const int)
0:182            vector-scale ( temp highp 3-component vector of float)
0:182              'N' ( in highp 3-component vector of float)
0:182              direct index ( temp highp float)
0:182                'H' ( temp highp 3-component vector of float)
0:182                Constant:
0:182                  2 (const int)
0:183      Branch: Return with expression
0:183        'worldResult' ( temp highp 3-component vector of float)
0:185  Function Definition: iTDDistributionGGX(vf3;vf3;f1; ( global highp float)
0:185    Function Parameters: 
0:185      'normal' ( in highp 3-component vector of float)
0:185      'half_vector' ( in highp 3-component vector of float)
0:185      'roughness2' ( in highp float)
0:?     Sequence
0:189      Sequence
0:189        move second child to first child ( temp highp float)
0:189          'NdotH' ( temp highp float)
0:189          clamp ( global highp float)
0:189            dot-product ( global highp float)
0:189              'normal' ( in highp 3-component vector of float)
0:189              'half_vector' ( in highp 3-component vector of float)
0:189            Constant:
0:189              1.0000000000000e-06
0:189            Constant:
0:189              1.000000
0:191      Sequence
0:191        move second child to first child ( temp highp float)
0:191          'alpha2' ( temp highp float)
0:191          component-wise multiply ( temp highp float)
0:191            'roughness2' ( in highp float)
0:191            'roughness2' ( in highp float)
0:193      Sequence
0:193        move second child to first child ( temp highp float)
0:193          'denom' ( temp highp float)
0:193          add ( temp highp float)
0:193            component-wise multiply ( temp highp float)
0:193              component-wise multiply ( temp highp float)
0:193                'NdotH' ( temp highp float)
0:193                'NdotH' ( temp highp float)
0:193              subtract ( temp highp float)
0:193                'alpha2' ( temp highp float)
0:193                Constant:
0:193                  1.000000
0:193            Constant:
0:193              1.000000
0:194      move second child to first child ( temp highp float)
0:194        'denom' ( temp highp float)
0:194        max ( global highp float)
0:194          Constant:
0:194            1.0000000000000e-08
0:194          'denom' ( temp highp float)
0:195      Branch: Return with expression
0:195        divide ( temp highp float)
0:195          'alpha2' ( temp highp float)
0:195          component-wise multiply ( temp highp float)
0:195            component-wise multiply ( temp highp float)
0:195              Constant:
0:195                3.141593
0:195              'denom' ( temp highp float)
0:195            'denom' ( temp highp float)
0:197  Function Definition: iTDCalcF(vf3;f1; ( global highp 3-component vector of float)
0:197    Function Parameters: 
0:197      'F0' ( in highp 3-component vector of float)
0:197      'VdotH' ( in highp float)
0:198    Sequence
0:198      Branch: Return with expression
0:198        add ( temp highp 3-component vector of float)
0:198          'F0' ( in highp 3-component vector of float)
0:198          vector-scale ( temp highp 3-component vector of float)
0:198            subtract ( temp highp 3-component vector of float)
0:198              Constant:
0:198                1.000000
0:198                1.000000
0:198                1.000000
0:198              'F0' ( in highp 3-component vector of float)
0:198            pow ( global highp float)
0:198              Constant:
0:198                2.000000
0:198              component-wise multiply ( temp highp float)
0:198                subtract ( temp highp float)
0:198                  component-wise multiply ( temp highp float)
0:198                    Constant:
0:198                      -5.554730
0:198                    'VdotH' ( in highp float)
0:198                  Constant:
0:198                    6.983160
0:198                'VdotH' ( in highp float)
0:201  Function Definition: iTDCalcG(f1;f1;f1; ( global highp float)
0:201    Function Parameters: 
0:201      'NdotL' ( in highp float)
0:201      'NdotV' ( in highp float)
0:201      'k' ( in highp float)
0:202    Sequence
0:202      Sequence
0:202        move second child to first child ( temp highp float)
0:202          'Gl' ( temp highp float)
0:202          divide ( temp highp float)
0:202            Constant:
0:202              1.000000
0:202            add ( temp highp float)
0:202              component-wise multiply ( temp highp float)
0:202                'NdotL' ( in highp float)
0:202                subtract ( temp highp float)
0:202                  Constant:
0:202                    1.000000
0:202                  'k' ( in highp float)
0:202              'k' ( in highp float)
0:203      Sequence
0:203        move second child to first child ( temp highp float)
0:203          'Gv' ( temp highp float)
0:203          divide ( temp highp float)
0:203            Constant:
0:203              1.000000
0:203            add ( temp highp float)
0:203              component-wise multiply ( temp highp float)
0:203                'NdotV' ( in highp float)
0:203                subtract ( temp highp float)
0:203                  Constant:
0:203                    1.000000
0:203                  'k' ( in highp float)
0:203              'k' ( in highp float)
0:204      Branch: Return with expression
0:204        component-wise multiply ( temp highp float)
0:204          'Gl' ( temp highp float)
0:204          'Gv' ( temp highp float)
0:207  Function Definition: TDLightingPBR(i1;vf3;vf3;vf3;vf3;f1;vf3;vf3;f1; ( global structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:207    Function Parameters: 
0:207      'index' ( in highp int)
0:207      'diffuseColor' ( in highp 3-component vector of float)
0:207      'specularColor' ( in highp 3-component vector of float)
0:207      'worldSpacePos' ( in highp 3-component vector of float)
0:207      'normal' ( in highp 3-component vector of float)
0:207      'shadowStrength' ( in highp float)
0:207      'shadowColor' ( in highp 3-component vector of float)
0:207      'camVector' ( in highp 3-component vector of float)
0:207      'roughness' ( in highp float)
0:?     Sequence
0:210      Branch: Return with expression
0:210        'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:213  Function Definition: TDLightingPBR(vf3;vf3;f1;i1;vf3;vf3;vf3;vf3;f1;vf3;vf3;f1; ( global void)
0:213    Function Parameters: 
0:213      'diffuseContrib' ( inout highp 3-component vector of float)
0:213      'specularContrib' ( inout highp 3-component vector of float)
0:213      'shadowStrengthOut' ( inout highp float)
0:213      'index' ( in highp int)
0:213      'diffuseColor' ( in highp 3-component vector of float)
0:213      'specularColor' ( in highp 3-component vector of float)
0:213      'worldSpacePos' ( in highp 3-component vector of float)
0:213      'normal' ( in highp 3-component vector of float)
0:213      'shadowStrength' ( in highp float)
0:213      'shadowColor' ( in highp 3-component vector of float)
0:213      'camVector' ( in highp 3-component vector of float)
0:213      'roughness' ( in highp float)
0:215    Sequence
0:215      Sequence
0:215        move second child to first child ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:215          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:215          Function Call: TDLightingPBR(i1;vf3;vf3;vf3;vf3;f1;vf3;vf3;f1; ( global structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:215            'index' ( in highp int)
0:215            'diffuseColor' ( in highp 3-component vector of float)
0:215            'specularColor' ( in highp 3-component vector of float)
0:215            'worldSpacePos' ( in highp 3-component vector of float)
0:215            'normal' ( in highp 3-component vector of float)
0:215            'shadowStrength' ( in highp float)
0:215            'shadowColor' ( in highp 3-component vector of float)
0:215            'camVector' ( in highp 3-component vector of float)
0:215            'roughness' ( in highp float)
0:215      move second child to first child ( temp highp 3-component vector of float)
0:215        'diffuseContrib' ( inout highp 3-component vector of float)
0:215        diffuse: direct index for structure ( global highp 3-component vector of float)
0:215          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:215          Constant:
0:215            0 (const int)
0:216      move second child to first child ( temp highp 3-component vector of float)
0:216        'specularContrib' ( inout highp 3-component vector of float)
0:216        specular: direct index for structure ( global highp 3-component vector of float)
0:216          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:216          Constant:
0:216            1 (const int)
0:217      move second child to first child ( temp highp float)
0:217        'shadowStrengthOut' ( inout highp float)
0:217        shadowStrength: direct index for structure ( global highp float)
0:217          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:217          Constant:
0:217            2 (const int)
0:220  Function Definition: TDLightingPBR(vf3;vf3;i1;vf3;vf3;vf3;vf3;f1;vf3;vf3;f1; ( global void)
0:220    Function Parameters: 
0:220      'diffuseContrib' ( inout highp 3-component vector of float)
0:220      'specularContrib' ( inout highp 3-component vector of float)
0:220      'index' ( in highp int)
0:220      'diffuseColor' ( in highp 3-component vector of float)
0:220      'specularColor' ( in highp 3-component vector of float)
0:220      'worldSpacePos' ( in highp 3-component vector of float)
0:220      'normal' ( in highp 3-component vector of float)
0:220      'shadowStrength' ( in highp float)
0:220      'shadowColor' ( in highp 3-component vector of float)
0:220      'camVector' ( in highp 3-component vector of float)
0:220      'roughness' ( in highp float)
0:222    Sequence
0:222      Sequence
0:222        move second child to first child ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:222          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:222          Function Call: TDLightingPBR(i1;vf3;vf3;vf3;vf3;f1;vf3;vf3;f1; ( global structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:222            'index' ( in highp int)
0:222            'diffuseColor' ( in highp 3-component vector of float)
0:222            'specularColor' ( in highp 3-component vector of float)
0:222            'worldSpacePos' ( in highp 3-component vector of float)
0:222            'normal' ( in highp 3-component vector of float)
0:222            'shadowStrength' ( in highp float)
0:222            'shadowColor' ( in highp 3-component vector of float)
0:222            'camVector' ( in highp 3-component vector of float)
0:222            'roughness' ( in highp float)
0:222      move second child to first child ( temp highp 3-component vector of float)
0:222        'diffuseContrib' ( inout highp 3-component vector of float)
0:222        diffuse: direct index for structure ( global highp 3-component vector of float)
0:222          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:222          Constant:
0:222            0 (const int)
0:223      move second child to first child ( temp highp 3-component vector of float)
0:223        'specularContrib' ( inout highp 3-component vector of float)
0:223        specular: direct index for structure ( global highp 3-component vector of float)
0:223          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:223          Constant:
0:223            1 (const int)
0:226  Function Definition: TDEnvLightingPBR(i1;vf3;vf3;vf3;vf3;f1;f1; ( global structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:226    Function Parameters: 
0:226      'index' ( in highp int)
0:226      'diffuseColor' ( in highp 3-component vector of float)
0:226      'specularColor' ( in highp 3-component vector of float)
0:226      'normal' ( in highp 3-component vector of float)
0:226      'camVector' ( in highp 3-component vector of float)
0:226      'roughness' ( in highp float)
0:226      'ambientOcclusion' ( in highp float)
0:?     Sequence
0:229      Branch: Return with expression
0:229        'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:232  Function Definition: TDEnvLightingPBR(vf3;vf3;i1;vf3;vf3;vf3;vf3;f1;f1; ( global void)
0:232    Function Parameters: 
0:232      'diffuseContrib' ( inout highp 3-component vector of float)
0:232      'specularContrib' ( inout highp 3-component vector of float)
0:232      'index' ( in highp int)
0:232      'diffuseColor' ( in highp 3-component vector of float)
0:232      'specularColor' ( in highp 3-component vector of float)
0:232      'normal' ( in highp 3-component vector of float)
0:232      'camVector' ( in highp 3-component vector of float)
0:232      'roughness' ( in highp float)
0:232      'ambientOcclusion' ( in highp float)
0:234    Sequence
0:234      Sequence
0:234        move second child to first child ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:234          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:234          Function Call: TDEnvLightingPBR(i1;vf3;vf3;vf3;vf3;f1;f1; ( global structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:234            'index' ( in highp int)
0:234            'diffuseColor' ( in highp 3-component vector of float)
0:234            'specularColor' ( in highp 3-component vector of float)
0:234            'normal' ( in highp 3-component vector of float)
0:234            'camVector' ( in highp 3-component vector of float)
0:234            'roughness' ( in highp float)
0:234            'ambientOcclusion' ( in highp float)
0:235      move second child to first child ( temp highp 3-component vector of float)
0:235        'diffuseContrib' ( inout highp 3-component vector of float)
0:235        diffuse: direct index for structure ( global highp 3-component vector of float)
0:235          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:235          Constant:
0:235            0 (const int)
0:236      move second child to first child ( temp highp 3-component vector of float)
0:236        'specularContrib' ( inout highp 3-component vector of float)
0:236        specular: direct index for structure ( global highp 3-component vector of float)
0:236          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp float shadowStrength})
0:236          Constant:
0:236            1 (const int)
0:239  Function Definition: TDLighting(i1;vf3;vf3;f1;vf3;vf3;f1;f1; ( global structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:239    Function Parameters: 
0:239      'index' ( in highp int)
0:239      'worldSpacePos' ( in highp 3-component vector of float)
0:239      'normal' ( in highp 3-component vector of float)
0:239      'shadowStrength' ( in highp float)
0:239      'shadowColor' ( in highp 3-component vector of float)
0:239      'camVector' ( in highp 3-component vector of float)
0:239      'shininess' ( in highp float)
0:239      'shininess2' ( in highp float)
0:?     Sequence
0:242      switch
0:242      condition
0:242        'index' ( in highp int)
0:242      body
0:242        Sequence
0:244          default: 
0:?           Sequence
0:245            move second child to first child ( temp highp 3-component vector of float)
0:245              diffuse: direct index for structure ( global highp 3-component vector of float)
0:245                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:245                Constant:
0:245                  0 (const int)
0:245              Constant:
0:245                0.000000
0:245                0.000000
0:245                0.000000
0:246            move second child to first child ( temp highp 3-component vector of float)
0:246              specular: direct index for structure ( global highp 3-component vector of float)
0:246                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:246                Constant:
0:246                  1 (const int)
0:246              Constant:
0:246                0.000000
0:246                0.000000
0:246                0.000000
0:247            move second child to first child ( temp highp 3-component vector of float)
0:247              specular2: direct index for structure ( global highp 3-component vector of float)
0:247                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:247                Constant:
0:247                  2 (const int)
0:247              Constant:
0:247                0.000000
0:247                0.000000
0:247                0.000000
0:248            move second child to first child ( temp highp float)
0:248              shadowStrength: direct index for structure ( global highp float)
0:248                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:248                Constant:
0:248                  3 (const int)
0:248              Constant:
0:248                0.000000
0:249            Branch: Break
0:251      Branch: Return with expression
0:251        'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:254  Function Definition: TDLighting(vf3;vf3;vf3;f1;i1;vf3;vf3;f1;vf3;vf3;f1;f1; ( global void)
0:254    Function Parameters: 
0:254      'diffuseContrib' ( inout highp 3-component vector of float)
0:254      'specularContrib' ( inout highp 3-component vector of float)
0:254      'specularContrib2' ( inout highp 3-component vector of float)
0:254      'shadowStrengthOut' ( inout highp float)
0:254      'index' ( in highp int)
0:254      'worldSpacePos' ( in highp 3-component vector of float)
0:254      'normal' ( in highp 3-component vector of float)
0:254      'shadowStrength' ( in highp float)
0:254      'shadowColor' ( in highp 3-component vector of float)
0:254      'camVector' ( in highp 3-component vector of float)
0:254      'shininess' ( in highp float)
0:254      'shininess2' ( in highp float)
0:?     Sequence
0:257      switch
0:257      condition
0:257        'index' ( in highp int)
0:257      body
0:257        Sequence
0:259          default: 
0:?           Sequence
0:260            move second child to first child ( temp highp 3-component vector of float)
0:260              diffuse: direct index for structure ( global highp 3-component vector of float)
0:260                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:260                Constant:
0:260                  0 (const int)
0:260              Constant:
0:260                0.000000
0:260                0.000000
0:260                0.000000
0:261            move second child to first child ( temp highp 3-component vector of float)
0:261              specular: direct index for structure ( global highp 3-component vector of float)
0:261                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:261                Constant:
0:261                  1 (const int)
0:261              Constant:
0:261                0.000000
0:261                0.000000
0:261                0.000000
0:262            move second child to first child ( temp highp 3-component vector of float)
0:262              specular2: direct index for structure ( global highp 3-component vector of float)
0:262                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:262                Constant:
0:262                  2 (const int)
0:262              Constant:
0:262                0.000000
0:262                0.000000
0:262                0.000000
0:263            move second child to first child ( temp highp float)
0:263              shadowStrength: direct index for structure ( global highp float)
0:263                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:263                Constant:
0:263                  3 (const int)
0:263              Constant:
0:263                0.000000
0:264            Branch: Break
0:266      move second child to first child ( temp highp 3-component vector of float)
0:266        'diffuseContrib' ( inout highp 3-component vector of float)
0:266        diffuse: direct index for structure ( global highp 3-component vector of float)
0:266          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:266          Constant:
0:266            0 (const int)
0:267      move second child to first child ( temp highp 3-component vector of float)
0:267        'specularContrib' ( inout highp 3-component vector of float)
0:267        specular: direct index for structure ( global highp 3-component vector of float)
0:267          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:267          Constant:
0:267            1 (const int)
0:268      move second child to first child ( temp highp 3-component vector of float)
0:268        'specularContrib2' ( inout highp 3-component vector of float)
0:268        specular2: direct index for structure ( global highp 3-component vector of float)
0:268          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:268          Constant:
0:268            2 (const int)
0:269      move second child to first child ( temp highp float)
0:269        'shadowStrengthOut' ( inout highp float)
0:269        shadowStrength: direct index for structure ( global highp float)
0:269          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:269          Constant:
0:269            3 (const int)
0:272  Function Definition: TDLighting(vf3;vf3;vf3;i1;vf3;vf3;f1;vf3;vf3;f1;f1; ( global void)
0:272    Function Parameters: 
0:272      'diffuseContrib' ( inout highp 3-component vector of float)
0:272      'specularContrib' ( inout highp 3-component vector of float)
0:272      'specularContrib2' ( inout highp 3-component vector of float)
0:272      'index' ( in highp int)
0:272      'worldSpacePos' ( in highp 3-component vector of float)
0:272      'normal' ( in highp 3-component vector of float)
0:272      'shadowStrength' ( in highp float)
0:272      'shadowColor' ( in highp 3-component vector of float)
0:272      'camVector' ( in highp 3-component vector of float)
0:272      'shininess' ( in highp float)
0:272      'shininess2' ( in highp float)
0:?     Sequence
0:275      switch
0:275      condition
0:275        'index' ( in highp int)
0:275      body
0:275        Sequence
0:277          default: 
0:?           Sequence
0:278            move second child to first child ( temp highp 3-component vector of float)
0:278              diffuse: direct index for structure ( global highp 3-component vector of float)
0:278                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:278                Constant:
0:278                  0 (const int)
0:278              Constant:
0:278                0.000000
0:278                0.000000
0:278                0.000000
0:279            move second child to first child ( temp highp 3-component vector of float)
0:279              specular: direct index for structure ( global highp 3-component vector of float)
0:279                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:279                Constant:
0:279                  1 (const int)
0:279              Constant:
0:279                0.000000
0:279                0.000000
0:279                0.000000
0:280            move second child to first child ( temp highp 3-component vector of float)
0:280              specular2: direct index for structure ( global highp 3-component vector of float)
0:280                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:280                Constant:
0:280                  2 (const int)
0:280              Constant:
0:280                0.000000
0:280                0.000000
0:280                0.000000
0:281            move second child to first child ( temp highp float)
0:281              shadowStrength: direct index for structure ( global highp float)
0:281                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:281                Constant:
0:281                  3 (const int)
0:281              Constant:
0:281                0.000000
0:282            Branch: Break
0:284      move second child to first child ( temp highp 3-component vector of float)
0:284        'diffuseContrib' ( inout highp 3-component vector of float)
0:284        diffuse: direct index for structure ( global highp 3-component vector of float)
0:284          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:284          Constant:
0:284            0 (const int)
0:285      move second child to first child ( temp highp 3-component vector of float)
0:285        'specularContrib' ( inout highp 3-component vector of float)
0:285        specular: direct index for structure ( global highp 3-component vector of float)
0:285          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:285          Constant:
0:285            1 (const int)
0:286      move second child to first child ( temp highp 3-component vector of float)
0:286        'specularContrib2' ( inout highp 3-component vector of float)
0:286        specular2: direct index for structure ( global highp 3-component vector of float)
0:286          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:286          Constant:
0:286            2 (const int)
0:289  Function Definition: TDLighting(vf3;vf3;i1;vf3;vf3;f1;vf3;vf3;f1; ( global void)
0:289    Function Parameters: 
0:289      'diffuseContrib' ( inout highp 3-component vector of float)
0:289      'specularContrib' ( inout highp 3-component vector of float)
0:289      'index' ( in highp int)
0:289      'worldSpacePos' ( in highp 3-component vector of float)
0:289      'normal' ( in highp 3-component vector of float)
0:289      'shadowStrength' ( in highp float)
0:289      'shadowColor' ( in highp 3-component vector of float)
0:289      'camVector' ( in highp 3-component vector of float)
0:289      'shininess' ( in highp float)
0:?     Sequence
0:292      switch
0:292      condition
0:292        'index' ( in highp int)
0:292      body
0:292        Sequence
0:294          default: 
0:?           Sequence
0:295            move second child to first child ( temp highp 3-component vector of float)
0:295              diffuse: direct index for structure ( global highp 3-component vector of float)
0:295                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:295                Constant:
0:295                  0 (const int)
0:295              Constant:
0:295                0.000000
0:295                0.000000
0:295                0.000000
0:296            move second child to first child ( temp highp 3-component vector of float)
0:296              specular: direct index for structure ( global highp 3-component vector of float)
0:296                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:296                Constant:
0:296                  1 (const int)
0:296              Constant:
0:296                0.000000
0:296                0.000000
0:296                0.000000
0:297            move second child to first child ( temp highp 3-component vector of float)
0:297              specular2: direct index for structure ( global highp 3-component vector of float)
0:297                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:297                Constant:
0:297                  2 (const int)
0:297              Constant:
0:297                0.000000
0:297                0.000000
0:297                0.000000
0:298            move second child to first child ( temp highp float)
0:298              shadowStrength: direct index for structure ( global highp float)
0:298                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:298                Constant:
0:298                  3 (const int)
0:298              Constant:
0:298                0.000000
0:299            Branch: Break
0:301      move second child to first child ( temp highp 3-component vector of float)
0:301        'diffuseContrib' ( inout highp 3-component vector of float)
0:301        diffuse: direct index for structure ( global highp 3-component vector of float)
0:301          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:301          Constant:
0:301            0 (const int)
0:302      move second child to first child ( temp highp 3-component vector of float)
0:302        'specularContrib' ( inout highp 3-component vector of float)
0:302        specular: direct index for structure ( global highp 3-component vector of float)
0:302          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:302          Constant:
0:302            1 (const int)
0:305  Function Definition: TDLighting(vf3;vf3;vf3;i1;vf3;vf3;vf3;f1;f1; ( global void)
0:305    Function Parameters: 
0:305      'diffuseContrib' ( inout highp 3-component vector of float)
0:305      'specularContrib' ( inout highp 3-component vector of float)
0:305      'specularContrib2' ( inout highp 3-component vector of float)
0:305      'index' ( in highp int)
0:305      'worldSpacePos' ( in highp 3-component vector of float)
0:305      'normal' ( in highp 3-component vector of float)
0:305      'camVector' ( in highp 3-component vector of float)
0:305      'shininess' ( in highp float)
0:305      'shininess2' ( in highp float)
0:?     Sequence
0:308      switch
0:308      condition
0:308        'index' ( in highp int)
0:308      body
0:308        Sequence
0:310          default: 
0:?           Sequence
0:311            move second child to first child ( temp highp 3-component vector of float)
0:311              diffuse: direct index for structure ( global highp 3-component vector of float)
0:311                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:311                Constant:
0:311                  0 (const int)
0:311              Constant:
0:311                0.000000
0:311                0.000000
0:311                0.000000
0:312            move second child to first child ( temp highp 3-component vector of float)
0:312              specular: direct index for structure ( global highp 3-component vector of float)
0:312                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:312                Constant:
0:312                  1 (const int)
0:312              Constant:
0:312                0.000000
0:312                0.000000
0:312                0.000000
0:313            move second child to first child ( temp highp 3-component vector of float)
0:313              specular2: direct index for structure ( global highp 3-component vector of float)
0:313                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:313                Constant:
0:313                  2 (const int)
0:313              Constant:
0:313                0.000000
0:313                0.000000
0:313                0.000000
0:314            move second child to first child ( temp highp float)
0:314              shadowStrength: direct index for structure ( global highp float)
0:314                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:314                Constant:
0:314                  3 (const int)
0:314              Constant:
0:314                0.000000
0:315            Branch: Break
0:317      move second child to first child ( temp highp 3-component vector of float)
0:317        'diffuseContrib' ( inout highp 3-component vector of float)
0:317        diffuse: direct index for structure ( global highp 3-component vector of float)
0:317          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:317          Constant:
0:317            0 (const int)
0:318      move second child to first child ( temp highp 3-component vector of float)
0:318        'specularContrib' ( inout highp 3-component vector of float)
0:318        specular: direct index for structure ( global highp 3-component vector of float)
0:318          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:318          Constant:
0:318            1 (const int)
0:319      move second child to first child ( temp highp 3-component vector of float)
0:319        'specularContrib2' ( inout highp 3-component vector of float)
0:319        specular2: direct index for structure ( global highp 3-component vector of float)
0:319          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:319          Constant:
0:319            2 (const int)
0:322  Function Definition: TDLighting(vf3;vf3;i1;vf3;vf3;vf3;f1; ( global void)
0:322    Function Parameters: 
0:322      'diffuseContrib' ( inout highp 3-component vector of float)
0:322      'specularContrib' ( inout highp 3-component vector of float)
0:322      'index' ( in highp int)
0:322      'worldSpacePos' ( in highp 3-component vector of float)
0:322      'normal' ( in highp 3-component vector of float)
0:322      'camVector' ( in highp 3-component vector of float)
0:322      'shininess' ( in highp float)
0:?     Sequence
0:325      switch
0:325      condition
0:325        'index' ( in highp int)
0:325      body
0:325        Sequence
0:327          default: 
0:?           Sequence
0:328            move second child to first child ( temp highp 3-component vector of float)
0:328              diffuse: direct index for structure ( global highp 3-component vector of float)
0:328                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:328                Constant:
0:328                  0 (const int)
0:328              Constant:
0:328                0.000000
0:328                0.000000
0:328                0.000000
0:329            move second child to first child ( temp highp 3-component vector of float)
0:329              specular: direct index for structure ( global highp 3-component vector of float)
0:329                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:329                Constant:
0:329                  1 (const int)
0:329              Constant:
0:329                0.000000
0:329                0.000000
0:329                0.000000
0:330            move second child to first child ( temp highp 3-component vector of float)
0:330              specular2: direct index for structure ( global highp 3-component vector of float)
0:330                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:330                Constant:
0:330                  2 (const int)
0:330              Constant:
0:330                0.000000
0:330                0.000000
0:330                0.000000
0:331            move second child to first child ( temp highp float)
0:331              shadowStrength: direct index for structure ( global highp float)
0:331                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:331                Constant:
0:331                  3 (const int)
0:331              Constant:
0:331                0.000000
0:332            Branch: Break
0:334      move second child to first child ( temp highp 3-component vector of float)
0:334        'diffuseContrib' ( inout highp 3-component vector of float)
0:334        diffuse: direct index for structure ( global highp 3-component vector of float)
0:334          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:334          Constant:
0:334            0 (const int)
0:335      move second child to first child ( temp highp 3-component vector of float)
0:335        'specularContrib' ( inout highp 3-component vector of float)
0:335        specular: direct index for structure ( global highp 3-component vector of float)
0:335          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:335          Constant:
0:335            1 (const int)
0:338  Function Definition: TDLighting(vf3;i1;vf3;vf3; ( global void)
0:338    Function Parameters: 
0:338      'diffuseContrib' ( inout highp 3-component vector of float)
0:338      'index' ( in highp int)
0:338      'worldSpacePos' ( in highp 3-component vector of float)
0:338      'normal' ( in highp 3-component vector of float)
0:?     Sequence
0:341      switch
0:341      condition
0:341        'index' ( in highp int)
0:341      body
0:341        Sequence
0:343          default: 
0:?           Sequence
0:344            move second child to first child ( temp highp 3-component vector of float)
0:344              diffuse: direct index for structure ( global highp 3-component vector of float)
0:344                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:344                Constant:
0:344                  0 (const int)
0:344              Constant:
0:344                0.000000
0:344                0.000000
0:344                0.000000
0:345            move second child to first child ( temp highp 3-component vector of float)
0:345              specular: direct index for structure ( global highp 3-component vector of float)
0:345                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:345                Constant:
0:345                  1 (const int)
0:345              Constant:
0:345                0.000000
0:345                0.000000
0:345                0.000000
0:346            move second child to first child ( temp highp 3-component vector of float)
0:346              specular2: direct index for structure ( global highp 3-component vector of float)
0:346                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:346                Constant:
0:346                  2 (const int)
0:346              Constant:
0:346                0.000000
0:346                0.000000
0:346                0.000000
0:347            move second child to first child ( temp highp float)
0:347              shadowStrength: direct index for structure ( global highp float)
0:347                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:347                Constant:
0:347                  3 (const int)
0:347              Constant:
0:347                0.000000
0:348            Branch: Break
0:350      move second child to first child ( temp highp 3-component vector of float)
0:350        'diffuseContrib' ( inout highp 3-component vector of float)
0:350        diffuse: direct index for structure ( global highp 3-component vector of float)
0:350          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:350          Constant:
0:350            0 (const int)
0:353  Function Definition: TDLighting(vf3;i1;vf3;vf3;f1;vf3; ( global void)
0:353    Function Parameters: 
0:353      'diffuseContrib' ( inout highp 3-component vector of float)
0:353      'index' ( in highp int)
0:353      'worldSpacePos' ( in highp 3-component vector of float)
0:353      'normal' ( in highp 3-component vector of float)
0:353      'shadowStrength' ( in highp float)
0:353      'shadowColor' ( in highp 3-component vector of float)
0:?     Sequence
0:356      switch
0:356      condition
0:356        'index' ( in highp int)
0:356      body
0:356        Sequence
0:358          default: 
0:?           Sequence
0:359            move second child to first child ( temp highp 3-component vector of float)
0:359              diffuse: direct index for structure ( global highp 3-component vector of float)
0:359                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:359                Constant:
0:359                  0 (const int)
0:359              Constant:
0:359                0.000000
0:359                0.000000
0:359                0.000000
0:360            move second child to first child ( temp highp 3-component vector of float)
0:360              specular: direct index for structure ( global highp 3-component vector of float)
0:360                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:360                Constant:
0:360                  1 (const int)
0:360              Constant:
0:360                0.000000
0:360                0.000000
0:360                0.000000
0:361            move second child to first child ( temp highp 3-component vector of float)
0:361              specular2: direct index for structure ( global highp 3-component vector of float)
0:361                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:361                Constant:
0:361                  2 (const int)
0:361              Constant:
0:361                0.000000
0:361                0.000000
0:361                0.000000
0:362            move second child to first child ( temp highp float)
0:362              shadowStrength: direct index for structure ( global highp float)
0:362                'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:362                Constant:
0:362                  3 (const int)
0:362              Constant:
0:362                0.000000
0:363            Branch: Break
0:365      move second child to first child ( temp highp 3-component vector of float)
0:365        'diffuseContrib' ( inout highp 3-component vector of float)
0:365        diffuse: direct index for structure ( global highp 3-component vector of float)
0:365          'res' ( temp structure{ global highp 3-component vector of float diffuse,  global highp 3-component vector of float specular,  global highp 3-component vector of float specular2,  global highp float shadowStrength})
0:365          Constant:
0:365            0 (const int)
0:367  Function Definition: TDProjMap(i1;vf3;vf4; ( global highp 4-component vector of float)
0:367    Function Parameters: 
0:367      'index' ( in highp int)
0:367      'worldSpacePos' ( in highp 3-component vector of float)
0:367      'defaultColor' ( in highp 4-component vector of float)
0:368    Sequence
0:368      switch
0:368      condition
0:368        'index' ( in highp int)
0:368      body
0:368        Sequence
0:370          default: 
0:?           Sequence
0:370            Branch: Return with expression
0:370              'defaultColor' ( in highp 4-component vector of float)
0:373  Function Definition: TDFog(vf4;vf3;i1; ( global highp 4-component vector of float)
0:373    Function Parameters: 
0:373      'color' ( in highp 4-component vector of float)
0:373      'lightingSpacePosition' ( in highp 3-component vector of float)
0:373      'cameraIndex' ( in highp int)
0:374    Sequence
0:374      switch
0:374      condition
0:374        'cameraIndex' ( in highp int)
0:374      body
0:374        Sequence
0:375          default: 
0:376          case:  with expression
0:376            Constant:
0:376              0 (const int)
0:?           Sequence
0:378            Sequence
0:378              Branch: Return with expression
0:378                'color' ( in highp 4-component vector of float)
0:382  Function Definition: TDFog(vf4;vf3; ( global highp 4-component vector of float)
0:382    Function Parameters: 
0:382      'color' ( in highp 4-component vector of float)
0:382      'lightingSpacePosition' ( in highp 3-component vector of float)
0:384    Sequence
0:384      Branch: Return with expression
0:384        Function Call: TDFog(vf4;vf3;i1; ( global highp 4-component vector of float)
0:384          'color' ( in highp 4-component vector of float)
0:384          'lightingSpacePosition' ( in highp 3-component vector of float)
0:384          Constant:
0:384            0 (const int)
0:386  Function Definition: TDInstanceTexCoord(i1;vf3; ( global highp 3-component vector of float)
0:386    Function Parameters: 
0:386      'index' ( in highp int)
0:386      't' ( in highp 3-component vector of float)
0:?     Sequence
0:388      Sequence
0:388        move second child to first child ( temp highp int)
0:388          'coord' ( temp highp int)
0:388          'index' ( in highp int)
0:389      Sequence
0:389        move second child to first child ( temp highp 4-component vector of float)
0:389          'samp' ( temp highp 4-component vector of float)
0:389          textureFetch ( global highp 4-component vector of float)
0:389            'sTDInstanceTexCoord' (layout( binding=16) uniform highp samplerBuffer)
0:389            'coord' ( temp highp int)
0:390      move second child to first child ( temp highp float)
0:390        direct index ( temp highp float)
0:390          'v' ( temp highp 3-component vector of float)
0:390          Constant:
0:390            0 (const int)
0:390        direct index ( temp highp float)
0:390          't' ( in highp 3-component vector of float)
0:390          Constant:
0:390            0 (const int)
0:391      move second child to first child ( temp highp float)
0:391        direct index ( temp highp float)
0:391          'v' ( temp highp 3-component vector of float)
0:391          Constant:
0:391            1 (const int)
0:391        direct index ( temp highp float)
0:391          't' ( in highp 3-component vector of float)
0:391          Constant:
0:391            1 (const int)
0:392      move second child to first child ( temp highp float)
0:392        direct index ( temp highp float)
0:392          'v' ( temp highp 3-component vector of float)
0:392          Constant:
0:392            2 (const int)
0:392        direct index ( temp highp float)
0:392          'samp' ( temp highp 4-component vector of float)
0:392          Constant:
0:392            0 (const int)
0:393      move second child to first child ( temp highp 3-component vector of float)
0:393        vector swizzle ( temp highp 3-component vector of float)
0:393          't' ( in highp 3-component vector of float)
0:393          Sequence
0:393            Constant:
0:393              0 (const int)
0:393            Constant:
0:393              1 (const int)
0:393            Constant:
0:393              2 (const int)
0:393        vector swizzle ( temp highp 3-component vector of float)
0:393          'v' ( temp highp 3-component vector of float)
0:393          Sequence
0:393            Constant:
0:393              0 (const int)
0:393            Constant:
0:393              1 (const int)
0:393            Constant:
0:393              2 (const int)
0:394      Branch: Return with expression
0:394        't' ( in highp 3-component vector of float)
0:396  Function Definition: TDInstanceActive(i1; ( global bool)
0:396    Function Parameters: 
0:396      'index' ( in highp int)
0:397    Sequence
0:397      subtract second child into first child ( temp highp int)
0:397        'index' ( in highp int)
0:397        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:397          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal,  uniform highp 3-component vector of float uConstant,  uniform highp float uShadowStrength,  uniform highp 3-component vector of float uShadowColor,  uniform highp 4-component vector of float uDiffuseColor,  uniform highp 4-component vector of float uAmbientColor})
0:397          Constant:
0:397            0 (const uint)
0:399      Sequence
0:399        move second child to first child ( temp highp int)
0:399          'coord' ( temp highp int)
0:399          'index' ( in highp int)
0:400      Sequence
0:400        move second child to first child ( temp highp 4-component vector of float)
0:400          'samp' ( temp highp 4-component vector of float)
0:400          textureFetch ( global highp 4-component vector of float)
0:400            'sTDInstanceT' (layout( binding=15) uniform highp samplerBuffer)
0:400            'coord' ( temp highp int)
0:401      move second child to first child ( temp highp float)
0:401        'v' ( temp highp float)
0:401        direct index ( temp highp float)
0:401          'samp' ( temp highp 4-component vector of float)
0:401          Constant:
0:401            0 (const int)
0:402      Branch: Return with expression
0:402        Compare Not Equal ( temp bool)
0:402          'v' ( temp highp float)
0:402          Constant:
0:402            0.000000
0:404  Function Definition: iTDInstanceTranslate(i1;b1; ( global highp 3-component vector of float)
0:404    Function Parameters: 
0:404      'index' ( in highp int)
0:404      'instanceActive' ( out bool)
0:405    Sequence
0:405      Sequence
0:405        move second child to first child ( temp highp int)
0:405          'origIndex' ( temp highp int)
0:405          'index' ( in highp int)
0:406      subtract second child into first child ( temp highp int)
0:406        'index' ( in highp int)
0:406        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:406          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal,  uniform highp 3-component vector of float uConstant,  uniform highp float uShadowStrength,  uniform highp 3-component vector of float uShadowColor,  uniform highp 4-component vector of float uDiffuseColor,  uniform highp 4-component vector of float uAmbientColor})
0:406          Constant:
0:406            0 (const uint)
0:408      Sequence
0:408        move second child to first child ( temp highp int)
0:408          'coord' ( temp highp int)
0:408          'index' ( in highp int)
0:409      Sequence
0:409        move second child to first child ( temp highp 4-component vector of float)
0:409          'samp' ( temp highp 4-component vector of float)
0:409          textureFetch ( global highp 4-component vector of float)
0:409            'sTDInstanceT' (layout( binding=15) uniform highp samplerBuffer)
0:409            'coord' ( temp highp int)
0:410      move second child to first child ( temp highp float)
0:410        direct index ( temp highp float)
0:410          'v' ( temp highp 3-component vector of float)
0:410          Constant:
0:410            0 (const int)
0:410        direct index ( temp highp float)
0:410          'samp' ( temp highp 4-component vector of float)
0:410          Constant:
0:410            1 (const int)
0:411      move second child to first child ( temp highp float)
0:411        direct index ( temp highp float)
0:411          'v' ( temp highp 3-component vector of float)
0:411          Constant:
0:411            1 (const int)
0:411        direct index ( temp highp float)
0:411          'samp' ( temp highp 4-component vector of float)
0:411          Constant:
0:411            2 (const int)
0:412      move second child to first child ( temp highp float)
0:412        direct index ( temp highp float)
0:412          'v' ( temp highp 3-component vector of float)
0:412          Constant:
0:412            2 (const int)
0:412        direct index ( temp highp float)
0:412          'samp' ( temp highp 4-component vector of float)
0:412          Constant:
0:412            3 (const int)
0:413      move second child to first child ( temp bool)
0:413        'instanceActive' ( out bool)
0:413        Compare Not Equal ( temp bool)
0:413          direct index ( temp highp float)
0:413            'samp' ( temp highp 4-component vector of float)
0:413            Constant:
0:413              0 (const int)
0:413          Constant:
0:413            0.000000
0:414      Branch: Return with expression
0:414        'v' ( temp highp 3-component vector of float)
0:416  Function Definition: TDInstanceTranslate(i1; ( global highp 3-component vector of float)
0:416    Function Parameters: 
0:416      'index' ( in highp int)
0:417    Sequence
0:417      subtract second child into first child ( temp highp int)
0:417        'index' ( in highp int)
0:417        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:417          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal,  uniform highp 3-component vector of float uConstant,  uniform highp float uShadowStrength,  uniform highp 3-component vector of float uShadowColor,  uniform highp 4-component vector of float uDiffuseColor,  uniform highp 4-component vector of float uAmbientColor})
0:417          Constant:
0:417            0 (const uint)
0:419      Sequence
0:419        move second child to first child ( temp highp int)
0:419          'coord' ( temp highp int)
0:419          'index' ( in highp int)
0:420      Sequence
0:420        move second child to first child ( temp highp 4-component vector of float)
0:420          'samp' ( temp highp 4-component vector of float)
0:420          textureFetch ( global highp 4-component vector of float)
0:420            'sTDInstanceT' (layout( binding=15) uniform highp samplerBuffer)
0:420            'coord' ( temp highp int)
0:421      move second child to first child ( temp highp float)
0:421        direct index ( temp highp float)
0:421          'v' ( temp highp 3-component vector of float)
0:421          Constant:
0:421            0 (const int)
0:421        direct index ( temp highp float)
0:421          'samp' ( temp highp 4-component vector of float)
0:421          Constant:
0:421            1 (const int)
0:422      move second child to first child ( temp highp float)
0:422        direct index ( temp highp float)
0:422          'v' ( temp highp 3-component vector of float)
0:422          Constant:
0:422            1 (const int)
0:422        direct index ( temp highp float)
0:422          'samp' ( temp highp 4-component vector of float)
0:422          Constant:
0:422            2 (const int)
0:423      move second child to first child ( temp highp float)
0:423        direct index ( temp highp float)
0:423          'v' ( temp highp 3-component vector of float)
0:423          Constant:
0:423            2 (const int)
0:423        direct index ( temp highp float)
0:423          'samp' ( temp highp 4-component vector of float)
0:423          Constant:
0:423            3 (const int)
0:424      Branch: Return with expression
0:424        'v' ( temp highp 3-component vector of float)
0:426  Function Definition: TDInstanceRotateMat(i1; ( global highp 3X3 matrix of float)
0:426    Function Parameters: 
0:426      'index' ( in highp int)
0:427    Sequence
0:427      subtract second child into first child ( temp highp int)
0:427        'index' ( in highp int)
0:427        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:427          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal,  uniform highp 3-component vector of float uConstant,  uniform highp float uShadowStrength,  uniform highp 3-component vector of float uShadowColor,  uniform highp 4-component vector of float uDiffuseColor,  uniform highp 4-component vector of float uAmbientColor})
0:427          Constant:
0:427            0 (const uint)
0:428      Sequence
0:428        move second child to first child ( temp highp 3-component vector of float)
0:428          'v' ( temp highp 3-component vector of float)
0:428          Constant:
0:428            0.000000
0:428            0.000000
0:428            0.000000
0:429      Sequence
0:429        move second child to first child ( temp highp 3X3 matrix of float)
0:429          'm' ( temp highp 3X3 matrix of float)
0:429          Constant:
0:429            1.000000
0:429            0.000000
0:429            0.000000
0:429            0.000000
0:429            1.000000
0:429            0.000000
0:429            0.000000
0:429            0.000000
0:429            1.000000
0:433      Branch: Return with expression
0:433        'm' ( temp highp 3X3 matrix of float)
0:435  Function Definition: TDInstanceScale(i1; ( global highp 3-component vector of float)
0:435    Function Parameters: 
0:435      'index' ( in highp int)
0:436    Sequence
0:436      subtract second child into first child ( temp highp int)
0:436        'index' ( in highp int)
0:436        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:436          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal,  uniform highp 3-component vector of float uConstant,  uniform highp float uShadowStrength,  uniform highp 3-component vector of float uShadowColor,  uniform highp 4-component vector of float uDiffuseColor,  uniform highp 4-component vector of float uAmbientColor})
0:436          Constant:
0:436            0 (const uint)
0:437      Sequence
0:437        move second child to first child ( temp highp 3-component vector of float)
0:437          'v' ( temp highp 3-component vector of float)
0:437          Constant:
0:437            1.000000
0:437            1.000000
0:437            1.000000
0:438      Branch: Return with expression
0:438        'v' ( temp highp 3-component vector of float)
0:440  Function Definition: TDInstancePivot(i1; ( global highp 3-component vector of float)
0:440    Function Parameters: 
0:440      'index' ( in highp int)
0:441    Sequence
0:441      subtract second child into first child ( temp highp int)
0:441        'index' ( in highp int)
0:441        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:441          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal,  uniform highp 3-component vector of float uConstant,  uniform highp float uShadowStrength,  uniform highp 3-component vector of float uShadowColor,  uniform highp 4-component vector of float uDiffuseColor,  uniform highp 4-component vector of float uAmbientColor})
0:441          Constant:
0:441            0 (const uint)
0:442      Sequence
0:442        move second child to first child ( temp highp 3-component vector of float)
0:442          'v' ( temp highp 3-component vector of float)
0:442          Constant:
0:442            0.000000
0:442            0.000000
0:442            0.000000
0:443      Branch: Return with expression
0:443        'v' ( temp highp 3-component vector of float)
0:445  Function Definition: TDInstanceRotTo(i1; ( global highp 3-component vector of float)
0:445    Function Parameters: 
0:445      'index' ( in highp int)
0:446    Sequence
0:446      subtract second child into first child ( temp highp int)
0:446        'index' ( in highp int)
0:446        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:446          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal,  uniform highp 3-component vector of float uConstant,  uniform highp float uShadowStrength,  uniform highp 3-component vector of float uShadowColor,  uniform highp 4-component vector of float uDiffuseColor,  uniform highp 4-component vector of float uAmbientColor})
0:446          Constant:
0:446            0 (const uint)
0:447      Sequence
0:447        move second child to first child ( temp highp 3-component vector of float)
0:447          'v' ( temp highp 3-component vector of float)
0:447          Constant:
0:447            0.000000
0:447            0.000000
0:447            1.000000
0:448      Branch: Return with expression
0:448        'v' ( temp highp 3-component vector of float)
0:450  Function Definition: TDInstanceRotUp(i1; ( global highp 3-component vector of float)
0:450    Function Parameters: 
0:450      'index' ( in highp int)
0:451    Sequence
0:451      subtract second child into first child ( temp highp int)
0:451        'index' ( in highp int)
0:451        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:451          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal,  uniform highp 3-component vector of float uConstant,  uniform highp float uShadowStrength,  uniform highp 3-component vector of float uShadowColor,  uniform highp 4-component vector of float uDiffuseColor,  uniform highp 4-component vector of float uAmbientColor})
0:451          Constant:
0:451            0 (const uint)
0:452      Sequence
0:452        move second child to first child ( temp highp 3-component vector of float)
0:452          'v' ( temp highp 3-component vector of float)
0:452          Constant:
0:452            0.000000
0:452            1.000000
0:452            0.000000
0:453      Branch: Return with expression
0:453        'v' ( temp highp 3-component vector of float)
0:455  Function Definition: TDInstanceMat(i1; ( global highp 4X4 matrix of float)
0:455    Function Parameters: 
0:455      'id' ( in highp int)
0:456    Sequence
0:456      Sequence
0:456        move second child to first child ( temp bool)
0:456          'instanceActive' ( temp bool)
0:456          Constant:
0:456            true (const bool)
0:457      Sequence
0:457        move second child to first child ( temp highp 3-component vector of float)
0:457          't' ( temp highp 3-component vector of float)
0:457          Function Call: iTDInstanceTranslate(i1;b1; ( global highp 3-component vector of float)
0:457            'id' ( in highp int)
0:457            'instanceActive' ( temp bool)
0:458      Test condition and select ( temp void)
0:458        Condition
0:458        Negate conditional ( temp bool)
0:458          'instanceActive' ( temp bool)
0:458        true case
0:460        Sequence
0:460          Branch: Return with expression
0:460            Constant:
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:460              0.000000
0:462      Sequence
0:462        move second child to first child ( temp highp 4X4 matrix of float)
0:462          'm' ( temp highp 4X4 matrix of float)
0:462          Constant:
0:462            1.000000
0:462            0.000000
0:462            0.000000
0:462            0.000000
0:462            0.000000
0:462            1.000000
0:462            0.000000
0:462            0.000000
0:462            0.000000
0:462            0.000000
0:462            1.000000
0:462            0.000000
0:462            0.000000
0:462            0.000000
0:462            0.000000
0:462            1.000000
0:464      Sequence
0:464        Sequence
0:464          move second child to first child ( temp highp 3-component vector of float)
0:464            'tt' ( temp highp 3-component vector of float)
0:464            't' ( temp highp 3-component vector of float)
0:465        add second child into first child ( temp highp float)
0:465          direct index ( temp highp float)
0:465            direct index ( temp highp 4-component vector of float)
0:465              'm' ( temp highp 4X4 matrix of float)
0:465              Constant:
0:465                3 (const int)
0:465            Constant:
0:465              0 (const int)
0:465          component-wise multiply ( temp highp float)
0:465            direct index ( temp highp float)
0:465              direct index ( temp highp 4-component vector of float)
0:465                'm' ( temp highp 4X4 matrix of float)
0:465                Constant:
0:465                  0 (const int)
0:465              Constant:
0:465                0 (const int)
0:465            direct index ( temp highp float)
0:465              'tt' ( temp highp 3-component vector of float)
0:465              Constant:
0:465                0 (const int)
0:466        add second child into first child ( temp highp float)
0:466          direct index ( temp highp float)
0:466            direct index ( temp highp 4-component vector of float)
0:466              'm' ( temp highp 4X4 matrix of float)
0:466              Constant:
0:466                3 (const int)
0:466            Constant:
0:466              1 (const int)
0:466          component-wise multiply ( temp highp float)
0:466            direct index ( temp highp float)
0:466              direct index ( temp highp 4-component vector of float)
0:466                'm' ( temp highp 4X4 matrix of float)
0:466                Constant:
0:466                  0 (const int)
0:466              Constant:
0:466                1 (const int)
0:466            direct index ( temp highp float)
0:466              'tt' ( temp highp 3-component vector of float)
0:466              Constant:
0:466                0 (const int)
0:467        add second child into first child ( temp highp float)
0:467          direct index ( temp highp float)
0:467            direct index ( temp highp 4-component vector of float)
0:467              'm' ( temp highp 4X4 matrix of float)
0:467              Constant:
0:467                3 (const int)
0:467            Constant:
0:467              2 (const int)
0:467          component-wise multiply ( temp highp float)
0:467            direct index ( temp highp float)
0:467              direct index ( temp highp 4-component vector of float)
0:467                'm' ( temp highp 4X4 matrix of float)
0:467                Constant:
0:467                  0 (const int)
0:467              Constant:
0:467                2 (const int)
0:467            direct index ( temp highp float)
0:467              'tt' ( temp highp 3-component vector of float)
0:467              Constant:
0:467                0 (const int)
0:468        add second child into first child ( temp highp float)
0:468          direct index ( temp highp float)
0:468            direct index ( temp highp 4-component vector of float)
0:468              'm' ( temp highp 4X4 matrix of float)
0:468              Constant:
0:468                3 (const int)
0:468            Constant:
0:468              3 (const int)
0:468          component-wise multiply ( temp highp float)
0:468            direct index ( temp highp float)
0:468              direct index ( temp highp 4-component vector of float)
0:468                'm' ( temp highp 4X4 matrix of float)
0:468                Constant:
0:468                  0 (const int)
0:468              Constant:
0:468                3 (const int)
0:468            direct index ( temp highp float)
0:468              'tt' ( temp highp 3-component vector of float)
0:468              Constant:
0:468                0 (const int)
0:469        add second child into first child ( temp highp float)
0:469          direct index ( temp highp float)
0:469            direct index ( temp highp 4-component vector of float)
0:469              'm' ( temp highp 4X4 matrix of float)
0:469              Constant:
0:469                3 (const int)
0:469            Constant:
0:469              0 (const int)
0:469          component-wise multiply ( temp highp float)
0:469            direct index ( temp highp float)
0:469              direct index ( temp highp 4-component vector of float)
0:469                'm' ( temp highp 4X4 matrix of float)
0:469                Constant:
0:469                  1 (const int)
0:469              Constant:
0:469                0 (const int)
0:469            direct index ( temp highp float)
0:469              'tt' ( temp highp 3-component vector of float)
0:469              Constant:
0:469                1 (const int)
0:470        add second child into first child ( temp highp float)
0:470          direct index ( temp highp float)
0:470            direct index ( temp highp 4-component vector of float)
0:470              'm' ( temp highp 4X4 matrix of float)
0:470              Constant:
0:470                3 (const int)
0:470            Constant:
0:470              1 (const int)
0:470          component-wise multiply ( temp highp float)
0:470            direct index ( temp highp float)
0:470              direct index ( temp highp 4-component vector of float)
0:470                'm' ( temp highp 4X4 matrix of float)
0:470                Constant:
0:470                  1 (const int)
0:470              Constant:
0:470                1 (const int)
0:470            direct index ( temp highp float)
0:470              'tt' ( temp highp 3-component vector of float)
0:470              Constant:
0:470                1 (const int)
0:471        add second child into first child ( temp highp float)
0:471          direct index ( temp highp float)
0:471            direct index ( temp highp 4-component vector of float)
0:471              'm' ( temp highp 4X4 matrix of float)
0:471              Constant:
0:471                3 (const int)
0:471            Constant:
0:471              2 (const int)
0:471          component-wise multiply ( temp highp float)
0:471            direct index ( temp highp float)
0:471              direct index ( temp highp 4-component vector of float)
0:471                'm' ( temp highp 4X4 matrix of float)
0:471                Constant:
0:471                  1 (const int)
0:471              Constant:
0:471                2 (const int)
0:471            direct index ( temp highp float)
0:471              'tt' ( temp highp 3-component vector of float)
0:471              Constant:
0:471                1 (const int)
0:472        add second child into first child ( temp highp float)
0:472          direct index ( temp highp float)
0:472            direct index ( temp highp 4-component vector of float)
0:472              'm' ( temp highp 4X4 matrix of float)
0:472              Constant:
0:472                3 (const int)
0:472            Constant:
0:472              3 (const int)
0:472          component-wise multiply ( temp highp float)
0:472            direct index ( temp highp float)
0:472              direct index ( temp highp 4-component vector of float)
0:472                'm' ( temp highp 4X4 matrix of float)
0:472                Constant:
0:472                  1 (const int)
0:472              Constant:
0:472                3 (const int)
0:472            direct index ( temp highp float)
0:472              'tt' ( temp highp 3-component vector of float)
0:472              Constant:
0:472                1 (const int)
0:473        add second child into first child ( temp highp float)
0:473          direct index ( temp highp float)
0:473            direct index ( temp highp 4-component vector of float)
0:473              'm' ( temp highp 4X4 matrix of float)
0:473              Constant:
0:473                3 (const int)
0:473            Constant:
0:473              0 (const int)
0:473          component-wise multiply ( temp highp float)
0:473            direct index ( temp highp float)
0:473              direct index ( temp highp 4-component vector of float)
0:473                'm' ( temp highp 4X4 matrix of float)
0:473                Constant:
0:473                  2 (const int)
0:473              Constant:
0:473                0 (const int)
0:473            direct index ( temp highp float)
0:473              'tt' ( temp highp 3-component vector of float)
0:473              Constant:
0:473                2 (const int)
0:474        add second child into first child ( temp highp float)
0:474          direct index ( temp highp float)
0:474            direct index ( temp highp 4-component vector of float)
0:474              'm' ( temp highp 4X4 matrix of float)
0:474              Constant:
0:474                3 (const int)
0:474            Constant:
0:474              1 (const int)
0:474          component-wise multiply ( temp highp float)
0:474            direct index ( temp highp float)
0:474              direct index ( temp highp 4-component vector of float)
0:474                'm' ( temp highp 4X4 matrix of float)
0:474                Constant:
0:474                  2 (const int)
0:474              Constant:
0:474                1 (const int)
0:474            direct index ( temp highp float)
0:474              'tt' ( temp highp 3-component vector of float)
0:474              Constant:
0:474                2 (const int)
0:475        add second child into first child ( temp highp float)
0:475          direct index ( temp highp float)
0:475            direct index ( temp highp 4-component vector of float)
0:475              'm' ( temp highp 4X4 matrix of float)
0:475              Constant:
0:475                3 (const int)
0:475            Constant:
0:475              2 (const int)
0:475          component-wise multiply ( temp highp float)
0:475            direct index ( temp highp float)
0:475              direct index ( temp highp 4-component vector of float)
0:475                'm' ( temp highp 4X4 matrix of float)
0:475                Constant:
0:475                  2 (const int)
0:475              Constant:
0:475                2 (const int)
0:475            direct index ( temp highp float)
0:475              'tt' ( temp highp 3-component vector of float)
0:475              Constant:
0:475                2 (const int)
0:476        add second child into first child ( temp highp float)
0:476          direct index ( temp highp float)
0:476            direct index ( temp highp 4-component vector of float)
0:476              'm' ( temp highp 4X4 matrix of float)
0:476              Constant:
0:476                3 (const int)
0:476            Constant:
0:476              3 (const int)
0:476          component-wise multiply ( temp highp float)
0:476            direct index ( temp highp float)
0:476              direct index ( temp highp 4-component vector of float)
0:476                'm' ( temp highp 4X4 matrix of float)
0:476                Constant:
0:476                  2 (const int)
0:476              Constant:
0:476                3 (const int)
0:476            direct index ( temp highp float)
0:476              'tt' ( temp highp 3-component vector of float)
0:476              Constant:
0:476                2 (const int)
0:478      Branch: Return with expression
0:478        'm' ( temp highp 4X4 matrix of float)
0:480  Function Definition: TDInstanceMat3(i1; ( global highp 3X3 matrix of float)
0:480    Function Parameters: 
0:480      'id' ( in highp int)
0:481    Sequence
0:481      Sequence
0:481        move second child to first child ( temp highp 3X3 matrix of float)
0:481          'm' ( temp highp 3X3 matrix of float)
0:481          Constant:
0:481            1.000000
0:481            0.000000
0:481            0.000000
0:481            0.000000
0:481            1.000000
0:481            0.000000
0:481            0.000000
0:481            0.000000
0:481            1.000000
0:482      Branch: Return with expression
0:482        'm' ( temp highp 3X3 matrix of float)
0:484  Function Definition: TDInstanceMat3ForNorm(i1; ( global highp 3X3 matrix of float)
0:484    Function Parameters: 
0:484      'id' ( in highp int)
0:485    Sequence
0:485      Sequence
0:485        move second child to first child ( temp highp 3X3 matrix of float)
0:485          'm' ( temp highp 3X3 matrix of float)
0:485          Function Call: TDInstanceMat3(i1; ( global highp 3X3 matrix of float)
0:485            'id' ( in highp int)
0:486      Branch: Return with expression
0:486        'm' ( temp highp 3X3 matrix of float)
0:488  Function Definition: TDInstanceColor(i1;vf4; ( global highp 4-component vector of float)
0:488    Function Parameters: 
0:488      'index' ( in highp int)
0:488      'curColor' ( in highp 4-component vector of float)
0:489    Sequence
0:489      subtract second child into first child ( temp highp int)
0:489        'index' ( in highp int)
0:489        uTDInstanceIDOffset: direct index for structure ( uniform highp int)
0:489          'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal,  uniform highp 3-component vector of float uConstant,  uniform highp float uShadowStrength,  uniform highp 3-component vector of float uShadowColor,  uniform highp 4-component vector of float uDiffuseColor,  uniform highp 4-component vector of float uAmbientColor})
0:489          Constant:
0:489            0 (const uint)
0:491      Sequence
0:491        move second child to first child ( temp highp int)
0:491          'coord' ( temp highp int)
0:491          'index' ( in highp int)
0:492      Sequence
0:492        move second child to first child ( temp highp 4-component vector of float)
0:492          'samp' ( temp highp 4-component vector of float)
0:492          textureFetch ( global highp 4-component vector of float)
0:492            'sTDInstanceColor' (layout( binding=17) uniform highp samplerBuffer)
0:492            'coord' ( temp highp int)
0:493      move second child to first child ( temp highp float)
0:493        direct index ( temp highp float)
0:493          'v' ( temp highp 4-component vector of float)
0:493          Constant:
0:493            0 (const int)
0:493        direct index ( temp highp float)
0:493          'samp' ( temp highp 4-component vector of float)
0:493          Constant:
0:493            0 (const int)
0:494      move second child to first child ( temp highp float)
0:494        direct index ( temp highp float)
0:494          'v' ( temp highp 4-component vector of float)
0:494          Constant:
0:494            1 (const int)
0:494        direct index ( temp highp float)
0:494          'samp' ( temp highp 4-component vector of float)
0:494          Constant:
0:494            1 (const int)
0:495      move second child to first child ( temp highp float)
0:495        direct index ( temp highp float)
0:495          'v' ( temp highp 4-component vector of float)
0:495          Constant:
0:495            2 (const int)
0:495        direct index ( temp highp float)
0:495          'samp' ( temp highp 4-component vector of float)
0:495          Constant:
0:495            2 (const int)
0:496      move second child to first child ( temp highp float)
0:496        direct index ( temp highp float)
0:496          'v' ( temp highp 4-component vector of float)
0:496          Constant:
0:496            3 (const int)
0:496        Constant:
0:496          1.000000
0:497      move second child to first child ( temp highp float)
0:497        direct index ( temp highp float)
0:497          'curColor' ( in highp 4-component vector of float)
0:497          Constant:
0:497            0 (const int)
0:497        direct index ( temp highp float)
0:497          'v' ( temp highp 4-component vector of float)
0:497          Constant:
0:497            0 (const int)
0:499      move second child to first child ( temp highp float)
0:499        direct index ( temp highp float)
0:499          'curColor' ( in highp 4-component vector of float)
0:499          Constant:
0:499            1 (const int)
0:499        direct index ( temp highp float)
0:499          'v' ( temp highp 4-component vector of float)
0:499          Constant:
0:499            1 (const int)
0:501      move second child to first child ( temp highp float)
0:501        direct index ( temp highp float)
0:501          'curColor' ( in highp 4-component vector of float)
0:501          Constant:
0:501            2 (const int)
0:501        direct index ( temp highp float)
0:501          'v' ( temp highp 4-component vector of float)
0:501          Constant:
0:501            2 (const int)
0:503      Branch: Return with expression
0:503        'curColor' ( in highp 4-component vector of float)
0:2  Function Definition: TDOutputSwizzle(vf4; ( global highp 4-component vector of float)
0:2    Function Parameters: 
0:2      'c' ( in highp 4-component vector of float)
0:4    Sequence
0:4      Branch: Return with expression
0:4        vector swizzle ( temp highp 4-component vector of float)
0:4          'c' ( in highp 4-component vector of float)
0:4          Sequence
0:4            Constant:
0:4              0 (const int)
0:4            Constant:
0:4              1 (const int)
0:4            Constant:
0:4              2 (const int)
0:4            Constant:
0:4              3 (const int)
0:6  Function Definition: TDOutputSwizzle(vu4; ( global highp 4-component vector of uint)
0:6    Function Parameters: 
0:6      'c' ( in highp 4-component vector of uint)
0:8    Sequence
0:8      Branch: Return with expression
0:8        vector swizzle ( temp highp 4-component vector of uint)
0:8          'c' ( in highp 4-component vector of uint)
0:8          Sequence
0:8            Constant:
0:8              0 (const int)
0:8            Constant:
0:8              1 (const int)
0:8            Constant:
0:8              2 (const int)
0:8            Constant:
0:8              3 (const int)
0:?   Linker Objects
0:?     'anon@0' (layout( column_major std140) uniform block{ uniform highp int uTDInstanceIDOffset,  uniform highp int uTDNumInstances,  uniform highp float uTDAlphaTestVal,  uniform highp 3-component vector of float uConstant,  uniform highp float uShadowStrength,  uniform highp 3-component vector of float uShadowColor,  uniform highp 4-component vector of float uDiffuseColor,  uniform highp 4-component vector of float uAmbientColor})
0:?     'anon@1' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{layout( column_major std140) global highp 4X4 matrix of float world, layout( column_major std140) global highp 4X4 matrix of float worldInverse, layout( column_major std140) global highp 4X4 matrix of float worldCam, layout( column_major std140) global highp 4X4 matrix of float worldCamInverse, layout( column_major std140) global highp 4X4 matrix of float cam, layout( column_major std140) global highp 4X4 matrix of float camInverse, layout( column_major std140) global highp 4X4 matrix of float camProj, layout( column_major std140) global highp 4X4 matrix of float camProjInverse, layout( column_major std140) global highp 4X4 matrix of float proj, layout( column_major std140) global highp 4X4 matrix of float projInverse, layout( column_major std140) global highp 4X4 matrix of float worldCamProj, layout( column_major std140) global highp 4X4 matrix of float worldCamProjInverse, layout( column_major std140) global highp 4X4 matrix of float quadReproject, layout( column_major std140) global highp 3X3 matrix of float worldForNormals, layout( column_major std140) global highp 3X3 matrix of float camForNormals, layout( column_major std140) global highp 3X3 matrix of float worldCamForNormals} uTDMats})
0:?     'anon@2' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{ global highp 4-component vector of float nearFar,  global highp 4-component vector of float fog,  global highp 4-component vector of float fogColor,  global highp int renderTOPCameraIndex} uTDCamInfos})
0:?     'anon@3' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform structure{ global highp 4-component vector of float ambientColor,  global highp 4-component vector of float nearFar,  global highp 4-component vector of float viewport,  global highp 4-component vector of float viewportRes,  global highp 4-component vector of float fog,  global highp 4-component vector of float fogColor} uTDGeneral})
0:?     'sColorMap' ( uniform highp sampler2DArray)
0:?     'iVert' ( in block{ in highp 4-component vector of float color,  in highp 3-component vector of float worldSpacePos,  in highp 3-component vector of float texCoord0,  flat in highp int cameraIndex,  flat in highp int instance})
0:?     'oFragColor' (layout( location=0) out 1-element array of highp 4-component vector of float)
0:?     'sTDNoiseMap' ( uniform highp sampler2D)
0:?     'sTDSineLookup' ( uniform highp sampler1D)
0:?     'sTDWhite2D' ( uniform highp sampler2D)
0:?     'sTDWhite3D' ( uniform highp sampler3D)
0:?     'sTDWhite2DArray' ( uniform highp sampler2DArray)
0:?     'sTDWhiteCube' ( uniform highp samplerCube)
0:?     'anon@1' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{ global highp 4-component vector of float position,  global highp 3-component vector of float direction,  global highp 3-component vector of float diffuse,  global highp 4-component vector of float nearFar,  global highp 4-component vector of float lightSize,  global highp 4-component vector of float misc,  global highp 4-component vector of float coneLookupScaleBias,  global highp 4-component vector of float attenScaleBiasRoll, layout( column_major std140) global highp 4X4 matrix of float shadowMapMatrix, layout( column_major std140) global highp 4X4 matrix of float shadowMapCamMatrix,  global highp 4-component vector of float shadowMapRes, layout( column_major std140) global highp 4X4 matrix of float projMapMatrix} uTDLights})
0:?     'anon@2' (layout( column_major std140) uniform block{layout( column_major std140 offset=0) uniform 1-element array of structure{ global highp 3-component vector of float color, layout( column_major std140) global highp 3X3 matrix of float rotate} uTDEnvLights})
0:?     'uTDEnvLightBuffers' (layout( column_major std430) restrict readonly buffer 1-element array of block{layout( column_major std430 offset=0) restrict readonly buffer 9-element array of highp 3-component vector of float shCoeffs})
0:?     'sTDInstanceT' (layout( binding=15) uniform highp samplerBuffer)
0:?     'sTDInstanceTexCoord' (layout( binding=16) uniform highp samplerBuffer)
0:?     'sTDInstanceColor' (layout( binding=17) uniform highp samplerBuffer)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 939

                              Capability Shader
                              Capability SampledBuffer
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Vertex 54_1  "main" 59_1 59_2 59_3 59_4 59_5 59_7 59_14 59_15
                              Source GLSL 460
                              Name 54_1  "main"
                              Name 54_2  "iTDCamToProj(vf4;vf3;i1;b1;"
                              Name 55_1  "v"
                              Name 55_2  "uv"
                              Name 55_3  "cameraIndex"
                              Name 55_4  "applyPickMod"
                              Name 54_3  "iTDWorldToProj(vf4;vf3;i1;b1;"
                              Name 55_5  "v"
                              Name 55_6  "uv"
                              Name 55_7  "cameraIndex"
                              Name 55_8  "applyPickMod"
                              Name 54_4  "TDInstanceID("
                              Name 54_5  "TDCameraIndex("
                              Name 54_6  "TDUVUnwrapCoord("
                              Name 54_7  "TDPickID("
                              Name 54_8  "iTDConvertPickId(i1;"
                              Name 55_9  "id"
                              Name 54_9  "TDWritePickingValues("
                              Name 54_10  "TDWorldToProj(vf4;vf3;"
                              Name 55_10  "v"
                              Name 55_11  "uv"
                              Name 54_11  "TDWorldToProj(vf3;vf3;"
                              Name 55_12  "v"
                              Name 55_13  "uv"
                              Name 54_12  "TDWorldToProj(vf4;"
                              Name 55_14  "v"
                              Name 54_13  "TDWorldToProj(vf3;"
                              Name 55_15  "v"
                              Name 54_14  "TDPointColor("
                              Name 54_15  "TDInstanceTexCoord(i1;vf3;"
                              Name 55_16  "index"
                              Name 55_17  "t"
                              Name 54_16  "TDInstanceActive(i1;"
                              Name 55_18  "index"
                              Name 54_17  "iTDInstanceTranslate(i1;b1;"
                              Name 55_19  "index"
                              Name 55_20  "instanceActive"
                              Name 54_18  "TDInstanceTranslate(i1;"
                              Name 55_21  "index"
                              Name 54_19  "TDInstanceRotateMat(i1;"
                              Name 55_22  "index"
                              Name 54_20  "TDInstanceScale(i1;"
                              Name 55_23  "index"
                              Name 54_21  "TDInstancePivot(i1;"
                              Name 55_24  "index"
                              Name 54_22  "TDInstanceRotTo(i1;"
                              Name 55_25  "index"
                              Name 54_23  "TDInstanceRotUp(i1;"
                              Name 55_26  "index"
                              Name 54_24  "TDInstanceMat(i1;"
                              Name 55_27  "id"
                              Name 54_25  "TDInstanceMat3(i1;"
                              Name 55_28  "id"
                              Name 54_26  "TDInstanceMat3ForNorm(i1;"
                              Name 55_29  "id"
                              Name 54_27  "TDInstanceColor(i1;vf4;"
                              Name 55_30  "index"
                              Name 55_31  "curColor"
                              Name 54_28  "TDInstanceDeform(i1;vf4;"
                              Name 55_32  "id"
                              Name 55_33  "pos"
                              Name 54_29  "TDInstanceDeformVec(i1;vf3;"
                              Name 55_34  "id"
                              Name 55_35  "vec"
                              Name 54_30  "TDInstanceDeformNorm(i1;vf3;"
                              Name 55_36  "id"
                              Name 55_37  "vec"
                              Name 54_31  "TDInstanceDeform(vf4;"
                              Name 55_38  "pos"
                              Name 54_32  "TDInstanceDeformVec(vf3;"
                              Name 55_39  "vec"
                              Name 54_33  "TDInstanceDeformNorm(vf3;"
                              Name 55_40  "vec"
                              Name 54_34  "TDInstanceActive("
                              Name 54_35  "TDInstanceTranslate("
                              Name 54_36  "TDInstanceRotateMat("
                              Name 54_37  "TDInstanceScale("
                              Name 54_38  "TDInstanceMat("
                              Name 54_39  "TDInstanceMat3("
                              Name 54_40  "TDInstanceTexCoord(vf3;"
                              Name 55_41  "t"
                              Name 54_41  "TDInstanceColor(vf4;"
                              Name 55_42  "curColor"
                              Name 54_42  "TDSkinnedDeform(vf4;"
                              Name 55_43  "pos"
                              Name 54_43  "TDSkinnedDeformVec(vf3;"
                              Name 55_44  "vec"
                              Name 54_44  "TDFastDeformTangent(vf3;vf4;vf3;"
                              Name 55_45  "oldNorm"
                              Name 55_46  "oldTangent"
                              Name 55_47  "deformedNorm"
                              Name 54_45  "TDBoneMat(i1;"
                              Name 55_48  "index"
                              Name 54_46  "TDDeform(vf4;"
                              Name 55_49  "pos"
                              Name 54_47  "TDDeform(i1;vf3;"
                              Name 55_50  "instanceID"
                              Name 55_51  "p"
                              Name 54_48  "TDDeform(vf3;"
                              Name 55_52  "pos"
                              Name 54_49  "TDDeformVec(i1;vf3;"
                              Name 55_53  "instanceID"
                              Name 55_54  "vec"
                              Name 54_50  "TDDeformVec(vf3;"
                              Name 55_55  "vec"
                              Name 54_51  "TDDeformNorm(i1;vf3;"
                              Name 55_56  "instanceID"
                              Name 55_57  "vec"
                              Name 54_52  "TDDeformNorm(vf3;"
                              Name 55_58  "vec"
                              Name 54_53  "TDSkinnedDeformNorm(vf3;"
                              Name 55_59  "vec"
                              Name 59_23  "texcoord"
                              Name 59_1  "uv"
                              Name 59_24  "param"
                              Name 30_1  "Vertex"
                              MemberName 30_1(Vertex) 0  "color"
                              MemberName 30_1(Vertex) 1  "worldSpacePos"
                              MemberName 30_1(Vertex) 2  "texCoord0"
                              MemberName 30_1(Vertex) 3  "cameraIndex"
                              MemberName 30_1(Vertex) 4  "instance"
                              Name 59_2  "oVert"
                              Name 59_25  "worldSpacePos"
                              Name 59_3  "P"
                              Name 59_26  "param"
                              Name 59_27  "uvUnwrapCoord"
                              Name 59_28  "param"
                              Name 30_2  "gl_PerVertex"
                              MemberName 30_2(gl_PerVertex) 0  "gl_Position"
                              MemberName 30_2(gl_PerVertex) 1  "gl_PointSize"
                              MemberName 30_2(gl_PerVertex) 2  "gl_ClipDistance"
                              MemberName 30_2(gl_PerVertex) 3  "gl_CullDistance"
                              Name 59_4  ""
                              Name 59_29  "param"
                              Name 59_30  "param"
                              Name 59_31  "cameraIndex"
                              Name 59_5  "Cd"
                              Name 59_32  "param"
                              Name 30_3  "TDMatrix"
                              MemberName 30_3(TDMatrix) 0  "world"
                              MemberName 30_3(TDMatrix) 1  "worldInverse"
                              MemberName 30_3(TDMatrix) 2  "worldCam"
                              MemberName 30_3(TDMatrix) 3  "worldCamInverse"
                              MemberName 30_3(TDMatrix) 4  "cam"
                              MemberName 30_3(TDMatrix) 5  "camInverse"
                              MemberName 30_3(TDMatrix) 6  "camProj"
                              MemberName 30_3(TDMatrix) 7  "camProjInverse"
                              MemberName 30_3(TDMatrix) 8  "proj"
                              MemberName 30_3(TDMatrix) 9  "projInverse"
                              MemberName 30_3(TDMatrix) 10  "worldCamProj"
                              MemberName 30_3(TDMatrix) 11  "worldCamProjInverse"
                              MemberName 30_3(TDMatrix) 12  "quadReproject"
                              MemberName 30_3(TDMatrix) 13  "worldForNormals"
                              MemberName 30_3(TDMatrix) 14  "camForNormals"
                              MemberName 30_3(TDMatrix) 15  "worldCamForNormals"
                              Name 30_4  "TDMatricesBlock"
                              MemberName 30_4(TDMatricesBlock) 0  "uTDMats"
                              Name 59_6  ""
                              Name 59_7  "gl_InstanceIndex"
                              Name 30_5  "gl_DefaultUniformBlock"
                              MemberName 30_5(gl_DefaultUniformBlock) 0  "uTDInstanceIDOffset"
                              MemberName 30_5(gl_DefaultUniformBlock) 1  "uTDNumInstances"
                              MemberName 30_5(gl_DefaultUniformBlock) 2  "uTDAlphaTestVal"
                              MemberName 30_5(gl_DefaultUniformBlock) 3  "uConstant"
                              MemberName 30_5(gl_DefaultUniformBlock) 4  "uShadowStrength"
                              MemberName 30_5(gl_DefaultUniformBlock) 5  "uShadowColor"
                              MemberName 30_5(gl_DefaultUniformBlock) 6  "uDiffuseColor"
                              MemberName 30_5(gl_DefaultUniformBlock) 7  "uAmbientColor"
                              Name 59_8  ""
                              Name 59_33  "param"
                              Name 59_34  "param"
                              Name 59_35  "param"
                              Name 59_36  "param"
                              Name 59_37  "param"
                              Name 59_38  "param"
                              Name 59_39  "param"
                              Name 59_40  "param"
                              Name 59_41  "param"
                              Name 59_42  "coord"
                              Name 59_43  "samp"
                              Name 59_9  "sTDInstanceTexCoord"
                              Name 59_44  "v"
                              Name 59_45  "coord"
                              Name 59_46  "samp"
                              Name 59_10  "sTDInstanceT"
                              Name 59_47  "v"
                              Name 59_48  "origIndex"
                              Name 59_49  "coord"
                              Name 59_50  "samp"
                              Name 59_51  "v"
                              Name 59_52  "coord"
                              Name 59_53  "samp"
                              Name 59_54  "v"
                              Name 59_55  "v"
                              Name 59_56  "m"
                              Name 59_57  "v"
                              Name 59_58  "v"
                              Name 59_59  "v"
                              Name 59_60  "v"
                              Name 59_61  "instanceActive"
                              Name 59_62  "t"
                              Name 59_63  "param"
                              Name 59_64  "param"
                              Name 59_65  "m"
                              Name 59_66  "tt"
                              Name 59_67  "m"
                              Name 59_68  "m"
                              Name 59_69  "param"
                              Name 59_70  "coord"
                              Name 59_71  "samp"
                              Name 59_11  "sTDInstanceColor"
                              Name 59_72  "v"
                              Name 59_73  "param"
                              Name 59_74  "m"
                              Name 59_75  "param"
                              Name 59_76  "m"
                              Name 59_77  "param"
                              Name 59_78  "param"
                              Name 59_79  "param"
                              Name 59_80  "param"
                              Name 59_81  "param"
                              Name 59_82  "param"
                              Name 59_83  "param"
                              Name 59_84  "param"
                              Name 59_85  "param"
                              Name 59_86  "param"
                              Name 59_87  "param"
                              Name 59_88  "param"
                              Name 59_89  "param"
                              Name 59_90  "param"
                              Name 59_91  "param"
                              Name 59_92  "param"
                              Name 59_93  "param"
                              Name 59_94  "param"
                              Name 59_95  "param"
                              Name 59_96  "pos"
                              Name 59_97  "param"
                              Name 59_98  "param"
                              Name 59_99  "param"
                              Name 59_100  "param"
                              Name 59_101  "param"
                              Name 59_102  "param"
                              Name 59_103  "param"
                              Name 59_104  "param"
                              Name 59_105  "param"
                              Name 59_106  "param"
                              Name 59_107  "param"
                              Name 59_108  "param"
                              Name 59_109  "param"
                              Name 59_110  "param"
                              Name 59_111  "param"
                              Name 59_112  "param"
                              Name 30_6  "TDCameraInfo"
                              MemberName 30_6(TDCameraInfo) 0  "nearFar"
                              MemberName 30_6(TDCameraInfo) 1  "fog"
                              MemberName 30_6(TDCameraInfo) 2  "fogColor"
                              MemberName 30_6(TDCameraInfo) 3  "renderTOPCameraIndex"
                              Name 30_7  "TDCameraInfoBlock"
                              MemberName 30_7(TDCameraInfoBlock) 0  "uTDCamInfos"
                              Name 59_12  ""
                              Name 30_8  "TDGeneral"
                              MemberName 30_8(TDGeneral) 0  "ambientColor"
                              MemberName 30_8(TDGeneral) 1  "nearFar"
                              MemberName 30_8(TDGeneral) 2  "viewport"
                              MemberName 30_8(TDGeneral) 3  "viewportRes"
                              MemberName 30_8(TDGeneral) 4  "fog"
                              MemberName 30_8(TDGeneral) 5  "fogColor"
                              Name 30_9  "TDGeneralBlock"
                              MemberName 30_9(TDGeneralBlock) 0  "uTDGeneral"
                              Name 59_13  ""
                              Name 59_14  "N"
                              Name 59_15  "gl_VertexIndex"
                              Name 30_10  "TDLight"
                              MemberName 30_10(TDLight) 0  "position"
                              MemberName 30_10(TDLight) 1  "direction"
                              MemberName 30_10(TDLight) 2  "diffuse"
                              MemberName 30_10(TDLight) 3  "nearFar"
                              MemberName 30_10(TDLight) 4  "lightSize"
                              MemberName 30_10(TDLight) 5  "misc"
                              MemberName 30_10(TDLight) 6  "coneLookupScaleBias"
                              MemberName 30_10(TDLight) 7  "attenScaleBiasRoll"
                              MemberName 30_10(TDLight) 8  "shadowMapMatrix"
                              MemberName 30_10(TDLight) 9  "shadowMapCamMatrix"
                              MemberName 30_10(TDLight) 10  "shadowMapRes"
                              MemberName 30_10(TDLight) 11  "projMapMatrix"
                              Name 30_11  "TDLightBlock"
                              MemberName 30_11(TDLightBlock) 0  "uTDLights"
                              Name 59_16  ""
                              Name 30_12  "TDEnvLight"
                              MemberName 30_12(TDEnvLight) 0  "color"
                              MemberName 30_12(TDEnvLight) 1  "rotate"
                              Name 30_13  "TDEnvLightBlock"
                              MemberName 30_13(TDEnvLightBlock) 0  "uTDEnvLights"
                              Name 59_17  ""
                              Name 30_14  "TDEnvLightBuffer"
                              MemberName 30_14(TDEnvLightBuffer) 0  "shCoeffs"
                              Name 59_18  "uTDEnvLightBuffers"
                              Name 59_19  "mTD2DImageOutputs"
                              Name 59_20  "mTD2DArrayImageOutputs"
                              Name 59_21  "mTD3DImageOutputs"
                              Name 59_22  "mTDCubeImageOutputs"
                              Decorate 59_1(uv) Location 3
                              Decorate 30_1(Vertex) Block
                              MemberDecorate 30_1(Vertex) 3 Flat
                              MemberDecorate 30_1(Vertex) 4 Flat
                              Decorate 59_2(oVert) Location 0
                              Decorate 59_3(P) Location 0
                              Decorate 30_2(gl_PerVertex) Block
                              MemberDecorate 30_2(gl_PerVertex) 0 BuiltIn Position
                              MemberDecorate 30_2(gl_PerVertex) 1 BuiltIn PointSize
                              MemberDecorate 30_2(gl_PerVertex) 2 BuiltIn ClipDistance
                              MemberDecorate 30_2(gl_PerVertex) 3 BuiltIn CullDistance
                              Decorate 59_5(Cd) Location 2
                              MemberDecorate 30_3(TDMatrix) 0 ColMajor
                              MemberDecorate 30_3(TDMatrix) 0 MatrixStride 16
                              MemberDecorate 30_3(TDMatrix) 0 Offset 0
                              MemberDecorate 30_3(TDMatrix) 1 ColMajor
                              MemberDecorate 30_3(TDMatrix) 1 MatrixStride 16
                              MemberDecorate 30_3(TDMatrix) 1 Offset 64
                              MemberDecorate 30_3(TDMatrix) 2 ColMajor
                              MemberDecorate 30_3(TDMatrix) 2 MatrixStride 16
                              MemberDecorate 30_3(TDMatrix) 2 Offset 128
                              MemberDecorate 30_3(TDMatrix) 3 ColMajor
                              MemberDecorate 30_3(TDMatrix) 3 MatrixStride 16
                              MemberDecorate 30_3(TDMatrix) 3 Offset 192
                              MemberDecorate 30_3(TDMatrix) 4 ColMajor
                              MemberDecorate 30_3(TDMatrix) 4 MatrixStride 16
                              MemberDecorate 30_3(TDMatrix) 4 Offset 256
                              MemberDecorate 30_3(TDMatrix) 5 ColMajor
                              MemberDecorate 30_3(TDMatrix) 5 MatrixStride 16
                              MemberDecorate 30_3(TDMatrix) 5 Offset 320
                              MemberDecorate 30_3(TDMatrix) 6 ColMajor
                              MemberDecorate 30_3(TDMatrix) 6 MatrixStride 16
                              MemberDecorate 30_3(TDMatrix) 6 Offset 384
                              MemberDecorate 30_3(TDMatrix) 7 ColMajor
                              MemberDecorate 30_3(TDMatrix) 7 MatrixStride 16
                              MemberDecorate 30_3(TDMatrix) 7 Offset 448
                              MemberDecorate 30_3(TDMatrix) 8 ColMajor
                              MemberDecorate 30_3(TDMatrix) 8 MatrixStride 16
                              MemberDecorate 30_3(TDMatrix) 8 Offset 512
                              MemberDecorate 30_3(TDMatrix) 9 ColMajor
                              MemberDecorate 30_3(TDMatrix) 9 MatrixStride 16
                              MemberDecorate 30_3(TDMatrix) 9 Offset 576
                              MemberDecorate 30_3(TDMatrix) 10 ColMajor
                              MemberDecorate 30_3(TDMatrix) 10 MatrixStride 16
                              MemberDecorate 30_3(TDMatrix) 10 Offset 640
                              MemberDecorate 30_3(TDMatrix) 11 ColMajor
                              MemberDecorate 30_3(TDMatrix) 11 MatrixStride 16
                              MemberDecorate 30_3(TDMatrix) 11 Offset 704
                              MemberDecorate 30_3(TDMatrix) 12 ColMajor
                              MemberDecorate 30_3(TDMatrix) 12 MatrixStride 16
                              MemberDecorate 30_3(TDMatrix) 12 Offset 768
                              MemberDecorate 30_3(TDMatrix) 13 ColMajor
                              MemberDecorate 30_3(TDMatrix) 13 MatrixStride 16
                              MemberDecorate 30_3(TDMatrix) 13 Offset 832
                              MemberDecorate 30_3(TDMatrix) 14 ColMajor
                              MemberDecorate 30_3(TDMatrix) 14 MatrixStride 16
                              MemberDecorate 30_3(TDMatrix) 14 Offset 880
                              MemberDecorate 30_3(TDMatrix) 15 ColMajor
                              MemberDecorate 30_3(TDMatrix) 15 MatrixStride 16
                              MemberDecorate 30_3(TDMatrix) 15 Offset 928
                              Decorate 28_3 ArrayStride 976
                              Decorate 30_4(TDMatricesBlock) Block
                              MemberDecorate 30_4(TDMatricesBlock) 0 Offset 0
                              Decorate 59_6 Binding 1
                              Decorate 59_6 DescriptorSet 0
                              Decorate 59_7(gl_InstanceIndex) BuiltIn InstanceIndex
                              Decorate 30_5(gl_DefaultUniformBlock) Block
                              MemberDecorate 30_5(gl_DefaultUniformBlock) 0 Offset 0
                              MemberDecorate 30_5(gl_DefaultUniformBlock) 1 Offset 4
                              MemberDecorate 30_5(gl_DefaultUniformBlock) 2 Offset 8
                              MemberDecorate 30_5(gl_DefaultUniformBlock) 3 Offset 16
                              MemberDecorate 30_5(gl_DefaultUniformBlock) 4 Offset 28
                              MemberDecorate 30_5(gl_DefaultUniformBlock) 5 Offset 32
                              MemberDecorate 30_5(gl_DefaultUniformBlock) 6 Offset 48
                              MemberDecorate 30_5(gl_DefaultUniformBlock) 7 Offset 64
                              Decorate 59_8 Binding 0
                              Decorate 59_8 DescriptorSet 0
                              Decorate 59_9(sTDInstanceTexCoord) Binding 16
                              Decorate 59_9(sTDInstanceTexCoord) DescriptorSet 0
                              Decorate 59_10(sTDInstanceT) Binding 15
                              Decorate 59_10(sTDInstanceT) DescriptorSet 0
                              Decorate 59_11(sTDInstanceColor) Binding 17
                              Decorate 59_11(sTDInstanceColor) DescriptorSet 0
                              MemberDecorate 30_6(TDCameraInfo) 0 Offset 0
                              MemberDecorate 30_6(TDCameraInfo) 1 Offset 16
                              MemberDecorate 30_6(TDCameraInfo) 2 Offset 32
                              MemberDecorate 30_6(TDCameraInfo) 3 Offset 48
                              Decorate 28_4 ArrayStride 64
                              Decorate 30_7(TDCameraInfoBlock) Block
                              MemberDecorate 30_7(TDCameraInfoBlock) 0 Offset 0
                              Decorate 59_12 Binding 0
                              Decorate 59_12 DescriptorSet 0
                              MemberDecorate 30_8(TDGeneral) 0 Offset 0
                              MemberDecorate 30_8(TDGeneral) 1 Offset 16
                              MemberDecorate 30_8(TDGeneral) 2 Offset 32
                              MemberDecorate 30_8(TDGeneral) 3 Offset 48
                              MemberDecorate 30_8(TDGeneral) 4 Offset 64
                              MemberDecorate 30_8(TDGeneral) 5 Offset 80
                              Decorate 30_9(TDGeneralBlock) Block
                              MemberDecorate 30_9(TDGeneralBlock) 0 Offset 0
                              Decorate 59_13 Binding 0
                              Decorate 59_13 DescriptorSet 0
                              Decorate 59_14(N) Location 1
                              Decorate 59_15(gl_VertexIndex) BuiltIn VertexIndex
                              MemberDecorate 30_10(TDLight) 0 Offset 0
                              MemberDecorate 30_10(TDLight) 1 Offset 16
                              MemberDecorate 30_10(TDLight) 2 Offset 32
                              MemberDecorate 30_10(TDLight) 3 Offset 48
                              MemberDecorate 30_10(TDLight) 4 Offset 64
                              MemberDecorate 30_10(TDLight) 5 Offset 80
                              MemberDecorate 30_10(TDLight) 6 Offset 96
                              MemberDecorate 30_10(TDLight) 7 Offset 112
                              MemberDecorate 30_10(TDLight) 8 ColMajor
                              MemberDecorate 30_10(TDLight) 8 MatrixStride 16
                              MemberDecorate 30_10(TDLight) 8 Offset 128
                              MemberDecorate 30_10(TDLight) 9 ColMajor
                              MemberDecorate 30_10(TDLight) 9 MatrixStride 16
                              MemberDecorate 30_10(TDLight) 9 Offset 192
                              MemberDecorate 30_10(TDLight) 10 Offset 256
                              MemberDecorate 30_10(TDLight) 11 ColMajor
                              MemberDecorate 30_10(TDLight) 11 MatrixStride 16
                              MemberDecorate 30_10(TDLight) 11 Offset 272
                              Decorate 28_5 ArrayStride 336
                              Decorate 30_11(TDLightBlock) Block
                              MemberDecorate 30_11(TDLightBlock) 0 Offset 0
                              Decorate 59_16 Binding 0
                              Decorate 59_16 DescriptorSet 0
                              MemberDecorate 30_12(TDEnvLight) 0 Offset 0
                              MemberDecorate 30_12(TDEnvLight) 1 ColMajor
                              MemberDecorate 30_12(TDEnvLight) 1 MatrixStride 16
                              MemberDecorate 30_12(TDEnvLight) 1 Offset 16
                              Decorate 28_6 ArrayStride 64
                              Decorate 30_13(TDEnvLightBlock) Block
                              MemberDecorate 30_13(TDEnvLightBlock) 0 Offset 0
                              Decorate 59_17 Binding 0
                              Decorate 59_17 DescriptorSet 0
                              Decorate 28_7 ArrayStride 16
                              Decorate 30_14(TDEnvLightBuffer) BufferBlock
                              MemberDecorate 30_14(TDEnvLightBuffer) 0 Restrict
                              MemberDecorate 30_14(TDEnvLightBuffer) 0 NonWritable
                              MemberDecorate 30_14(TDEnvLightBuffer) 0 Offset 0
                              Decorate 59_18(uTDEnvLightBuffers) Binding 0
                              Decorate 59_18(uTDEnvLightBuffers) DescriptorSet 0
                              Decorate 59_19(mTD2DImageOutputs) Binding 0
                              Decorate 59_19(mTD2DImageOutputs) DescriptorSet 0
                              Decorate 59_20(mTD2DArrayImageOutputs) Binding 0
                              Decorate 59_20(mTD2DArrayImageOutputs) DescriptorSet 0
                              Decorate 59_21(mTD3DImageOutputs) Binding 0
                              Decorate 59_21(mTD3DImageOutputs) DescriptorSet 0
                              Decorate 59_22(mTDCubeImageOutputs) Binding 0
                              Decorate 59_22(mTDCubeImageOutputs) DescriptorSet 0
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
            32_1:             TypePointer Function 23_1(fvec4)
            23_2:             TypeVector 22_1(float) 3
            32_2:             TypePointer Function 23_2(fvec3)
            21_1:             TypeInt 32 1
            32_3:             TypePointer Function 21_1(int)
            20_1:             TypeBool
            32_4:             TypePointer Function 20_1(bool)
            33_2:             TypeFunction 23_1(fvec4) 32_1(ptr) 32_2(ptr) 32_3(ptr) 32_4(ptr)
            33_3:             TypeFunction 21_1(int)
            33_4:             TypeFunction 23_2(fvec3)
            33_5:             TypeFunction 22_1(float) 32_3(ptr)
            33_6:             TypeFunction 23_1(fvec4) 32_1(ptr) 32_2(ptr)
            33_7:             TypeFunction 23_1(fvec4) 32_2(ptr) 32_2(ptr)
            33_8:             TypeFunction 23_1(fvec4) 32_1(ptr)
            33_9:             TypeFunction 23_1(fvec4) 32_2(ptr)
           33_10:             TypeFunction 23_1(fvec4)
           33_11:             TypeFunction 23_2(fvec3) 32_3(ptr) 32_2(ptr)
           33_12:             TypeFunction 20_1(bool) 32_3(ptr)
           33_13:             TypeFunction 23_2(fvec3) 32_3(ptr) 32_4(ptr)
           33_14:             TypeFunction 23_2(fvec3) 32_3(ptr)
            24_1:             TypeMatrix 23_2(fvec3) 3
           33_15:             TypeFunction 24_1 32_3(ptr)
            24_2:             TypeMatrix 23_1(fvec4) 4
           33_16:             TypeFunction 24_2 32_3(ptr)
           33_17:             TypeFunction 23_1(fvec4) 32_3(ptr) 32_1(ptr)
           33_18:             TypeFunction 23_2(fvec3) 32_2(ptr)
           33_19:             TypeFunction 20_1(bool)
           33_20:             TypeFunction 24_1
           33_21:             TypeFunction 24_2
           33_22:             TypeFunction 23_2(fvec3) 32_2(ptr) 32_1(ptr) 32_2(ptr)
           33_23:             TypeFunction 23_1(fvec4) 32_3(ptr) 32_2(ptr)
            21_2:             TypeInt 32 0
         uint(8):   21_2(int) Constant 8
            28_1:             TypeArray 23_2(fvec3) uint(8)
            32_5:             TypePointer Input 28_1
        59_1(uv):   32_5(ptr) Variable Input
            43_1:   21_1(int) Constant 0
            32_6:             TypePointer Input 23_2(fvec3)
    30_1(Vertex):             TypeStruct 23_1(fvec4) 23_2(fvec3) 23_2(fvec3) 21_1(int) 21_1(int)
            32_7:             TypePointer Output 30_1(Vertex)
     59_2(oVert):   32_7(ptr) Variable Output
            43_2:   21_1(int) Constant 2
            32_8:             TypePointer Output 23_2(fvec3)
            43_3:   21_1(int) Constant 4
            32_9:             TypePointer Output 21_1(int)
         59_3(P):   32_6(ptr) Variable Input
         uint(1):   21_2(int) Constant 1
            28_2:             TypeArray 22_1(float) uint(1)
30_2(gl_PerVertex):             TypeStruct 23_1(fvec4) 22_1(float) 28_2 28_2
           32_10:             TypePointer Output 30_2(gl_PerVertex)
            59_4:  32_10(ptr) Variable Output
           32_11:             TypePointer Output 23_1(fvec4)
            43_4:   21_1(int) Constant 3
            43_5:   21_1(int) Constant 1
           32_12:             TypePointer Input 23_1(fvec4)
        59_5(Cd):  32_12(ptr) Variable Input
            43_6: 22_1(float) Constant 1073741824
            43_7: 22_1(float) Constant 0
            44_1: 23_1(fvec4) ConstantComposite 43_6 43_6 43_6 43_7
  30_3(TDMatrix):             TypeStruct 24_2 24_2 24_2 24_2 24_2 24_2 24_2 24_2 24_2 24_2 24_2 24_2 24_2 24_1 24_1 24_1
            28_3:             TypeArray 30_3(TDMatrix) uint(1)
30_4(TDMatricesBlock):             TypeStruct 28_3
           32_13:             TypePointer Uniform 30_4(TDMatricesBlock)
            59_6:  32_13(ptr) Variable Uniform
            43_8:   21_1(int) Constant 8
           32_14:             TypePointer Uniform 24_2
            43_9:   21_1(int) Constant 6
           32_15:             TypePointer Input 21_1(int)
59_7(gl_InstanceIndex):  32_15(ptr) Variable Input
30_5(gl_DefaultUniformBlock):             TypeStruct 21_1(int) 21_1(int) 22_1(float) 23_2(fvec3) 22_1(float) 23_2(fvec3) 23_1(fvec4) 23_1(fvec4)
           32_16:             TypePointer Uniform 30_5(gl_DefaultUniformBlock)
            59_8:  32_16(ptr) Variable Uniform
           32_17:             TypePointer Uniform 21_1(int)
           43_10:   21_1(int) Constant 1073741824
            41_1:  20_1(bool) ConstantTrue
           43_11: 22_1(float) Constant 1065353216
            44_2: 23_2(fvec3) ConstantComposite 43_7 43_7 43_7
            25_1:             TypeImage 22_1(float) Buffer sampled format:Unknown
            27_1:             TypeSampledImage 25_1
           32_18:             TypePointer UniformConstant 27_1
59_9(sTDInstanceTexCoord):  32_18(ptr) Variable UniformConstant
         uint(0):   21_2(int) Constant 0
           32_19:             TypePointer Function 22_1(float)
         uint(2):   21_2(int) Constant 2
59_10(sTDInstanceT):  32_18(ptr) Variable UniformConstant
         uint(3):   21_2(int) Constant 3
           32_20:             TypePointer Function 24_1
            44_3: 23_2(fvec3) ConstantComposite 43_11 43_7 43_7
            44_4: 23_2(fvec3) ConstantComposite 43_7 43_11 43_7
            44_5: 23_2(fvec3) ConstantComposite 43_7 43_7 43_11
            44_6:        24_1 ConstantComposite 44_3 44_4 44_5
            44_7: 23_2(fvec3) ConstantComposite 43_11 43_11 43_11
            44_8: 23_1(fvec4) ConstantComposite 43_7 43_7 43_7 43_7
            44_9:        24_2 ConstantComposite 44_8 44_8 44_8 44_8
           32_21:             TypePointer Function 24_2
           44_10: 23_1(fvec4) ConstantComposite 43_11 43_7 43_7 43_7
           44_11: 23_1(fvec4) ConstantComposite 43_7 43_11 43_7 43_7
           44_12: 23_1(fvec4) ConstantComposite 43_7 43_7 43_11 43_7
           44_13: 23_1(fvec4) ConstantComposite 43_7 43_7 43_7 43_11
           44_14:        24_2 ConstantComposite 44_10 44_11 44_12 44_13
59_11(sTDInstanceColor):  32_18(ptr) Variable UniformConstant
           43_12:   21_1(int) Constant 13
           32_22:             TypePointer Uniform 24_1
30_6(TDCameraInfo):             TypeStruct 23_1(fvec4) 23_1(fvec4) 23_1(fvec4) 21_1(int)
            28_4:             TypeArray 30_6(TDCameraInfo) uint(1)
30_7(TDCameraInfoBlock):             TypeStruct 28_4
           32_23:             TypePointer Uniform 30_7(TDCameraInfoBlock)
           59_12:  32_23(ptr) Variable Uniform
 30_8(TDGeneral):             TypeStruct 23_1(fvec4) 23_1(fvec4) 23_1(fvec4) 23_1(fvec4) 23_1(fvec4) 23_1(fvec4)
30_9(TDGeneralBlock):             TypeStruct 30_8(TDGeneral)
           32_24:             TypePointer Uniform 30_9(TDGeneralBlock)
           59_13:  32_24(ptr) Variable Uniform
        59_14(N):   32_6(ptr) Variable Input
59_15(gl_VertexIndex):  32_15(ptr) Variable Input
  30_10(TDLight):             TypeStruct 23_1(fvec4) 23_2(fvec3) 23_2(fvec3) 23_1(fvec4) 23_1(fvec4) 23_1(fvec4) 23_1(fvec4) 23_1(fvec4) 24_2 24_2 23_1(fvec4) 24_2
            28_5:             TypeArray 30_10(TDLight) uint(1)
30_11(TDLightBlock):             TypeStruct 28_5
           32_25:             TypePointer Uniform 30_11(TDLightBlock)
           59_16:  32_25(ptr) Variable Uniform
30_12(TDEnvLight):             TypeStruct 23_2(fvec3) 24_1
            28_6:             TypeArray 30_12(TDEnvLight) uint(1)
30_13(TDEnvLightBlock):             TypeStruct 28_6
           32_26:             TypePointer Uniform 30_13(TDEnvLightBlock)
           59_17:  32_26(ptr) Variable Uniform
         uint(9):   21_2(int) Constant 9
            28_7:             TypeArray 23_2(fvec3) uint(9)
30_14(TDEnvLightBuffer):             TypeStruct 28_7
            28_8:             TypeArray 30_14(TDEnvLightBuffer) uint(1)
           32_27:             TypePointer Uniform 28_8
59_18(uTDEnvLightBuffers):  32_27(ptr) Variable Uniform
            25_2:             TypeImage 22_1(float) 2D nonsampled format:Rgba8
            28_9:             TypeArray 25_2 uint(1)
           32_28:             TypePointer UniformConstant 28_9
59_19(mTD2DImageOutputs):  32_28(ptr) Variable UniformConstant
            25_3:             TypeImage 22_1(float) 2D array nonsampled format:Rgba8
           28_10:             TypeArray 25_3 uint(1)
           32_29:             TypePointer UniformConstant 28_10
59_20(mTD2DArrayImageOutputs):  32_29(ptr) Variable UniformConstant
            25_4:             TypeImage 22_1(float) 3D nonsampled format:Rgba8
           28_11:             TypeArray 25_4 uint(1)
           32_30:             TypePointer UniformConstant 28_11
59_21(mTD3DImageOutputs):  32_30(ptr) Variable UniformConstant
            25_5:             TypeImage 22_1(float) Cube nonsampled format:Rgba8
           28_12:             TypeArray 25_5 uint(1)
           32_31:             TypePointer UniformConstant 28_12
59_22(mTDCubeImageOutputs):  32_31(ptr) Variable UniformConstant
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
 59_23(texcoord):   32_2(ptr) Variable Function
    59_24(param):   32_2(ptr) Variable Function
59_25(worldSpacePos):   32_1(ptr) Variable Function
    59_26(param):   32_2(ptr) Variable Function
59_27(uvUnwrapCoord):   32_2(ptr) Variable Function
    59_28(param):   32_2(ptr) Variable Function
    59_29(param):   32_1(ptr) Variable Function
    59_30(param):   32_2(ptr) Variable Function
59_31(cameraIndex):   32_3(ptr) Variable Function
    59_32(param):   32_1(ptr) Variable Function
            65_1:   32_6(ptr) AccessChain 59_1(uv) 43_1
            61_1: 23_2(fvec3) Load 65_1
                              Store 59_24(param) 61_1
            57_1: 23_2(fvec3) FunctionCall 54_40(TDInstanceTexCoord(vf3;) 59_24(param)
                              Store 59_23(texcoord) 57_1
            61_2: 23_2(fvec3) Load 59_23(texcoord)
            65_2:   32_8(ptr) AccessChain 59_2(oVert) 43_2
                              Store 65_2 61_2
            57_2:   21_1(int) FunctionCall 54_4(TDInstanceID()
            65_3:   32_9(ptr) AccessChain 59_2(oVert) 43_3
                              Store 65_3 57_2
            61_3: 23_2(fvec3) Load 59_3(P)
                              Store 59_26(param) 61_3
            57_3: 23_1(fvec4) FunctionCall 54_48(TDDeform(vf3;) 59_26(param)
                              Store 59_25(worldSpacePos) 57_3
            57_4: 23_2(fvec3) FunctionCall 54_6(TDUVUnwrapCoord()
                              Store 59_28(param) 57_4
            57_5: 23_2(fvec3) FunctionCall 54_40(TDInstanceTexCoord(vf3;) 59_28(param)
                              Store 59_27(uvUnwrapCoord) 57_5
            61_4: 23_1(fvec4) Load 59_25(worldSpacePos)
                              Store 59_29(param) 61_4
            61_5: 23_2(fvec3) Load 59_27(uvUnwrapCoord)
                              Store 59_30(param) 61_5
            57_6: 23_1(fvec4) FunctionCall 54_10(TDWorldToProj(vf4;vf3;) 59_29(param) 59_30(param)
            65_4:  32_11(ptr) AccessChain 59_4 43_1
                              Store 65_4 57_6
            57_7:   21_1(int) FunctionCall 54_5(TDCameraIndex()
                              Store 59_31(cameraIndex) 57_7
            61_6:   21_1(int) Load 59_31(cameraIndex)
            65_5:   32_9(ptr) AccessChain 59_2(oVert) 43_4
                              Store 65_5 61_6
            61_7: 23_1(fvec4) Load 59_25(worldSpacePos)
            79_1: 23_2(fvec3) VectorShuffle 61_7 61_7 0 1 2
            65_6:   32_8(ptr) AccessChain 59_2(oVert) 43_5
                              Store 65_6 79_1
            61_8: 23_1(fvec4) Load 59_5(Cd)
                              Store 59_32(param) 61_8
            57_8: 23_1(fvec4) FunctionCall 54_41(TDInstanceColor(vf4;) 59_32(param)
            65_7:  32_11(ptr) AccessChain 59_2(oVert) 43_1
                              Store 65_7 57_8
                              Return
                              FunctionEnd
54_2(iTDCamToProj(vf4;vf3;i1;b1;): 23_1(fvec4) Function None 33_2
         55_1(v):   32_1(ptr) FunctionParameter
        55_2(uv):   32_2(ptr) FunctionParameter
55_3(cameraIndex):   32_3(ptr) FunctionParameter
55_4(applyPickMod):   32_4(ptr) FunctionParameter
           248_2:             Label
            57_9:  20_1(bool) FunctionCall 54_34(TDInstanceActive()
           168_1:  20_1(bool) LogicalNot 57_9
                              SelectionMerge 248_4 None
                              BranchConditional 168_1 248_3 248_4
           248_3:               Label
                                ReturnValue 44_1
           248_4:             Label
            65_8:  32_14(ptr) AccessChain 59_6 43_1 43_1 43_8
            61_9:        24_2 Load 65_8
           61_10: 23_1(fvec4) Load 55_1(v)
           145_1: 23_1(fvec4) MatrixTimesVector 61_9 61_10
                              Store 55_1(v) 145_1
           61_11: 23_1(fvec4) Load 55_1(v)
                              ReturnValue 61_11
                              FunctionEnd
54_3(iTDWorldToProj(vf4;vf3;i1;b1;): 23_1(fvec4) Function None 33_2
         55_5(v):   32_1(ptr) FunctionParameter
        55_6(uv):   32_2(ptr) FunctionParameter
55_7(cameraIndex):   32_3(ptr) FunctionParameter
55_8(applyPickMod):   32_4(ptr) FunctionParameter
           248_5:             Label
           57_10:  20_1(bool) FunctionCall 54_34(TDInstanceActive()
           168_2:  20_1(bool) LogicalNot 57_10
                              SelectionMerge 248_7 None
                              BranchConditional 168_2 248_6 248_7
           248_6:               Label
                                ReturnValue 44_1
           248_7:             Label
            65_9:  32_14(ptr) AccessChain 59_6 43_1 43_1 43_9
           61_12:        24_2 Load 65_9
           61_13: 23_1(fvec4) Load 55_5(v)
           145_2: 23_1(fvec4) MatrixTimesVector 61_12 61_13
                              Store 55_5(v) 145_2
           61_14: 23_1(fvec4) Load 55_5(v)
                              ReturnValue 61_14
                              FunctionEnd
54_4(TDInstanceID():   21_1(int) Function None 33_3
           248_8:             Label
           61_15:   21_1(int) Load 59_7(gl_InstanceIndex)
           65_10:  32_17(ptr) AccessChain 59_8 43_1
           61_16:   21_1(int) Load 65_10
           128_1:   21_1(int) IAdd 61_15 61_16
                              ReturnValue 128_1
                              FunctionEnd
54_5(TDCameraIndex():   21_1(int) Function None 33_3
           248_9:             Label
                              ReturnValue 43_1
                              FunctionEnd
54_6(TDUVUnwrapCoord(): 23_2(fvec3) Function None 33_4
          248_10:             Label
           65_11:   32_6(ptr) AccessChain 59_1(uv) 43_1
           61_17: 23_2(fvec3) Load 65_11
                              ReturnValue 61_17
                              FunctionEnd
 54_7(TDPickID():   21_1(int) Function None 33_3
          248_11:             Label
                              ReturnValue 43_1
                              FunctionEnd
54_8(iTDConvertPickId(i1;): 22_1(float) Function None 33_5
        55_9(id):   32_3(ptr) FunctionParameter
          248_12:             Label
           61_18:   21_1(int) Load 55_9(id)
           197_1:   21_1(int) BitwiseOr 61_18 43_10
                              Store 55_9(id) 197_1
           61_19:   21_1(int) Load 55_9(id)
           124_1: 22_1(float) Bitcast 61_19
                              ReturnValue 124_1
                              FunctionEnd
54_9(TDWritePickingValues():        19_1 Function None 33_1
          248_13:             Label
                              Return
                              FunctionEnd
54_10(TDWorldToProj(vf4;vf3;): 23_1(fvec4) Function None 33_6
        55_10(v):   32_1(ptr) FunctionParameter
       55_11(uv):   32_2(ptr) FunctionParameter
          248_14:             Label
    59_33(param):   32_1(ptr) Variable Function
    59_34(param):   32_2(ptr) Variable Function
    59_35(param):   32_3(ptr) Variable Function
    59_36(param):   32_4(ptr) Variable Function
           57_11:   21_1(int) FunctionCall 54_5(TDCameraIndex()
           61_20: 23_1(fvec4) Load 55_10(v)
                              Store 59_33(param) 61_20
           61_21: 23_2(fvec3) Load 55_11(uv)
                              Store 59_34(param) 61_21
                              Store 59_35(param) 57_11
                              Store 59_36(param) 41_1
           57_12: 23_1(fvec4) FunctionCall 54_3(iTDWorldToProj(vf4;vf3;i1;b1;) 59_33(param) 59_34(param) 59_35(param) 59_36(param)
                              ReturnValue 57_12
                              FunctionEnd
54_11(TDWorldToProj(vf3;vf3;): 23_1(fvec4) Function None 33_7
        55_12(v):   32_2(ptr) FunctionParameter
       55_13(uv):   32_2(ptr) FunctionParameter
          248_15:             Label
    59_37(param):   32_1(ptr) Variable Function
    59_38(param):   32_2(ptr) Variable Function
           61_22: 23_2(fvec3) Load 55_12(v)
            81_1: 22_1(float) CompositeExtract 61_22 0
            81_2: 22_1(float) CompositeExtract 61_22 1
            81_3: 22_1(float) CompositeExtract 61_22 2
            80_1: 23_1(fvec4) CompositeConstruct 81_1 81_2 81_3 43_11
                              Store 59_37(param) 80_1
           61_23: 23_2(fvec3) Load 55_13(uv)
                              Store 59_38(param) 61_23
           57_13: 23_1(fvec4) FunctionCall 54_10(TDWorldToProj(vf4;vf3;) 59_37(param) 59_38(param)
                              ReturnValue 57_13
                              FunctionEnd
54_12(TDWorldToProj(vf4;): 23_1(fvec4) Function None 33_8
        55_14(v):   32_1(ptr) FunctionParameter
          248_16:             Label
    59_39(param):   32_1(ptr) Variable Function
    59_40(param):   32_2(ptr) Variable Function
           61_24: 23_1(fvec4) Load 55_14(v)
                              Store 59_39(param) 61_24
                              Store 59_40(param) 44_2
           57_14: 23_1(fvec4) FunctionCall 54_10(TDWorldToProj(vf4;vf3;) 59_39(param) 59_40(param)
                              ReturnValue 57_14
                              FunctionEnd
54_13(TDWorldToProj(vf3;): 23_1(fvec4) Function None 33_9
        55_15(v):   32_2(ptr) FunctionParameter
          248_17:             Label
    59_41(param):   32_1(ptr) Variable Function
           61_25: 23_2(fvec3) Load 55_15(v)
            81_4: 22_1(float) CompositeExtract 61_25 0
            81_5: 22_1(float) CompositeExtract 61_25 1
            81_6: 22_1(float) CompositeExtract 61_25 2
            80_2: 23_1(fvec4) CompositeConstruct 81_4 81_5 81_6 43_11
                              Store 59_41(param) 80_2
           57_15: 23_1(fvec4) FunctionCall 54_12(TDWorldToProj(vf4;) 59_41(param)
                              ReturnValue 57_15
                              FunctionEnd
54_14(TDPointColor(): 23_1(fvec4) Function None 33_10
          248_18:             Label
           61_26: 23_1(fvec4) Load 59_5(Cd)
                              ReturnValue 61_26
                              FunctionEnd
54_15(TDInstanceTexCoord(i1;vf3;): 23_2(fvec3) Function None 33_11
    55_16(index):   32_3(ptr) FunctionParameter
        55_17(t):   32_2(ptr) FunctionParameter
          248_19:             Label
    59_42(coord):   32_3(ptr) Variable Function
     59_43(samp):   32_1(ptr) Variable Function
        59_44(v):   32_2(ptr) Variable Function
           61_27:   21_1(int) Load 55_16(index)
                              Store 59_42(coord) 61_27
           61_28:        27_1 Load 59_9(sTDInstanceTexCoord)
           61_29:   21_1(int) Load 59_42(coord)
           100_1:        25_1 Image 61_28
            95_1: 23_1(fvec4) ImageFetch 100_1 61_29
                              Store 59_43(samp) 95_1
           65_12:  32_19(ptr) AccessChain 55_17(t) uint(0)
           61_30: 22_1(float) Load 65_12
           65_13:  32_19(ptr) AccessChain 59_44(v) uint(0)
                              Store 65_13 61_30
           65_14:  32_19(ptr) AccessChain 55_17(t) uint(1)
           61_31: 22_1(float) Load 65_14
           65_15:  32_19(ptr) AccessChain 59_44(v) uint(1)
                              Store 65_15 61_31
           65_16:  32_19(ptr) AccessChain 59_43(samp) uint(0)
           61_32: 22_1(float) Load 65_16
           65_17:  32_19(ptr) AccessChain 59_44(v) uint(2)
                              Store 65_17 61_32
           61_33: 23_2(fvec3) Load 59_44(v)
                              Store 55_17(t) 61_33
           61_34: 23_2(fvec3) Load 55_17(t)
                              ReturnValue 61_34
                              FunctionEnd
54_16(TDInstanceActive(i1;):  20_1(bool) Function None 33_12
    55_18(index):   32_3(ptr) FunctionParameter
          248_20:             Label
    59_45(coord):   32_3(ptr) Variable Function
     59_46(samp):   32_1(ptr) Variable Function
        59_47(v):  32_19(ptr) Variable Function
           65_18:  32_17(ptr) AccessChain 59_8 43_1
           61_35:   21_1(int) Load 65_18
           61_36:   21_1(int) Load 55_18(index)
           130_1:   21_1(int) ISub 61_36 61_35
                              Store 55_18(index) 130_1
           61_37:   21_1(int) Load 55_18(index)
                              Store 59_45(coord) 61_37
           61_38:        27_1 Load 59_10(sTDInstanceT)
           61_39:   21_1(int) Load 59_45(coord)
           100_2:        25_1 Image 61_38
            95_2: 23_1(fvec4) ImageFetch 100_2 61_39
                              Store 59_46(samp) 95_2
           65_19:  32_19(ptr) AccessChain 59_46(samp) uint(0)
           61_40: 22_1(float) Load 65_19
                              Store 59_47(v) 61_40
           61_41: 22_1(float) Load 59_47(v)
           183_1:  20_1(bool) FUnordNotEqual 61_41 43_7
                              ReturnValue 183_1
                              FunctionEnd
54_17(iTDInstanceTranslate(i1;b1;): 23_2(fvec3) Function None 33_13
    55_19(index):   32_3(ptr) FunctionParameter
55_20(instanceActive):   32_4(ptr) FunctionParameter
          248_21:             Label
59_48(origIndex):   32_3(ptr) Variable Function
    59_49(coord):   32_3(ptr) Variable Function
     59_50(samp):   32_1(ptr) Variable Function
        59_51(v):   32_2(ptr) Variable Function
           61_42:   21_1(int) Load 55_19(index)
                              Store 59_48(origIndex) 61_42
           65_20:  32_17(ptr) AccessChain 59_8 43_1
           61_43:   21_1(int) Load 65_20
           61_44:   21_1(int) Load 55_19(index)
           130_2:   21_1(int) ISub 61_44 61_43
                              Store 55_19(index) 130_2
           61_45:   21_1(int) Load 55_19(index)
                              Store 59_49(coord) 61_45
           61_46:        27_1 Load 59_10(sTDInstanceT)
           61_47:   21_1(int) Load 59_49(coord)
           100_3:        25_1 Image 61_46
            95_3: 23_1(fvec4) ImageFetch 100_3 61_47
                              Store 59_50(samp) 95_3
           65_21:  32_19(ptr) AccessChain 59_50(samp) uint(1)
           61_48: 22_1(float) Load 65_21
           65_22:  32_19(ptr) AccessChain 59_51(v) uint(0)
                              Store 65_22 61_48
           65_23:  32_19(ptr) AccessChain 59_50(samp) uint(2)
           61_49: 22_1(float) Load 65_23
           65_24:  32_19(ptr) AccessChain 59_51(v) uint(1)
                              Store 65_24 61_49
           65_25:  32_19(ptr) AccessChain 59_50(samp) uint(3)
           61_50: 22_1(float) Load 65_25
           65_26:  32_19(ptr) AccessChain 59_51(v) uint(2)
                              Store 65_26 61_50
           65_27:  32_19(ptr) AccessChain 59_50(samp) uint(0)
           61_51: 22_1(float) Load 65_27
           183_2:  20_1(bool) FUnordNotEqual 61_51 43_7
                              Store 55_20(instanceActive) 183_2
           61_52: 23_2(fvec3) Load 59_51(v)
                              ReturnValue 61_52
                              FunctionEnd
54_18(TDInstanceTranslate(i1;): 23_2(fvec3) Function None 33_14
    55_21(index):   32_3(ptr) FunctionParameter
          248_22:             Label
    59_52(coord):   32_3(ptr) Variable Function
     59_53(samp):   32_1(ptr) Variable Function
        59_54(v):   32_2(ptr) Variable Function
           65_28:  32_17(ptr) AccessChain 59_8 43_1
           61_53:   21_1(int) Load 65_28
           61_54:   21_1(int) Load 55_21(index)
           130_3:   21_1(int) ISub 61_54 61_53
                              Store 55_21(index) 130_3
           61_55:   21_1(int) Load 55_21(index)
                              Store 59_52(coord) 61_55
           61_56:        27_1 Load 59_10(sTDInstanceT)
           61_57:   21_1(int) Load 59_52(coord)
           100_4:        25_1 Image 61_56
            95_4: 23_1(fvec4) ImageFetch 100_4 61_57
                              Store 59_53(samp) 95_4
           65_29:  32_19(ptr) AccessChain 59_53(samp) uint(1)
           61_58: 22_1(float) Load 65_29
           65_30:  32_19(ptr) AccessChain 59_54(v) uint(0)
                              Store 65_30 61_58
           65_31:  32_19(ptr) AccessChain 59_53(samp) uint(2)
           61_59: 22_1(float) Load 65_31
           65_32:  32_19(ptr) AccessChain 59_54(v) uint(1)
                              Store 65_32 61_59
           65_33:  32_19(ptr) AccessChain 59_53(samp) uint(3)
           61_60: 22_1(float) Load 65_33
           65_34:  32_19(ptr) AccessChain 59_54(v) uint(2)
                              Store 65_34 61_60
           61_61: 23_2(fvec3) Load 59_54(v)
                              ReturnValue 61_61
                              FunctionEnd
54_19(TDInstanceRotateMat(i1;):        24_1 Function None 33_15
    55_22(index):   32_3(ptr) FunctionParameter
          248_23:             Label
        59_55(v):   32_2(ptr) Variable Function
        59_56(m):  32_20(ptr) Variable Function
           65_35:  32_17(ptr) AccessChain 59_8 43_1
           61_62:   21_1(int) Load 65_35
           61_63:   21_1(int) Load 55_22(index)
           130_4:   21_1(int) ISub 61_63 61_62
                              Store 55_22(index) 130_4
                              Store 59_55(v) 44_2
                              Store 59_56(m) 44_6
           61_64:        24_1 Load 59_56(m)
                              ReturnValue 61_64
                              FunctionEnd
54_20(TDInstanceScale(i1;): 23_2(fvec3) Function None 33_14
    55_23(index):   32_3(ptr) FunctionParameter
          248_24:             Label
        59_57(v):   32_2(ptr) Variable Function
           65_36:  32_17(ptr) AccessChain 59_8 43_1
           61_65:   21_1(int) Load 65_36
           61_66:   21_1(int) Load 55_23(index)
           130_5:   21_1(int) ISub 61_66 61_65
                              Store 55_23(index) 130_5
                              Store 59_57(v) 44_7
           61_67: 23_2(fvec3) Load 59_57(v)
                              ReturnValue 61_67
                              FunctionEnd
54_21(TDInstancePivot(i1;): 23_2(fvec3) Function None 33_14
    55_24(index):   32_3(ptr) FunctionParameter
          248_25:             Label
        59_58(v):   32_2(ptr) Variable Function
           65_37:  32_17(ptr) AccessChain 59_8 43_1
           61_68:   21_1(int) Load 65_37
           61_69:   21_1(int) Load 55_24(index)
           130_6:   21_1(int) ISub 61_69 61_68
                              Store 55_24(index) 130_6
                              Store 59_58(v) 44_2
           61_70: 23_2(fvec3) Load 59_58(v)
                              ReturnValue 61_70
                              FunctionEnd
54_22(TDInstanceRotTo(i1;): 23_2(fvec3) Function None 33_14
    55_25(index):   32_3(ptr) FunctionParameter
          248_26:             Label
        59_59(v):   32_2(ptr) Variable Function
           65_38:  32_17(ptr) AccessChain 59_8 43_1
           61_71:   21_1(int) Load 65_38
           61_72:   21_1(int) Load 55_25(index)
           130_7:   21_1(int) ISub 61_72 61_71
                              Store 55_25(index) 130_7
                              Store 59_59(v) 44_5
           61_73: 23_2(fvec3) Load 59_59(v)
                              ReturnValue 61_73
                              FunctionEnd
54_23(TDInstanceRotUp(i1;): 23_2(fvec3) Function None 33_14
    55_26(index):   32_3(ptr) FunctionParameter
          248_27:             Label
        59_60(v):   32_2(ptr) Variable Function
           65_39:  32_17(ptr) AccessChain 59_8 43_1
           61_74:   21_1(int) Load 65_39
           61_75:   21_1(int) Load 55_26(index)
           130_8:   21_1(int) ISub 61_75 61_74
                              Store 55_26(index) 130_8
                              Store 59_60(v) 44_4
           61_76: 23_2(fvec3) Load 59_60(v)
                              ReturnValue 61_76
                              FunctionEnd
54_24(TDInstanceMat(i1;):        24_2 Function None 33_16
       55_27(id):   32_3(ptr) FunctionParameter
          248_28:             Label
59_61(instanceActive):   32_4(ptr) Variable Function
        59_62(t):   32_2(ptr) Variable Function
    59_63(param):   32_3(ptr) Variable Function
    59_64(param):   32_4(ptr) Variable Function
        59_65(m):  32_21(ptr) Variable Function
       59_66(tt):   32_2(ptr) Variable Function
                              Store 59_61(instanceActive) 41_1
           61_77:   21_1(int) Load 55_27(id)
                              Store 59_63(param) 61_77
           57_16: 23_2(fvec3) FunctionCall 54_17(iTDInstanceTranslate(i1;b1;) 59_63(param) 59_64(param)
           61_78:  20_1(bool) Load 59_64(param)
                              Store 59_61(instanceActive) 61_78
                              Store 59_62(t) 57_16
           61_79:  20_1(bool) Load 59_61(instanceActive)
           168_3:  20_1(bool) LogicalNot 61_79
                              SelectionMerge 248_30 None
                              BranchConditional 168_3 248_29 248_30
          248_29:               Label
                                ReturnValue 44_9
          248_30:             Label
                              Store 59_65(m) 44_14
           61_80: 23_2(fvec3) Load 59_62(t)
                              Store 59_66(tt) 61_80
           65_40:  32_19(ptr) AccessChain 59_65(m) 43_1 uint(0)
           61_81: 22_1(float) Load 65_40
           65_41:  32_19(ptr) AccessChain 59_66(tt) uint(0)
           61_82: 22_1(float) Load 65_41
           133_1: 22_1(float) FMul 61_81 61_82
           65_42:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(0)
           61_83: 22_1(float) Load 65_42
           129_1: 22_1(float) FAdd 61_83 133_1
           65_43:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(0)
                              Store 65_43 129_1
           65_44:  32_19(ptr) AccessChain 59_65(m) 43_1 uint(1)
           61_84: 22_1(float) Load 65_44
           65_45:  32_19(ptr) AccessChain 59_66(tt) uint(0)
           61_85: 22_1(float) Load 65_45
           133_2: 22_1(float) FMul 61_84 61_85
           65_46:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(1)
           61_86: 22_1(float) Load 65_46
           129_2: 22_1(float) FAdd 61_86 133_2
           65_47:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(1)
                              Store 65_47 129_2
           65_48:  32_19(ptr) AccessChain 59_65(m) 43_1 uint(2)
           61_87: 22_1(float) Load 65_48
           65_49:  32_19(ptr) AccessChain 59_66(tt) uint(0)
           61_88: 22_1(float) Load 65_49
           133_3: 22_1(float) FMul 61_87 61_88
           65_50:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(2)
           61_89: 22_1(float) Load 65_50
           129_3: 22_1(float) FAdd 61_89 133_3
           65_51:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(2)
                              Store 65_51 129_3
           65_52:  32_19(ptr) AccessChain 59_65(m) 43_1 uint(3)
           61_90: 22_1(float) Load 65_52
           65_53:  32_19(ptr) AccessChain 59_66(tt) uint(0)
           61_91: 22_1(float) Load 65_53
           133_4: 22_1(float) FMul 61_90 61_91
           65_54:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(3)
           61_92: 22_1(float) Load 65_54
           129_4: 22_1(float) FAdd 61_92 133_4
           65_55:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(3)
                              Store 65_55 129_4
           65_56:  32_19(ptr) AccessChain 59_65(m) 43_5 uint(0)
           61_93: 22_1(float) Load 65_56
           65_57:  32_19(ptr) AccessChain 59_66(tt) uint(1)
           61_94: 22_1(float) Load 65_57
           133_5: 22_1(float) FMul 61_93 61_94
           65_58:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(0)
           61_95: 22_1(float) Load 65_58
           129_5: 22_1(float) FAdd 61_95 133_5
           65_59:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(0)
                              Store 65_59 129_5
           65_60:  32_19(ptr) AccessChain 59_65(m) 43_5 uint(1)
           61_96: 22_1(float) Load 65_60
           65_61:  32_19(ptr) AccessChain 59_66(tt) uint(1)
           61_97: 22_1(float) Load 65_61
           133_6: 22_1(float) FMul 61_96 61_97
           65_62:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(1)
           61_98: 22_1(float) Load 65_62
           129_6: 22_1(float) FAdd 61_98 133_6
           65_63:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(1)
                              Store 65_63 129_6
           65_64:  32_19(ptr) AccessChain 59_65(m) 43_5 uint(2)
           61_99: 22_1(float) Load 65_64
           65_65:  32_19(ptr) AccessChain 59_66(tt) uint(1)
          61_100: 22_1(float) Load 65_65
           133_7: 22_1(float) FMul 61_99 61_100
           65_66:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(2)
          61_101: 22_1(float) Load 65_66
           129_7: 22_1(float) FAdd 61_101 133_7
           65_67:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(2)
                              Store 65_67 129_7
           65_68:  32_19(ptr) AccessChain 59_65(m) 43_5 uint(3)
          61_102: 22_1(float) Load 65_68
           65_69:  32_19(ptr) AccessChain 59_66(tt) uint(1)
          61_103: 22_1(float) Load 65_69
           133_8: 22_1(float) FMul 61_102 61_103
           65_70:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(3)
          61_104: 22_1(float) Load 65_70
           129_8: 22_1(float) FAdd 61_104 133_8
           65_71:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(3)
                              Store 65_71 129_8
           65_72:  32_19(ptr) AccessChain 59_65(m) 43_2 uint(0)
          61_105: 22_1(float) Load 65_72
           65_73:  32_19(ptr) AccessChain 59_66(tt) uint(2)
          61_106: 22_1(float) Load 65_73
           133_9: 22_1(float) FMul 61_105 61_106
           65_74:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(0)
          61_107: 22_1(float) Load 65_74
           129_9: 22_1(float) FAdd 61_107 133_9
           65_75:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(0)
                              Store 65_75 129_9
           65_76:  32_19(ptr) AccessChain 59_65(m) 43_2 uint(1)
          61_108: 22_1(float) Load 65_76
           65_77:  32_19(ptr) AccessChain 59_66(tt) uint(2)
          61_109: 22_1(float) Load 65_77
          133_10: 22_1(float) FMul 61_108 61_109
           65_78:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(1)
          61_110: 22_1(float) Load 65_78
          129_10: 22_1(float) FAdd 61_110 133_10
           65_79:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(1)
                              Store 65_79 129_10
           65_80:  32_19(ptr) AccessChain 59_65(m) 43_2 uint(2)
          61_111: 22_1(float) Load 65_80
           65_81:  32_19(ptr) AccessChain 59_66(tt) uint(2)
          61_112: 22_1(float) Load 65_81
          133_11: 22_1(float) FMul 61_111 61_112
           65_82:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(2)
          61_113: 22_1(float) Load 65_82
          129_11: 22_1(float) FAdd 61_113 133_11
           65_83:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(2)
                              Store 65_83 129_11
           65_84:  32_19(ptr) AccessChain 59_65(m) 43_2 uint(3)
          61_114: 22_1(float) Load 65_84
           65_85:  32_19(ptr) AccessChain 59_66(tt) uint(2)
          61_115: 22_1(float) Load 65_85
          133_12: 22_1(float) FMul 61_114 61_115
           65_86:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(3)
          61_116: 22_1(float) Load 65_86
          129_12: 22_1(float) FAdd 61_116 133_12
           65_87:  32_19(ptr) AccessChain 59_65(m) 43_4 uint(3)
                              Store 65_87 129_12
          61_117:        24_2 Load 59_65(m)
                              ReturnValue 61_117
                              FunctionEnd
54_25(TDInstanceMat3(i1;):        24_1 Function None 33_15
       55_28(id):   32_3(ptr) FunctionParameter
          248_31:             Label
        59_67(m):  32_20(ptr) Variable Function
                              Store 59_67(m) 44_6
          61_118:        24_1 Load 59_67(m)
                              ReturnValue 61_118
                              FunctionEnd
54_26(TDInstanceMat3ForNorm(i1;):        24_1 Function None 33_15
       55_29(id):   32_3(ptr) FunctionParameter
          248_32:             Label
        59_68(m):  32_20(ptr) Variable Function
    59_69(param):   32_3(ptr) Variable Function
          61_119:   21_1(int) Load 55_29(id)
                              Store 59_69(param) 61_119
           57_17:        24_1 FunctionCall 54_25(TDInstanceMat3(i1;) 59_69(param)
                              Store 59_68(m) 57_17
          61_120:        24_1 Load 59_68(m)
                              ReturnValue 61_120
                              FunctionEnd
54_27(TDInstanceColor(i1;vf4;): 23_1(fvec4) Function None 33_17
    55_30(index):   32_3(ptr) FunctionParameter
 55_31(curColor):   32_1(ptr) FunctionParameter
          248_33:             Label
    59_70(coord):   32_3(ptr) Variable Function
     59_71(samp):   32_1(ptr) Variable Function
        59_72(v):   32_1(ptr) Variable Function
           65_88:  32_17(ptr) AccessChain 59_8 43_1
          61_121:   21_1(int) Load 65_88
          61_122:   21_1(int) Load 55_30(index)
           130_9:   21_1(int) ISub 61_122 61_121
                              Store 55_30(index) 130_9
          61_123:   21_1(int) Load 55_30(index)
                              Store 59_70(coord) 61_123
          61_124:        27_1 Load 59_11(sTDInstanceColor)
          61_125:   21_1(int) Load 59_70(coord)
           100_5:        25_1 Image 61_124
            95_5: 23_1(fvec4) ImageFetch 100_5 61_125
                              Store 59_71(samp) 95_5
           65_89:  32_19(ptr) AccessChain 59_71(samp) uint(0)
          61_126: 22_1(float) Load 65_89
           65_90:  32_19(ptr) AccessChain 59_72(v) uint(0)
                              Store 65_90 61_126
           65_91:  32_19(ptr) AccessChain 59_71(samp) uint(1)
          61_127: 22_1(float) Load 65_91
           65_92:  32_19(ptr) AccessChain 59_72(v) uint(1)
                              Store 65_92 61_127
           65_93:  32_19(ptr) AccessChain 59_71(samp) uint(2)
          61_128: 22_1(float) Load 65_93
           65_94:  32_19(ptr) AccessChain 59_72(v) uint(2)
                              Store 65_94 61_128
           65_95:  32_19(ptr) AccessChain 59_72(v) uint(3)
                              Store 65_95 43_11
           65_96:  32_19(ptr) AccessChain 59_72(v) uint(0)
          61_129: 22_1(float) Load 65_96
           65_97:  32_19(ptr) AccessChain 55_31(curColor) uint(0)
                              Store 65_97 61_129
           65_98:  32_19(ptr) AccessChain 59_72(v) uint(1)
          61_130: 22_1(float) Load 65_98
           65_99:  32_19(ptr) AccessChain 55_31(curColor) uint(1)
                              Store 65_99 61_130
          65_100:  32_19(ptr) AccessChain 59_72(v) uint(2)
          61_131: 22_1(float) Load 65_100
          65_101:  32_19(ptr) AccessChain 55_31(curColor) uint(2)
                              Store 65_101 61_131
          61_132: 23_1(fvec4) Load 55_31(curColor)
                              ReturnValue 61_132
                              FunctionEnd
54_28(TDInstanceDeform(i1;vf4;): 23_1(fvec4) Function None 33_17
       55_32(id):   32_3(ptr) FunctionParameter
      55_33(pos):   32_1(ptr) FunctionParameter
          248_34:             Label
    59_73(param):   32_3(ptr) Variable Function
          61_133:   21_1(int) Load 55_32(id)
                              Store 59_73(param) 61_133
           57_18:        24_2 FunctionCall 54_24(TDInstanceMat(i1;) 59_73(param)
          61_134: 23_1(fvec4) Load 55_33(pos)
           145_3: 23_1(fvec4) MatrixTimesVector 57_18 61_134
                              Store 55_33(pos) 145_3
           57_19:   21_1(int) FunctionCall 54_5(TDCameraIndex()
          65_102:  32_14(ptr) AccessChain 59_6 43_1 57_19 43_1
          61_135:        24_2 Load 65_102
          61_136: 23_1(fvec4) Load 55_33(pos)
           145_4: 23_1(fvec4) MatrixTimesVector 61_135 61_136
                              ReturnValue 145_4
                              FunctionEnd
54_29(TDInstanceDeformVec(i1;vf3;): 23_2(fvec3) Function None 33_11
       55_34(id):   32_3(ptr) FunctionParameter
      55_35(vec):   32_2(ptr) FunctionParameter
          248_35:             Label
        59_74(m):  32_20(ptr) Variable Function
    59_75(param):   32_3(ptr) Variable Function
          61_137:   21_1(int) Load 55_34(id)
                              Store 59_75(param) 61_137
           57_20:        24_1 FunctionCall 54_25(TDInstanceMat3(i1;) 59_75(param)
                              Store 59_74(m) 57_20
           57_21:   21_1(int) FunctionCall 54_5(TDCameraIndex()
          65_103:  32_14(ptr) AccessChain 59_6 43_1 57_21 43_1
          61_138:        24_2 Load 65_103
            81_7: 23_1(fvec4) CompositeExtract 61_138 0
            79_2: 23_2(fvec3) VectorShuffle 81_7 81_7 0 1 2
            81_8: 23_1(fvec4) CompositeExtract 61_138 1
            79_3: 23_2(fvec3) VectorShuffle 81_8 81_8 0 1 2
            81_9: 23_1(fvec4) CompositeExtract 61_138 2
            79_4: 23_2(fvec3) VectorShuffle 81_9 81_9 0 1 2
            80_3:        24_1 CompositeConstruct 79_2 79_3 79_4
          61_139:        24_1 Load 59_74(m)
          61_140: 23_2(fvec3) Load 55_35(vec)
           145_5: 23_2(fvec3) MatrixTimesVector 61_139 61_140
           145_6: 23_2(fvec3) MatrixTimesVector 80_3 145_5
                              ReturnValue 145_6
                              FunctionEnd
54_30(TDInstanceDeformNorm(i1;vf3;): 23_2(fvec3) Function None 33_11
       55_36(id):   32_3(ptr) FunctionParameter
      55_37(vec):   32_2(ptr) FunctionParameter
          248_36:             Label
        59_76(m):  32_20(ptr) Variable Function
    59_77(param):   32_3(ptr) Variable Function
          61_141:   21_1(int) Load 55_36(id)
                              Store 59_77(param) 61_141
           57_22:        24_1 FunctionCall 54_26(TDInstanceMat3ForNorm(i1;) 59_77(param)
                              Store 59_76(m) 57_22
           57_23:   21_1(int) FunctionCall 54_5(TDCameraIndex()
          65_104:  32_22(ptr) AccessChain 59_6 43_1 57_23 43_12
          61_142:        24_1 Load 65_104
           81_10: 23_2(fvec3) CompositeExtract 61_142 0
           81_11: 23_2(fvec3) CompositeExtract 61_142 1
           81_12: 23_2(fvec3) CompositeExtract 61_142 2
            80_4:        24_1 CompositeConstruct 81_10 81_11 81_12
          61_143:        24_1 Load 59_76(m)
          61_144: 23_2(fvec3) Load 55_37(vec)
           145_7: 23_2(fvec3) MatrixTimesVector 61_143 61_144
           145_8: 23_2(fvec3) MatrixTimesVector 80_4 145_7
                              ReturnValue 145_8
                              FunctionEnd
54_31(TDInstanceDeform(vf4;): 23_1(fvec4) Function None 33_8
      55_38(pos):   32_1(ptr) FunctionParameter
          248_37:             Label
    59_78(param):   32_3(ptr) Variable Function
    59_79(param):   32_1(ptr) Variable Function
           57_24:   21_1(int) FunctionCall 54_4(TDInstanceID()
                              Store 59_78(param) 57_24
          61_145: 23_1(fvec4) Load 55_38(pos)
                              Store 59_79(param) 61_145
           57_25: 23_1(fvec4) FunctionCall 54_28(TDInstanceDeform(i1;vf4;) 59_78(param) 59_79(param)
                              ReturnValue 57_25
                              FunctionEnd
54_32(TDInstanceDeformVec(vf3;): 23_2(fvec3) Function None 33_18
      55_39(vec):   32_2(ptr) FunctionParameter
          248_38:             Label
    59_80(param):   32_3(ptr) Variable Function
    59_81(param):   32_2(ptr) Variable Function
           57_26:   21_1(int) FunctionCall 54_4(TDInstanceID()
                              Store 59_80(param) 57_26
          61_146: 23_2(fvec3) Load 55_39(vec)
                              Store 59_81(param) 61_146
           57_27: 23_2(fvec3) FunctionCall 54_29(TDInstanceDeformVec(i1;vf3;) 59_80(param) 59_81(param)
                              ReturnValue 57_27
                              FunctionEnd
54_33(TDInstanceDeformNorm(vf3;): 23_2(fvec3) Function None 33_18
      55_40(vec):   32_2(ptr) FunctionParameter
          248_39:             Label
    59_82(param):   32_3(ptr) Variable Function
    59_83(param):   32_2(ptr) Variable Function
           57_28:   21_1(int) FunctionCall 54_4(TDInstanceID()
                              Store 59_82(param) 57_28
          61_147: 23_2(fvec3) Load 55_40(vec)
                              Store 59_83(param) 61_147
           57_29: 23_2(fvec3) FunctionCall 54_30(TDInstanceDeformNorm(i1;vf3;) 59_82(param) 59_83(param)
                              ReturnValue 57_29
                              FunctionEnd
54_34(TDInstanceActive():  20_1(bool) Function None 33_19
          248_40:             Label
    59_84(param):   32_3(ptr) Variable Function
           57_30:   21_1(int) FunctionCall 54_4(TDInstanceID()
                              Store 59_84(param) 57_30
           57_31:  20_1(bool) FunctionCall 54_16(TDInstanceActive(i1;) 59_84(param)
                              ReturnValue 57_31
                              FunctionEnd
54_35(TDInstanceTranslate(): 23_2(fvec3) Function None 33_4
          248_41:             Label
    59_85(param):   32_3(ptr) Variable Function
           57_32:   21_1(int) FunctionCall 54_4(TDInstanceID()
                              Store 59_85(param) 57_32
           57_33: 23_2(fvec3) FunctionCall 54_18(TDInstanceTranslate(i1;) 59_85(param)
                              ReturnValue 57_33
                              FunctionEnd
54_36(TDInstanceRotateMat():        24_1 Function None 33_20
          248_42:             Label
    59_86(param):   32_3(ptr) Variable Function
           57_34:   21_1(int) FunctionCall 54_4(TDInstanceID()
                              Store 59_86(param) 57_34
           57_35:        24_1 FunctionCall 54_19(TDInstanceRotateMat(i1;) 59_86(param)
                              ReturnValue 57_35
                              FunctionEnd
54_37(TDInstanceScale(): 23_2(fvec3) Function None 33_4
          248_43:             Label
    59_87(param):   32_3(ptr) Variable Function
           57_36:   21_1(int) FunctionCall 54_4(TDInstanceID()
                              Store 59_87(param) 57_36
           57_37: 23_2(fvec3) FunctionCall 54_20(TDInstanceScale(i1;) 59_87(param)
                              ReturnValue 57_37
                              FunctionEnd
54_38(TDInstanceMat():        24_2 Function None 33_21
          248_44:             Label
    59_88(param):   32_3(ptr) Variable Function
           57_38:   21_1(int) FunctionCall 54_4(TDInstanceID()
                              Store 59_88(param) 57_38
           57_39:        24_2 FunctionCall 54_24(TDInstanceMat(i1;) 59_88(param)
                              ReturnValue 57_39
                              FunctionEnd
54_39(TDInstanceMat3():        24_1 Function None 33_20
          248_45:             Label
    59_89(param):   32_3(ptr) Variable Function
           57_40:   21_1(int) FunctionCall 54_4(TDInstanceID()
                              Store 59_89(param) 57_40
           57_41:        24_1 FunctionCall 54_25(TDInstanceMat3(i1;) 59_89(param)
                              ReturnValue 57_41
                              FunctionEnd
54_40(TDInstanceTexCoord(vf3;): 23_2(fvec3) Function None 33_18
        55_41(t):   32_2(ptr) FunctionParameter
          248_46:             Label
    59_90(param):   32_3(ptr) Variable Function
    59_91(param):   32_2(ptr) Variable Function
           57_42:   21_1(int) FunctionCall 54_4(TDInstanceID()
                              Store 59_90(param) 57_42
          61_148: 23_2(fvec3) Load 55_41(t)
                              Store 59_91(param) 61_148
           57_43: 23_2(fvec3) FunctionCall 54_15(TDInstanceTexCoord(i1;vf3;) 59_90(param) 59_91(param)
                              ReturnValue 57_43
                              FunctionEnd
54_41(TDInstanceColor(vf4;): 23_1(fvec4) Function None 33_8
 55_42(curColor):   32_1(ptr) FunctionParameter
          248_47:             Label
    59_92(param):   32_3(ptr) Variable Function
    59_93(param):   32_1(ptr) Variable Function
           57_44:   21_1(int) FunctionCall 54_4(TDInstanceID()
                              Store 59_92(param) 57_44
          61_149: 23_1(fvec4) Load 55_42(curColor)
                              Store 59_93(param) 61_149
           57_45: 23_1(fvec4) FunctionCall 54_27(TDInstanceColor(i1;vf4;) 59_92(param) 59_93(param)
                              ReturnValue 57_45
                              FunctionEnd
54_42(TDSkinnedDeform(vf4;): 23_1(fvec4) Function None 33_8
      55_43(pos):   32_1(ptr) FunctionParameter
          248_48:             Label
          61_150: 23_1(fvec4) Load 55_43(pos)
                              ReturnValue 61_150
                              FunctionEnd
54_43(TDSkinnedDeformVec(vf3;): 23_2(fvec3) Function None 33_18
      55_44(vec):   32_2(ptr) FunctionParameter
          248_49:             Label
          61_151: 23_2(fvec3) Load 55_44(vec)
                              ReturnValue 61_151
                              FunctionEnd
54_44(TDFastDeformTangent(vf3;vf4;vf3;): 23_2(fvec3) Function None 33_22
  55_45(oldNorm):   32_2(ptr) FunctionParameter
55_46(oldTangent):   32_1(ptr) FunctionParameter
55_47(deformedNorm):   32_2(ptr) FunctionParameter
          248_50:             Label
          61_152: 23_1(fvec4) Load 55_46(oldTangent)
            79_5: 23_2(fvec3) VectorShuffle 61_152 61_152 0 1 2
                              ReturnValue 79_5
                              FunctionEnd
54_45(TDBoneMat(i1;):        24_2 Function None 33_16
    55_48(index):   32_3(ptr) FunctionParameter
          248_51:             Label
                              ReturnValue 44_14
                              FunctionEnd
54_46(TDDeform(vf4;): 23_1(fvec4) Function None 33_8
      55_49(pos):   32_1(ptr) FunctionParameter
          248_52:             Label
    59_94(param):   32_1(ptr) Variable Function
    59_95(param):   32_1(ptr) Variable Function
          61_153: 23_1(fvec4) Load 55_49(pos)
                              Store 59_94(param) 61_153
           57_46: 23_1(fvec4) FunctionCall 54_42(TDSkinnedDeform(vf4;) 59_94(param)
                              Store 55_49(pos) 57_46
          61_154: 23_1(fvec4) Load 55_49(pos)
                              Store 59_95(param) 61_154
           57_47: 23_1(fvec4) FunctionCall 54_31(TDInstanceDeform(vf4;) 59_95(param)
                              Store 55_49(pos) 57_47
          61_155: 23_1(fvec4) Load 55_49(pos)
                              ReturnValue 61_155
                              FunctionEnd
54_47(TDDeform(i1;vf3;): 23_1(fvec4) Function None 33_23
55_50(instanceID):   32_3(ptr) FunctionParameter
        55_51(p):   32_2(ptr) FunctionParameter
          248_53:             Label
      59_96(pos):   32_1(ptr) Variable Function
    59_97(param):   32_1(ptr) Variable Function
    59_98(param):   32_3(ptr) Variable Function
    59_99(param):   32_1(ptr) Variable Function
          61_156: 23_2(fvec3) Load 55_51(p)
           81_13: 22_1(float) CompositeExtract 61_156 0
           81_14: 22_1(float) CompositeExtract 61_156 1
           81_15: 22_1(float) CompositeExtract 61_156 2
            80_5: 23_1(fvec4) CompositeConstruct 81_13 81_14 81_15 43_11
                              Store 59_96(pos) 80_5
          61_157: 23_1(fvec4) Load 59_96(pos)
                              Store 59_97(param) 61_157
           57_48: 23_1(fvec4) FunctionCall 54_42(TDSkinnedDeform(vf4;) 59_97(param)
                              Store 59_96(pos) 57_48
          61_158:   21_1(int) Load 55_50(instanceID)
                              Store 59_98(param) 61_158
          61_159: 23_1(fvec4) Load 59_96(pos)
                              Store 59_99(param) 61_159
           57_49: 23_1(fvec4) FunctionCall 54_28(TDInstanceDeform(i1;vf4;) 59_98(param) 59_99(param)
                              Store 59_96(pos) 57_49
          61_160: 23_1(fvec4) Load 59_96(pos)
                              ReturnValue 61_160
                              FunctionEnd
54_48(TDDeform(vf3;): 23_1(fvec4) Function None 33_9
      55_52(pos):   32_2(ptr) FunctionParameter
          248_54:             Label
   59_100(param):   32_3(ptr) Variable Function
   59_101(param):   32_2(ptr) Variable Function
           57_50:   21_1(int) FunctionCall 54_4(TDInstanceID()
                              Store 59_100(param) 57_50
          61_161: 23_2(fvec3) Load 55_52(pos)
                              Store 59_101(param) 61_161
           57_51: 23_1(fvec4) FunctionCall 54_47(TDDeform(i1;vf3;) 59_100(param) 59_101(param)
                              ReturnValue 57_51
                              FunctionEnd
54_49(TDDeformVec(i1;vf3;): 23_2(fvec3) Function None 33_11
55_53(instanceID):   32_3(ptr) FunctionParameter
      55_54(vec):   32_2(ptr) FunctionParameter
          248_55:             Label
   59_102(param):   32_2(ptr) Variable Function
   59_103(param):   32_3(ptr) Variable Function
   59_104(param):   32_2(ptr) Variable Function
          61_162: 23_2(fvec3) Load 55_54(vec)
                              Store 59_102(param) 61_162
           57_52: 23_2(fvec3) FunctionCall 54_43(TDSkinnedDeformVec(vf3;) 59_102(param)
                              Store 55_54(vec) 57_52
          61_163:   21_1(int) Load 55_53(instanceID)
                              Store 59_103(param) 61_163
          61_164: 23_2(fvec3) Load 55_54(vec)
                              Store 59_104(param) 61_164
           57_53: 23_2(fvec3) FunctionCall 54_29(TDInstanceDeformVec(i1;vf3;) 59_103(param) 59_104(param)
                              Store 55_54(vec) 57_53
          61_165: 23_2(fvec3) Load 55_54(vec)
                              ReturnValue 61_165
                              FunctionEnd
54_50(TDDeformVec(vf3;): 23_2(fvec3) Function None 33_18
      55_55(vec):   32_2(ptr) FunctionParameter
          248_56:             Label
   59_105(param):   32_3(ptr) Variable Function
   59_106(param):   32_2(ptr) Variable Function
           57_54:   21_1(int) FunctionCall 54_4(TDInstanceID()
                              Store 59_105(param) 57_54
          61_166: 23_2(fvec3) Load 55_55(vec)
                              Store 59_106(param) 61_166
           57_55: 23_2(fvec3) FunctionCall 54_49(TDDeformVec(i1;vf3;) 59_105(param) 59_106(param)
                              ReturnValue 57_55
                              FunctionEnd
54_51(TDDeformNorm(i1;vf3;): 23_2(fvec3) Function None 33_11
55_56(instanceID):   32_3(ptr) FunctionParameter
      55_57(vec):   32_2(ptr) FunctionParameter
          248_57:             Label
   59_107(param):   32_2(ptr) Variable Function
   59_108(param):   32_3(ptr) Variable Function
   59_109(param):   32_2(ptr) Variable Function
          61_167: 23_2(fvec3) Load 55_57(vec)
                              Store 59_107(param) 61_167
           57_56: 23_2(fvec3) FunctionCall 54_43(TDSkinnedDeformVec(vf3;) 59_107(param)
                              Store 55_57(vec) 57_56
          61_168:   21_1(int) Load 55_56(instanceID)
                              Store 59_108(param) 61_168
          61_169: 23_2(fvec3) Load 55_57(vec)
                              Store 59_109(param) 61_169
           57_57: 23_2(fvec3) FunctionCall 54_30(TDInstanceDeformNorm(i1;vf3;) 59_108(param) 59_109(param)
                              Store 55_57(vec) 57_57
          61_170: 23_2(fvec3) Load 55_57(vec)
                              ReturnValue 61_170
                              FunctionEnd
54_52(TDDeformNorm(vf3;): 23_2(fvec3) Function None 33_18
      55_58(vec):   32_2(ptr) FunctionParameter
          248_58:             Label
   59_110(param):   32_3(ptr) Variable Function
   59_111(param):   32_2(ptr) Variable Function
           57_58:   21_1(int) FunctionCall 54_4(TDInstanceID()
                              Store 59_110(param) 57_58
          61_171: 23_2(fvec3) Load 55_58(vec)
                              Store 59_111(param) 61_171
           57_59: 23_2(fvec3) FunctionCall 54_51(TDDeformNorm(i1;vf3;) 59_110(param) 59_111(param)
                              ReturnValue 57_59
                              FunctionEnd
54_53(TDSkinnedDeformNorm(vf3;): 23_2(fvec3) Function None 33_18
      55_59(vec):   32_2(ptr) FunctionParameter
          248_59:             Label
   59_112(param):   32_2(ptr) Variable Function
          61_172: 23_2(fvec3) Load 55_59(vec)
                              Store 59_112(param) 61_172
           57_60: 23_2(fvec3) FunctionCall 54_43(TDSkinnedDeformVec(vf3;) 59_112(param)
                              Store 55_59(vec) 57_60
          61_173: 23_2(fvec3) Load 55_59(vec)
                              ReturnValue 61_173
                              FunctionEnd
// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 1297

                              Capability Shader
                              Capability Sampled1D
                              Capability SampledBuffer
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 54_1  "main" 59_1 59_4 59_6 59_7
                              ExecutionMode 54_1 OriginUpperLeft
                              Source GLSL 460
                              Name 54_1  "main"
                              Name 54_2  "TDColor(vf4;"
                              Name 55_1  "color"
                              Name 54_3  "TDCheckOrderIndTrans("
                              Name 54_4  "TDCheckDiscard("
                              Name 54_5  "TDDither(vf4;"
                              Name 55_2  "color"
                              Name 54_6  "TDFrontFacing(vf3;vf3;"
                              Name 55_3  "pos"
                              Name 55_4  "normal"
                              Name 54_7  "TDAttenuateLight(i1;f1;"
                              Name 55_5  "index"
                              Name 55_6  "lightDist"
                              Name 54_8  "TDAlphaTest(f1;"
                              Name 55_7  "alpha"
                              Name 54_9  "TDHardShadow(i1;vf3;"
                              Name 55_8  "lightIndex"
                              Name 55_9  "worldSpacePos"
                              Name 54_10  "TDSoftShadow(i1;vf3;i1;i1;"
                              Name 55_10  "lightIndex"
                              Name 55_11  "worldSpacePos"
                              Name 55_12  "samples"
                              Name 55_13  "steps"
                              Name 54_11  "TDSoftShadow(i1;vf3;"
                              Name 55_14  "lightIndex"
                              Name 55_15  "worldSpacePos"
                              Name 54_12  "TDShadow(i1;vf3;"
                              Name 55_16  "lightIndex"
                              Name 55_17  "worldSpacePos"
                              Name 54_13  "iTDRadicalInverse_VdC(u1;"
                              Name 55_18  "bits"
                              Name 54_14  "iTDHammersley(u1;u1;"
                              Name 55_19  "i"
                              Name 55_20  "N"
                              Name 54_15  "iTDImportanceSampleGGX(vf2;f1;vf3;"
                              Name 55_21  "Xi"
                              Name 55_22  "roughness2"
                              Name 55_23  "N"
                              Name 54_16  "iTDDistributionGGX(vf3;vf3;f1;"
                              Name 55_24  "normal"
                              Name 55_25  "half_vector"
                              Name 55_26  "roughness2"
                              Name 54_17  "iTDCalcF(vf3;f1;"
                              Name 55_27  "F0"
                              Name 55_28  "VdotH"
                              Name 54_18  "iTDCalcG(f1;f1;f1;"
                              Name 55_29  "NdotL"
                              Name 55_30  "NdotV"
                              Name 55_31  "k"
                              Name 30_1  "TDPBRResult"
                              MemberName 30_1(TDPBRResult) 0  "diffuse"
                              MemberName 30_1(TDPBRResult) 1  "specular"
                              MemberName 30_1(TDPBRResult) 2  "shadowStrength"
                              Name 54_19  "TDLightingPBR(i1;vf3;vf3;vf3;vf3;f1;vf3;vf3;f1;"
                              Name 55_32  "index"
                              Name 55_33  "diffuseColor"
                              Name 55_34  "specularColor"
                              Name 55_35  "worldSpacePos"
                              Name 55_36  "normal"
                              Name 55_37  "shadowStrength"
                              Name 55_38  "shadowColor"
                              Name 55_39  "camVector"
                              Name 55_40  "roughness"
                              Name 54_20  "TDLightingPBR(vf3;vf3;f1;i1;vf3;vf3;vf3;vf3;f1;vf3;vf3;f1;"
                              Name 55_41  "diffuseContrib"
                              Name 55_42  "specularContrib"
                              Name 55_43  "shadowStrengthOut"
                              Name 55_44  "index"
                              Name 55_45  "diffuseColor"
                              Name 55_46  "specularColor"
                              Name 55_47  "worldSpacePos"
                              Name 55_48  "normal"
                              Name 55_49  "shadowStrength"
                              Name 55_50  "shadowColor"
                              Name 55_51  "camVector"
                              Name 55_52  "roughness"
                              Name 54_21  "TDLightingPBR(vf3;vf3;i1;vf3;vf3;vf3;vf3;f1;vf3;vf3;f1;"
                              Name 55_53  "diffuseContrib"
                              Name 55_54  "specularContrib"
                              Name 55_55  "index"
                              Name 55_56  "diffuseColor"
                              Name 55_57  "specularColor"
                              Name 55_58  "worldSpacePos"
                              Name 55_59  "normal"
                              Name 55_60  "shadowStrength"
                              Name 55_61  "shadowColor"
                              Name 55_62  "camVector"
                              Name 55_63  "roughness"
                              Name 54_22  "TDEnvLightingPBR(i1;vf3;vf3;vf3;vf3;f1;f1;"
                              Name 55_64  "index"
                              Name 55_65  "diffuseColor"
                              Name 55_66  "specularColor"
                              Name 55_67  "normal"
                              Name 55_68  "camVector"
                              Name 55_69  "roughness"
                              Name 55_70  "ambientOcclusion"
                              Name 54_23  "TDEnvLightingPBR(vf3;vf3;i1;vf3;vf3;vf3;vf3;f1;f1;"
                              Name 55_71  "diffuseContrib"
                              Name 55_72  "specularContrib"
                              Name 55_73  "index"
                              Name 55_74  "diffuseColor"
                              Name 55_75  "specularColor"
                              Name 55_76  "normal"
                              Name 55_77  "camVector"
                              Name 55_78  "roughness"
                              Name 55_79  "ambientOcclusion"
                              Name 30_2  "TDPhongResult"
                              MemberName 30_2(TDPhongResult) 0  "diffuse"
                              MemberName 30_2(TDPhongResult) 1  "specular"
                              MemberName 30_2(TDPhongResult) 2  "specular2"
                              MemberName 30_2(TDPhongResult) 3  "shadowStrength"
                              Name 54_24  "TDLighting(i1;vf3;vf3;f1;vf3;vf3;f1;f1;"
                              Name 55_80  "index"
                              Name 55_81  "worldSpacePos"
                              Name 55_82  "normal"
                              Name 55_83  "shadowStrength"
                              Name 55_84  "shadowColor"
                              Name 55_85  "camVector"
                              Name 55_86  "shininess"
                              Name 55_87  "shininess2"
                              Name 54_25  "TDLighting(vf3;vf3;vf3;f1;i1;vf3;vf3;f1;vf3;vf3;f1;f1;"
                              Name 55_88  "diffuseContrib"
                              Name 55_89  "specularContrib"
                              Name 55_90  "specularContrib2"
                              Name 55_91  "shadowStrengthOut"
                              Name 55_92  "index"
                              Name 55_93  "worldSpacePos"
                              Name 55_94  "normal"
                              Name 55_95  "shadowStrength"
                              Name 55_96  "shadowColor"
                              Name 55_97  "camVector"
                              Name 55_98  "shininess"
                              Name 55_99  "shininess2"
                              Name 54_26  "TDLighting(vf3;vf3;vf3;i1;vf3;vf3;f1;vf3;vf3;f1;f1;"
                              Name 55_100  "diffuseContrib"
                              Name 55_101  "specularContrib"
                              Name 55_102  "specularContrib2"
                              Name 55_103  "index"
                              Name 55_104  "worldSpacePos"
                              Name 55_105  "normal"
                              Name 55_106  "shadowStrength"
                              Name 55_107  "shadowColor"
                              Name 55_108  "camVector"
                              Name 55_109  "shininess"
                              Name 55_110  "shininess2"
                              Name 54_27  "TDLighting(vf3;vf3;i1;vf3;vf3;f1;vf3;vf3;f1;"
                              Name 55_111  "diffuseContrib"
                              Name 55_112  "specularContrib"
                              Name 55_113  "index"
                              Name 55_114  "worldSpacePos"
                              Name 55_115  "normal"
                              Name 55_116  "shadowStrength"
                              Name 55_117  "shadowColor"
                              Name 55_118  "camVector"
                              Name 55_119  "shininess"
                              Name 54_28  "TDLighting(vf3;vf3;vf3;i1;vf3;vf3;vf3;f1;f1;"
                              Name 55_120  "diffuseContrib"
                              Name 55_121  "specularContrib"
                              Name 55_122  "specularContrib2"
                              Name 55_123  "index"
                              Name 55_124  "worldSpacePos"
                              Name 55_125  "normal"
                              Name 55_126  "camVector"
                              Name 55_127  "shininess"
                              Name 55_128  "shininess2"
                              Name 54_29  "TDLighting(vf3;vf3;i1;vf3;vf3;vf3;f1;"
                              Name 55_129  "diffuseContrib"
                              Name 55_130  "specularContrib"
                              Name 55_131  "index"
                              Name 55_132  "worldSpacePos"
                              Name 55_133  "normal"
                              Name 55_134  "camVector"
                              Name 55_135  "shininess"
                              Name 54_30  "TDLighting(vf3;i1;vf3;vf3;"
                              Name 55_136  "diffuseContrib"
                              Name 55_137  "index"
                              Name 55_138  "worldSpacePos"
                              Name 55_139  "normal"
                              Name 54_31  "TDLighting(vf3;i1;vf3;vf3;f1;vf3;"
                              Name 55_140  "diffuseContrib"
                              Name 55_141  "index"
                              Name 55_142  "worldSpacePos"
                              Name 55_143  "normal"
                              Name 55_144  "shadowStrength"
                              Name 55_145  "shadowColor"
                              Name 54_32  "TDProjMap(i1;vf3;vf4;"
                              Name 55_146  "index"
                              Name 55_147  "worldSpacePos"
                              Name 55_148  "defaultColor"
                              Name 54_33  "TDFog(vf4;vf3;i1;"
                              Name 55_149  "color"
                              Name 55_150  "lightingSpacePosition"
                              Name 55_151  "cameraIndex"
                              Name 54_34  "TDFog(vf4;vf3;"
                              Name 55_152  "color"
                              Name 55_153  "lightingSpacePosition"
                              Name 54_35  "TDInstanceTexCoord(i1;vf3;"
                              Name 55_154  "index"
                              Name 55_155  "t"
                              Name 54_36  "TDInstanceActive(i1;"
                              Name 55_156  "index"
                              Name 54_37  "iTDInstanceTranslate(i1;b1;"
                              Name 55_157  "index"
                              Name 55_158  "instanceActive"
                              Name 54_38  "TDInstanceTranslate(i1;"
                              Name 55_159  "index"
                              Name 54_39  "TDInstanceRotateMat(i1;"
                              Name 55_160  "index"
                              Name 54_40  "TDInstanceScale(i1;"
                              Name 55_161  "index"
                              Name 54_41  "TDInstancePivot(i1;"
                              Name 55_162  "index"
                              Name 54_42  "TDInstanceRotTo(i1;"
                              Name 55_163  "index"
                              Name 54_43  "TDInstanceRotUp(i1;"
                              Name 55_164  "index"
                              Name 54_44  "TDInstanceMat(i1;"
                              Name 55_165  "id"
                              Name 54_45  "TDInstanceMat3(i1;"
                              Name 55_166  "id"
                              Name 54_46  "TDInstanceMat3ForNorm(i1;"
                              Name 55_167  "id"
                              Name 54_47  "TDInstanceColor(i1;vf4;"
                              Name 55_168  "index"
                              Name 55_169  "curColor"
                              Name 54_48  "TDOutputSwizzle(vf4;"
                              Name 55_170  "c"
                              Name 54_49  "TDOutputSwizzle(vu4;"
                              Name 55_171  "c"
                              Name 59_22  "outcol"
                              Name 59_23  "texCoord0"
                              Name 30_3  "Vertex"
                              MemberName 30_3(Vertex) 0  "color"
                              MemberName 30_3(Vertex) 1  "worldSpacePos"
                              MemberName 30_3(Vertex) 2  "texCoord0"
                              MemberName 30_3(Vertex) 3  "cameraIndex"
                              MemberName 30_3(Vertex) 4  "instance"
                              Name 59_1  "iVert"
                              Name 59_24  "actualTexZ"
                              Name 59_25  "instanceLoop"
                              Name 59_26  "colorMapColor"
                              Name 59_2  "sColorMap"
                              Name 59_27  "red"
                              Name 30_4  "gl_DefaultUniformBlock"
                              MemberName 30_4(gl_DefaultUniformBlock) 0  "uTDInstanceIDOffset"
                              MemberName 30_4(gl_DefaultUniformBlock) 1  "uTDNumInstances"
                              MemberName 30_4(gl_DefaultUniformBlock) 2  "uTDAlphaTestVal"
                              MemberName 30_4(gl_DefaultUniformBlock) 3  "uConstant"
                              MemberName 30_4(gl_DefaultUniformBlock) 4  "uShadowStrength"
                              MemberName 30_4(gl_DefaultUniformBlock) 5  "uShadowColor"
                              MemberName 30_4(gl_DefaultUniformBlock) 6  "uDiffuseColor"
                              MemberName 30_4(gl_DefaultUniformBlock) 7  "uAmbientColor"
                              Name 59_3  ""
                              Name 59_28  "alpha"
                              Name 59_29  "param"
                              Name 59_30  "param"
                              Name 59_4  "oFragColor"
                              Name 59_31  "param"
                              Name 59_32  "i"
                              Name 59_33  "d"
                              Name 59_5  "sTDNoiseMap"
                              Name 59_6  "gl_FragCoord"
                              Name 59_7  "gl_FrontFacing"
                              Name 59_34  "param"
                              Name 59_35  "a"
                              Name 59_36  "phi"
                              Name 59_37  "cosTheta"
                              Name 59_38  "sinTheta"
                              Name 59_39  "H"
                              Name 59_40  "upVector"
                              Name 59_41  "tangentX"
                              Name 59_42  "tangentY"
                              Name 59_43  "worldResult"
                              Name 59_44  "NdotH"
                              Name 59_45  "alpha2"
                              Name 59_46  "denom"
                              Name 59_47  "Gl"
                              Name 59_48  "Gv"
                              Name 59_49  "res"
                              Name 59_50  "res"
                              Name 59_51  "param"
                              Name 59_52  "param"
                              Name 59_53  "param"
                              Name 59_54  "param"
                              Name 59_55  "param"
                              Name 59_56  "param"
                              Name 59_57  "param"
                              Name 59_58  "param"
                              Name 59_59  "param"
                              Name 59_60  "res"
                              Name 59_61  "param"
                              Name 59_62  "param"
                              Name 59_63  "param"
                              Name 59_64  "param"
                              Name 59_65  "param"
                              Name 59_66  "param"
                              Name 59_67  "param"
                              Name 59_68  "param"
                              Name 59_69  "param"
                              Name 59_70  "res"
                              Name 59_71  "res"
                              Name 59_72  "param"
                              Name 59_73  "param"
                              Name 59_74  "param"
                              Name 59_75  "param"
                              Name 59_76  "param"
                              Name 59_77  "param"
                              Name 59_78  "param"
                              Name 59_79  "res"
                              Name 59_80  "res"
                              Name 59_81  "res"
                              Name 59_82  "res"
                              Name 59_83  "res"
                              Name 59_84  "res"
                              Name 59_85  "res"
                              Name 59_86  "res"
                              Name 59_87  "param"
                              Name 59_88  "param"
                              Name 59_89  "param"
                              Name 59_90  "coord"
                              Name 59_91  "samp"
                              Name 59_8  "sTDInstanceTexCoord"
                              Name 59_92  "v"
                              Name 59_93  "coord"
                              Name 59_94  "samp"
                              Name 59_9  "sTDInstanceT"
                              Name 59_95  "v"
                              Name 59_96  "origIndex"
                              Name 59_97  "coord"
                              Name 59_98  "samp"
                              Name 59_99  "v"
                              Name 59_100  "coord"
                              Name 59_101  "samp"
                              Name 59_102  "v"
                              Name 59_103  "v"
                              Name 59_104  "m"
                              Name 59_105  "v"
                              Name 59_106  "v"
                              Name 59_107  "v"
                              Name 59_108  "v"
                              Name 59_109  "instanceActive"
                              Name 59_110  "t"
                              Name 59_111  "param"
                              Name 59_112  "param"
                              Name 59_113  "m"
                              Name 59_114  "tt"
                              Name 59_115  "m"
                              Name 59_116  "m"
                              Name 59_117  "param"
                              Name 59_118  "coord"
                              Name 59_119  "samp"
                              Name 59_10  "sTDInstanceColor"
                              Name 59_120  "v"
                              Name 30_5  "TDMatrix"
                              MemberName 30_5(TDMatrix) 0  "world"
                              MemberName 30_5(TDMatrix) 1  "worldInverse"
                              MemberName 30_5(TDMatrix) 2  "worldCam"
                              MemberName 30_5(TDMatrix) 3  "worldCamInverse"
                              MemberName 30_5(TDMatrix) 4  "cam"
                              MemberName 30_5(TDMatrix) 5  "camInverse"
                              MemberName 30_5(TDMatrix) 6  "camProj"
                              MemberName 30_5(TDMatrix) 7  "camProjInverse"
                              MemberName 30_5(TDMatrix) 8  "proj"
                              MemberName 30_5(TDMatrix) 9  "projInverse"
                              MemberName 30_5(TDMatrix) 10  "worldCamProj"
                              MemberName 30_5(TDMatrix) 11  "worldCamProjInverse"
                              MemberName 30_5(TDMatrix) 12  "quadReproject"
                              MemberName 30_5(TDMatrix) 13  "worldForNormals"
                              MemberName 30_5(TDMatrix) 14  "camForNormals"
                              MemberName 30_5(TDMatrix) 15  "worldCamForNormals"
                              Name 30_6  "TDMatricesBlock"
                              MemberName 30_6(TDMatricesBlock) 0  "uTDMats"
                              Name 59_11  ""
                              Name 30_7  "TDCameraInfo"
                              MemberName 30_7(TDCameraInfo) 0  "nearFar"
                              MemberName 30_7(TDCameraInfo) 1  "fog"
                              MemberName 30_7(TDCameraInfo) 2  "fogColor"
                              MemberName 30_7(TDCameraInfo) 3  "renderTOPCameraIndex"
                              Name 30_8  "TDCameraInfoBlock"
                              MemberName 30_8(TDCameraInfoBlock) 0  "uTDCamInfos"
                              Name 59_12  ""
                              Name 30_9  "TDGeneral"
                              MemberName 30_9(TDGeneral) 0  "ambientColor"
                              MemberName 30_9(TDGeneral) 1  "nearFar"
                              MemberName 30_9(TDGeneral) 2  "viewport"
                              MemberName 30_9(TDGeneral) 3  "viewportRes"
                              MemberName 30_9(TDGeneral) 4  "fog"
                              MemberName 30_9(TDGeneral) 5  "fogColor"
                              Name 30_10  "TDGeneralBlock"
                              MemberName 30_10(TDGeneralBlock) 0  "uTDGeneral"
                              Name 59_13  ""
                              Name 59_14  "sTDSineLookup"
                              Name 59_15  "sTDWhite2D"
                              Name 59_16  "sTDWhite3D"
                              Name 59_17  "sTDWhite2DArray"
                              Name 59_18  "sTDWhiteCube"
                              Name 30_11  "TDLight"
                              MemberName 30_11(TDLight) 0  "position"
                              MemberName 30_11(TDLight) 1  "direction"
                              MemberName 30_11(TDLight) 2  "diffuse"
                              MemberName 30_11(TDLight) 3  "nearFar"
                              MemberName 30_11(TDLight) 4  "lightSize"
                              MemberName 30_11(TDLight) 5  "misc"
                              MemberName 30_11(TDLight) 6  "coneLookupScaleBias"
                              MemberName 30_11(TDLight) 7  "attenScaleBiasRoll"
                              MemberName 30_11(TDLight) 8  "shadowMapMatrix"
                              MemberName 30_11(TDLight) 9  "shadowMapCamMatrix"
                              MemberName 30_11(TDLight) 10  "shadowMapRes"
                              MemberName 30_11(TDLight) 11  "projMapMatrix"
                              Name 30_12  "TDLightBlock"
                              MemberName 30_12(TDLightBlock) 0  "uTDLights"
                              Name 59_19  ""
                              Name 30_13  "TDEnvLight"
                              MemberName 30_13(TDEnvLight) 0  "color"
                              MemberName 30_13(TDEnvLight) 1  "rotate"
                              Name 30_14  "TDEnvLightBlock"
                              MemberName 30_14(TDEnvLightBlock) 0  "uTDEnvLights"
                              Name 59_20  ""
                              Name 30_15  "TDEnvLightBuffer"
                              MemberName 30_15(TDEnvLightBuffer) 0  "shCoeffs"
                              Name 59_21  "uTDEnvLightBuffers"
                              Decorate 30_3(Vertex) Block
                              MemberDecorate 30_3(Vertex) 3 Flat
                              MemberDecorate 30_3(Vertex) 4 Flat
                              Decorate 59_1(iVert) Location 0
                              Decorate 59_2(sColorMap) Binding 2
                              Decorate 59_2(sColorMap) DescriptorSet 0
                              Decorate 30_4(gl_DefaultUniformBlock) Block
                              MemberDecorate 30_4(gl_DefaultUniformBlock) 0 Offset 0
                              MemberDecorate 30_4(gl_DefaultUniformBlock) 1 Offset 4
                              MemberDecorate 30_4(gl_DefaultUniformBlock) 2 Offset 8
                              MemberDecorate 30_4(gl_DefaultUniformBlock) 3 Offset 16
                              MemberDecorate 30_4(gl_DefaultUniformBlock) 4 Offset 28
                              MemberDecorate 30_4(gl_DefaultUniformBlock) 5 Offset 32
                              MemberDecorate 30_4(gl_DefaultUniformBlock) 6 Offset 48
                              MemberDecorate 30_4(gl_DefaultUniformBlock) 7 Offset 64
                              Decorate 59_3 Binding 0
                              Decorate 59_3 DescriptorSet 0
                              Decorate 59_4(oFragColor) Location 0
                              Decorate 59_5(sTDNoiseMap) Binding 3
                              Decorate 59_5(sTDNoiseMap) DescriptorSet 0
                              Decorate 59_6(gl_FragCoord) BuiltIn FragCoord
                              Decorate 59_7(gl_FrontFacing) BuiltIn FrontFacing
                              Decorate 59_8(sTDInstanceTexCoord) Binding 16
                              Decorate 59_8(sTDInstanceTexCoord) DescriptorSet 0
                              Decorate 59_9(sTDInstanceT) Binding 15
                              Decorate 59_9(sTDInstanceT) DescriptorSet 0
                              Decorate 59_10(sTDInstanceColor) Binding 17
                              Decorate 59_10(sTDInstanceColor) DescriptorSet 0
                              MemberDecorate 30_5(TDMatrix) 0 ColMajor
                              MemberDecorate 30_5(TDMatrix) 0 MatrixStride 16
                              MemberDecorate 30_5(TDMatrix) 0 Offset 0
                              MemberDecorate 30_5(TDMatrix) 1 ColMajor
                              MemberDecorate 30_5(TDMatrix) 1 MatrixStride 16
                              MemberDecorate 30_5(TDMatrix) 1 Offset 64
                              MemberDecorate 30_5(TDMatrix) 2 ColMajor
                              MemberDecorate 30_5(TDMatrix) 2 MatrixStride 16
                              MemberDecorate 30_5(TDMatrix) 2 Offset 128
                              MemberDecorate 30_5(TDMatrix) 3 ColMajor
                              MemberDecorate 30_5(TDMatrix) 3 MatrixStride 16
                              MemberDecorate 30_5(TDMatrix) 3 Offset 192
                              MemberDecorate 30_5(TDMatrix) 4 ColMajor
                              MemberDecorate 30_5(TDMatrix) 4 MatrixStride 16
                              MemberDecorate 30_5(TDMatrix) 4 Offset 256
                              MemberDecorate 30_5(TDMatrix) 5 ColMajor
                              MemberDecorate 30_5(TDMatrix) 5 MatrixStride 16
                              MemberDecorate 30_5(TDMatrix) 5 Offset 320
                              MemberDecorate 30_5(TDMatrix) 6 ColMajor
                              MemberDecorate 30_5(TDMatrix) 6 MatrixStride 16
                              MemberDecorate 30_5(TDMatrix) 6 Offset 384
                              MemberDecorate 30_5(TDMatrix) 7 ColMajor
                              MemberDecorate 30_5(TDMatrix) 7 MatrixStride 16
                              MemberDecorate 30_5(TDMatrix) 7 Offset 448
                              MemberDecorate 30_5(TDMatrix) 8 ColMajor
                              MemberDecorate 30_5(TDMatrix) 8 MatrixStride 16
                              MemberDecorate 30_5(TDMatrix) 8 Offset 512
                              MemberDecorate 30_5(TDMatrix) 9 ColMajor
                              MemberDecorate 30_5(TDMatrix) 9 MatrixStride 16
                              MemberDecorate 30_5(TDMatrix) 9 Offset 576
                              MemberDecorate 30_5(TDMatrix) 10 ColMajor
                              MemberDecorate 30_5(TDMatrix) 10 MatrixStride 16
                              MemberDecorate 30_5(TDMatrix) 10 Offset 640
                              MemberDecorate 30_5(TDMatrix) 11 ColMajor
                              MemberDecorate 30_5(TDMatrix) 11 MatrixStride 16
                              MemberDecorate 30_5(TDMatrix) 11 Offset 704
                              MemberDecorate 30_5(TDMatrix) 12 ColMajor
                              MemberDecorate 30_5(TDMatrix) 12 MatrixStride 16
                              MemberDecorate 30_5(TDMatrix) 12 Offset 768
                              MemberDecorate 30_5(TDMatrix) 13 ColMajor
                              MemberDecorate 30_5(TDMatrix) 13 MatrixStride 16
                              MemberDecorate 30_5(TDMatrix) 13 Offset 832
                              MemberDecorate 30_5(TDMatrix) 14 ColMajor
                              MemberDecorate 30_5(TDMatrix) 14 MatrixStride 16
                              MemberDecorate 30_5(TDMatrix) 14 Offset 880
                              MemberDecorate 30_5(TDMatrix) 15 ColMajor
                              MemberDecorate 30_5(TDMatrix) 15 MatrixStride 16
                              MemberDecorate 30_5(TDMatrix) 15 Offset 928
                              Decorate 28_2 ArrayStride 976
                              Decorate 30_6(TDMatricesBlock) Block
                              MemberDecorate 30_6(TDMatricesBlock) 0 Offset 0
                              Decorate 59_11 Binding 1
                              Decorate 59_11 DescriptorSet 0
                              MemberDecorate 30_7(TDCameraInfo) 0 Offset 0
                              MemberDecorate 30_7(TDCameraInfo) 1 Offset 16
                              MemberDecorate 30_7(TDCameraInfo) 2 Offset 32
                              MemberDecorate 30_7(TDCameraInfo) 3 Offset 48
                              Decorate 28_3 ArrayStride 64
                              Decorate 30_8(TDCameraInfoBlock) Block
                              MemberDecorate 30_8(TDCameraInfoBlock) 0 Offset 0
                              Decorate 59_12 Binding 0
                              Decorate 59_12 DescriptorSet 0
                              MemberDecorate 30_9(TDGeneral) 0 Offset 0
                              MemberDecorate 30_9(TDGeneral) 1 Offset 16
                              MemberDecorate 30_9(TDGeneral) 2 Offset 32
                              MemberDecorate 30_9(TDGeneral) 3 Offset 48
                              MemberDecorate 30_9(TDGeneral) 4 Offset 64
                              MemberDecorate 30_9(TDGeneral) 5 Offset 80
                              Decorate 30_10(TDGeneralBlock) Block
                              MemberDecorate 30_10(TDGeneralBlock) 0 Offset 0
                              Decorate 59_13 Binding 0
                              Decorate 59_13 DescriptorSet 0
                              Decorate 59_14(sTDSineLookup) Binding 0
                              Decorate 59_14(sTDSineLookup) DescriptorSet 0
                              Decorate 59_15(sTDWhite2D) Binding 0
                              Decorate 59_15(sTDWhite2D) DescriptorSet 0
                              Decorate 59_16(sTDWhite3D) Binding 0
                              Decorate 59_16(sTDWhite3D) DescriptorSet 0
                              Decorate 59_17(sTDWhite2DArray) Binding 0
                              Decorate 59_17(sTDWhite2DArray) DescriptorSet 0
                              Decorate 59_18(sTDWhiteCube) Binding 0
                              Decorate 59_18(sTDWhiteCube) DescriptorSet 0
                              MemberDecorate 30_11(TDLight) 0 Offset 0
                              MemberDecorate 30_11(TDLight) 1 Offset 16
                              MemberDecorate 30_11(TDLight) 2 Offset 32
                              MemberDecorate 30_11(TDLight) 3 Offset 48
                              MemberDecorate 30_11(TDLight) 4 Offset 64
                              MemberDecorate 30_11(TDLight) 5 Offset 80
                              MemberDecorate 30_11(TDLight) 6 Offset 96
                              MemberDecorate 30_11(TDLight) 7 Offset 112
                              MemberDecorate 30_11(TDLight) 8 ColMajor
                              MemberDecorate 30_11(TDLight) 8 MatrixStride 16
                              MemberDecorate 30_11(TDLight) 8 Offset 128
                              MemberDecorate 30_11(TDLight) 9 ColMajor
                              MemberDecorate 30_11(TDLight) 9 MatrixStride 16
                              MemberDecorate 30_11(TDLight) 9 Offset 192
                              MemberDecorate 30_11(TDLight) 10 Offset 256
                              MemberDecorate 30_11(TDLight) 11 ColMajor
                              MemberDecorate 30_11(TDLight) 11 MatrixStride 16
                              MemberDecorate 30_11(TDLight) 11 Offset 272
                              Decorate 28_4 ArrayStride 336
                              Decorate 30_12(TDLightBlock) Block
                              MemberDecorate 30_12(TDLightBlock) 0 Offset 0
                              Decorate 59_19 Binding 0
                              Decorate 59_19 DescriptorSet 0
                              MemberDecorate 30_13(TDEnvLight) 0 Offset 0
                              MemberDecorate 30_13(TDEnvLight) 1 ColMajor
                              MemberDecorate 30_13(TDEnvLight) 1 MatrixStride 16
                              MemberDecorate 30_13(TDEnvLight) 1 Offset 16
                              Decorate 28_5 ArrayStride 64
                              Decorate 30_14(TDEnvLightBlock) Block
                              MemberDecorate 30_14(TDEnvLightBlock) 0 Offset 0
                              Decorate 59_20 Binding 0
                              Decorate 59_20 DescriptorSet 0
                              Decorate 28_6 ArrayStride 16
                              Decorate 30_15(TDEnvLightBuffer) BufferBlock
                              MemberDecorate 30_15(TDEnvLightBuffer) 0 Restrict
                              MemberDecorate 30_15(TDEnvLightBuffer) 0 NonWritable
                              MemberDecorate 30_15(TDEnvLightBuffer) 0 Offset 0
                              Decorate 59_21(uTDEnvLightBuffers) Binding 0
                              Decorate 59_21(uTDEnvLightBuffers) DescriptorSet 0
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
            32_1:             TypePointer Function 23_1(fvec4)
            33_2:             TypeFunction 23_1(fvec4) 32_1(ptr)
            23_2:             TypeVector 22_1(float) 3
            32_2:             TypePointer Function 23_2(fvec3)
            20_1:             TypeBool
            33_3:             TypeFunction 20_1(bool) 32_2(ptr) 32_2(ptr)
            21_1:             TypeInt 32 1
            32_3:             TypePointer Function 21_1(int)
            32_4:             TypePointer Function 22_1(float)
            33_4:             TypeFunction 22_1(float) 32_3(ptr) 32_4(ptr)
            33_5:             TypeFunction 19_1 32_4(ptr)
            33_6:             TypeFunction 22_1(float) 32_3(ptr) 32_2(ptr)
            33_7:             TypeFunction 22_1(float) 32_3(ptr) 32_2(ptr) 32_3(ptr) 32_3(ptr)
            21_2:             TypeInt 32 0
            32_5:             TypePointer Function 21_2(int)
            33_8:             TypeFunction 22_1(float) 32_5(ptr)
            23_3:             TypeVector 22_1(float) 2
            33_9:             TypeFunction 23_3(fvec2) 32_5(ptr) 32_5(ptr)
            32_6:             TypePointer Function 23_3(fvec2)
           33_10:             TypeFunction 23_2(fvec3) 32_6(ptr) 32_4(ptr) 32_2(ptr)
           33_11:             TypeFunction 22_1(float) 32_2(ptr) 32_2(ptr) 32_4(ptr)
           33_12:             TypeFunction 23_2(fvec3) 32_2(ptr) 32_4(ptr)
           33_13:             TypeFunction 22_1(float) 32_4(ptr) 32_4(ptr) 32_4(ptr)
30_1(TDPBRResult):             TypeStruct 23_2(fvec3) 23_2(fvec3) 22_1(float)
           33_14:             TypeFunction 30_1(TDPBRResult) 32_3(ptr) 32_2(ptr) 32_2(ptr) 32_2(ptr) 32_2(ptr) 32_4(ptr) 32_2(ptr) 32_2(ptr) 32_4(ptr)
           33_15:             TypeFunction 19_1 32_2(ptr) 32_2(ptr) 32_4(ptr) 32_3(ptr) 32_2(ptr) 32_2(ptr) 32_2(ptr) 32_2(ptr) 32_4(ptr) 32_2(ptr) 32_2(ptr) 32_4(ptr)
           33_16:             TypeFunction 19_1 32_2(ptr) 32_2(ptr) 32_3(ptr) 32_2(ptr) 32_2(ptr) 32_2(ptr) 32_2(ptr) 32_4(ptr) 32_2(ptr) 32_2(ptr) 32_4(ptr)
           33_17:             TypeFunction 30_1(TDPBRResult) 32_3(ptr) 32_2(ptr) 32_2(ptr) 32_2(ptr) 32_2(ptr) 32_4(ptr) 32_4(ptr)
           33_18:             TypeFunction 19_1 32_2(ptr) 32_2(ptr) 32_3(ptr) 32_2(ptr) 32_2(ptr) 32_2(ptr) 32_2(ptr) 32_4(ptr) 32_4(ptr)
30_2(TDPhongResult):             TypeStruct 23_2(fvec3) 23_2(fvec3) 23_2(fvec3) 22_1(float)
           33_19:             TypeFunction 30_2(TDPhongResult) 32_3(ptr) 32_2(ptr) 32_2(ptr) 32_4(ptr) 32_2(ptr) 32_2(ptr) 32_4(ptr) 32_4(ptr)
           33_20:             TypeFunction 19_1 32_2(ptr) 32_2(ptr) 32_2(ptr) 32_4(ptr) 32_3(ptr) 32_2(ptr) 32_2(ptr) 32_4(ptr) 32_2(ptr) 32_2(ptr) 32_4(ptr) 32_4(ptr)
           33_21:             TypeFunction 19_1 32_2(ptr) 32_2(ptr) 32_2(ptr) 32_3(ptr) 32_2(ptr) 32_2(ptr) 32_4(ptr) 32_2(ptr) 32_2(ptr) 32_4(ptr) 32_4(ptr)
           33_22:             TypeFunction 19_1 32_2(ptr) 32_2(ptr) 32_3(ptr) 32_2(ptr) 32_2(ptr) 32_4(ptr) 32_2(ptr) 32_2(ptr) 32_4(ptr)
           33_23:             TypeFunction 19_1 32_2(ptr) 32_2(ptr) 32_2(ptr) 32_3(ptr) 32_2(ptr) 32_2(ptr) 32_2(ptr) 32_4(ptr) 32_4(ptr)
           33_24:             TypeFunction 19_1 32_2(ptr) 32_2(ptr) 32_3(ptr) 32_2(ptr) 32_2(ptr) 32_2(ptr) 32_4(ptr)
           33_25:             TypeFunction 19_1 32_2(ptr) 32_3(ptr) 32_2(ptr) 32_2(ptr)
           33_26:             TypeFunction 19_1 32_2(ptr) 32_3(ptr) 32_2(ptr) 32_2(ptr) 32_4(ptr) 32_2(ptr)
           33_27:             TypeFunction 23_1(fvec4) 32_3(ptr) 32_2(ptr) 32_1(ptr)
           33_28:             TypeFunction 23_1(fvec4) 32_1(ptr) 32_2(ptr) 32_3(ptr)
           33_29:             TypeFunction 23_1(fvec4) 32_1(ptr) 32_2(ptr)
           33_30:             TypeFunction 23_2(fvec3) 32_3(ptr) 32_2(ptr)
           33_31:             TypeFunction 20_1(bool) 32_3(ptr)
            32_7:             TypePointer Function 20_1(bool)
           33_32:             TypeFunction 23_2(fvec3) 32_3(ptr) 32_7(ptr)
           33_33:             TypeFunction 23_2(fvec3) 32_3(ptr)
            24_1:             TypeMatrix 23_2(fvec3) 3
           33_34:             TypeFunction 24_1 32_3(ptr)
            24_2:             TypeMatrix 23_1(fvec4) 4
           33_35:             TypeFunction 24_2 32_3(ptr)
           33_36:             TypeFunction 23_1(fvec4) 32_3(ptr) 32_1(ptr)
            23_4:             TypeVector 21_2(int) 4
            32_8:             TypePointer Function 23_4(ivec4)
           33_37:             TypeFunction 23_4(ivec4) 32_8(ptr)
            43_1: 22_1(float) Constant 0
            44_1: 23_1(fvec4) ConstantComposite 43_1 43_1 43_1 43_1
    30_3(Vertex):             TypeStruct 23_1(fvec4) 23_2(fvec3) 23_2(fvec3) 21_1(int) 21_1(int)
            32_9:             TypePointer Input 30_3(Vertex)
     59_1(iVert):   32_9(ptr) Variable Input
            43_2:   21_1(int) Constant 2
           32_10:             TypePointer Input 23_2(fvec3)
         uint(2):   21_2(int) Constant 2
            43_3: 22_1(float) Constant 1157627904
            43_4:   21_1(int) Constant 2048
            25_1:             TypeImage 22_1(float) 2D array sampled format:Unknown
            27_1:             TypeSampledImage 25_1
           32_11:             TypePointer UniformConstant 27_1
 59_2(sColorMap):  32_11(ptr) Variable UniformConstant
30_4(gl_DefaultUniformBlock):             TypeStruct 21_1(int) 21_1(int) 22_1(float) 23_2(fvec3) 22_1(float) 23_2(fvec3) 23_1(fvec4) 23_1(fvec4)
           32_12:             TypePointer Uniform 30_4(gl_DefaultUniformBlock)
            59_3:  32_12(ptr) Variable Uniform
            43_5:   21_1(int) Constant 3
           32_13:             TypePointer Uniform 23_2(fvec3)
            43_6:   21_1(int) Constant 0
           32_14:             TypePointer Input 23_1(fvec4)
         uint(0):   21_2(int) Constant 0
         uint(1):   21_2(int) Constant 1
         uint(3):   21_2(int) Constant 3
           32_15:             TypePointer Input 22_1(float)
            28_1:             TypeArray 23_1(fvec4) uint(1)
           32_16:             TypePointer Output 28_1
59_4(oFragColor):  32_16(ptr) Variable Output
           32_17:             TypePointer Output 23_1(fvec4)
            43_7:   21_1(int) Constant 1
            25_2:             TypeImage 22_1(float) 2D sampled format:Unknown
            27_2:             TypeSampledImage 25_2
           32_18:             TypePointer UniformConstant 27_2
59_5(sTDNoiseMap):  32_18(ptr) Variable UniformConstant
59_6(gl_FragCoord):  32_14(ptr) Variable Input
            43_8: 22_1(float) Constant 1132462080
            43_9: 22_1(float) Constant 1056964608
           32_19:             TypePointer Input 20_1(bool)
59_7(gl_FrontFacing):  32_19(ptr) Variable Input
           43_10: 22_1(float) Constant 1065353216
        uint(16):   21_2(int) Constant 16
uint(1431655765):   21_2(int) Constant 1431655765
uint(2863311530):   21_2(int) Constant 2863311530
 uint(858993459):   21_2(int) Constant 858993459
uint(3435973836):   21_2(int) Constant 3435973836
 uint(252645135):   21_2(int) Constant 252645135
         uint(4):   21_2(int) Constant 4
uint(4042322160):   21_2(int) Constant 4042322160
  uint(16711935):   21_2(int) Constant 16711935
         uint(8):   21_2(int) Constant 8
uint(4278255360):   21_2(int) Constant 4278255360
           43_11: 22_1(float) Constant 796917760
           43_12: 22_1(float) Constant 1086918619
           43_13: 22_1(float) Constant 1065336439
            44_2: 23_2(fvec3) ConstantComposite 43_1 43_1 43_10
            44_3: 23_2(fvec3) ConstantComposite 43_10 43_1 43_1
            23_5:             TypeVector 20_1(bool) 3
           43_14: 22_1(float) Constant 897988541
           43_15: 22_1(float) Constant 841731191
           43_16: 22_1(float) Constant 1078530011
            44_4: 23_2(fvec3) ConstantComposite 43_10 43_10 43_10
           43_17: 22_1(float) Constant 1073741824
           43_18: 22_1(float) Constant 3232874585
           43_19: 22_1(float) Constant 1088386572
           32_20:             TypePointer Function 30_1(TDPBRResult)
           32_21:             TypePointer Function 30_2(TDPhongResult)
            44_5: 23_2(fvec3) ConstantComposite 43_1 43_1 43_1
            25_3:             TypeImage 22_1(float) Buffer sampled format:Unknown
            27_3:             TypeSampledImage 25_3
           32_22:             TypePointer UniformConstant 27_3
59_8(sTDInstanceTexCoord):  32_22(ptr) Variable UniformConstant
           32_23:             TypePointer Uniform 21_1(int)
59_9(sTDInstanceT):  32_22(ptr) Variable UniformConstant
           32_24:             TypePointer Function 24_1
            44_6: 23_2(fvec3) ConstantComposite 43_1 43_10 43_1
            44_7:        24_1 ConstantComposite 44_3 44_6 44_2
            41_1:  20_1(bool) ConstantTrue
            44_8:        24_2 ConstantComposite 44_1 44_1 44_1 44_1
           32_25:             TypePointer Function 24_2
            44_9: 23_1(fvec4) ConstantComposite 43_10 43_1 43_1 43_1
           44_10: 23_1(fvec4) ConstantComposite 43_1 43_10 43_1 43_1
           44_11: 23_1(fvec4) ConstantComposite 43_1 43_1 43_10 43_1
           44_12: 23_1(fvec4) ConstantComposite 43_1 43_1 43_1 43_10
           44_13:        24_2 ConstantComposite 44_9 44_10 44_11 44_12
59_10(sTDInstanceColor):  32_22(ptr) Variable UniformConstant
  30_5(TDMatrix):             TypeStruct 24_2 24_2 24_2 24_2 24_2 24_2 24_2 24_2 24_2 24_2 24_2 24_2 24_2 24_1 24_1 24_1
            28_2:             TypeArray 30_5(TDMatrix) uint(1)
30_6(TDMatricesBlock):             TypeStruct 28_2
           32_26:             TypePointer Uniform 30_6(TDMatricesBlock)
           59_11:  32_26(ptr) Variable Uniform
30_7(TDCameraInfo):             TypeStruct 23_1(fvec4) 23_1(fvec4) 23_1(fvec4) 21_1(int)
            28_3:             TypeArray 30_7(TDCameraInfo) uint(1)
30_8(TDCameraInfoBlock):             TypeStruct 28_3
           32_27:             TypePointer Uniform 30_8(TDCameraInfoBlock)
           59_12:  32_27(ptr) Variable Uniform
 30_9(TDGeneral):             TypeStruct 23_1(fvec4) 23_1(fvec4) 23_1(fvec4) 23_1(fvec4) 23_1(fvec4) 23_1(fvec4)
30_10(TDGeneralBlock):             TypeStruct 30_9(TDGeneral)
           32_28:             TypePointer Uniform 30_10(TDGeneralBlock)
           59_13:  32_28(ptr) Variable Uniform
            25_4:             TypeImage 22_1(float) 1D sampled format:Unknown
            27_4:             TypeSampledImage 25_4
           32_29:             TypePointer UniformConstant 27_4
59_14(sTDSineLookup):  32_29(ptr) Variable UniformConstant
59_15(sTDWhite2D):  32_18(ptr) Variable UniformConstant
            25_5:             TypeImage 22_1(float) 3D sampled format:Unknown
            27_5:             TypeSampledImage 25_5
           32_30:             TypePointer UniformConstant 27_5
59_16(sTDWhite3D):  32_30(ptr) Variable UniformConstant
59_17(sTDWhite2DArray):  32_11(ptr) Variable UniformConstant
            25_6:             TypeImage 22_1(float) Cube sampled format:Unknown
            27_6:             TypeSampledImage 25_6
           32_31:             TypePointer UniformConstant 27_6
59_18(sTDWhiteCube):  32_31(ptr) Variable UniformConstant
  30_11(TDLight):             TypeStruct 23_1(fvec4) 23_2(fvec3) 23_2(fvec3) 23_1(fvec4) 23_1(fvec4) 23_1(fvec4) 23_1(fvec4) 23_1(fvec4) 24_2 24_2 23_1(fvec4) 24_2
            28_4:             TypeArray 30_11(TDLight) uint(1)
30_12(TDLightBlock):             TypeStruct 28_4
           32_32:             TypePointer Uniform 30_12(TDLightBlock)
           59_19:  32_32(ptr) Variable Uniform
30_13(TDEnvLight):             TypeStruct 23_2(fvec3) 24_1
            28_5:             TypeArray 30_13(TDEnvLight) uint(1)
30_14(TDEnvLightBlock):             TypeStruct 28_5
           32_33:             TypePointer Uniform 30_14(TDEnvLightBlock)
           59_20:  32_33(ptr) Variable Uniform
         uint(9):   21_2(int) Constant 9
            28_6:             TypeArray 23_2(fvec3) uint(9)
30_15(TDEnvLightBuffer):             TypeStruct 28_6
            28_7:             TypeArray 30_15(TDEnvLightBuffer) uint(1)
           32_34:             TypePointer Uniform 28_7
59_21(uTDEnvLightBuffers):  32_34(ptr) Variable Uniform
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
   59_22(outcol):   32_1(ptr) Variable Function
59_23(texCoord0):   32_2(ptr) Variable Function
59_24(actualTexZ):   32_4(ptr) Variable Function
59_25(instanceLoop):   32_4(ptr) Variable Function
59_26(colorMapColor):   32_1(ptr) Variable Function
      59_27(red):   32_4(ptr) Variable Function
    59_28(alpha):   32_4(ptr) Variable Function
    59_29(param):   32_1(ptr) Variable Function
    59_30(param):   32_4(ptr) Variable Function
    59_31(param):   32_1(ptr) Variable Function
        59_32(i):   32_3(ptr) Variable Function
            57_1:        19_1 FunctionCall 54_4(TDCheckDiscard()
                              Store 59_22(outcol) 44_1
            65_1:  32_10(ptr) AccessChain 59_1(iVert) 43_2
            61_1: 23_2(fvec3) Load 65_1
                              Store 59_23(texCoord0) 61_1
            65_2:   32_4(ptr) AccessChain 59_23(texCoord0) uint(2)
            61_2: 22_1(float) Load 65_2
           110_1:   21_1(int) ConvertFToS 61_2
           111_1: 22_1(float) ConvertSToF 110_1
           141_1: 22_1(float) FMod 111_1 43_3
                              Store 59_24(actualTexZ) 141_1
            65_3:   32_4(ptr) AccessChain 59_23(texCoord0) uint(2)
            61_3: 22_1(float) Load 65_3
           110_2:   21_1(int) ConvertFToS 61_3
           135_1:   21_1(int) SDiv 110_2 43_4
           111_2: 22_1(float) ConvertSToF 135_1
           1-8_1: 22_1(float) ExtInst 11_1(GLSL.std.450) 8(Floor) 111_2
                              Store 59_25(instanceLoop) 1-8_1
            61_4: 22_1(float) Load 59_24(actualTexZ)
            65_4:   32_4(ptr) AccessChain 59_23(texCoord0) uint(2)
                              Store 65_4 61_4
            61_5:        27_1 Load 59_2(sColorMap)
            61_6: 23_2(fvec3) Load 59_23(texCoord0)
            87_1: 23_1(fvec4) ImageSampleImplicitLod 61_5 61_6
                              Store 59_26(colorMapColor) 87_1
            61_7: 22_1(float) Load 59_25(instanceLoop)
           110_3:   21_1(int) ConvertFToS 61_7
            65_5:   32_4(ptr) AccessChain 59_26(colorMapColor) 110_3
            61_8: 22_1(float) Load 65_5
                              Store 59_27(red) 61_8
            61_9: 22_1(float) Load 59_27(red)
            80_1: 23_1(fvec4) CompositeConstruct 61_9 61_9 61_9 61_9
                              Store 59_26(colorMapColor) 80_1
            65_6:  32_13(ptr) AccessChain 59_3 43_5
           61_10: 23_2(fvec3) Load 65_6
            65_7:  32_14(ptr) AccessChain 59_1(iVert) 43_6
           61_11: 23_1(fvec4) Load 65_7
            79_1: 23_2(fvec3) VectorShuffle 61_11 61_11 0 1 2
           133_1: 23_2(fvec3) FMul 61_10 79_1
           61_12: 23_1(fvec4) Load 59_22(outcol)
            79_2: 23_2(fvec3) VectorShuffle 61_12 61_12 0 1 2
           129_1: 23_2(fvec3) FAdd 79_2 133_1
            65_8:   32_4(ptr) AccessChain 59_22(outcol) uint(0)
            81_1: 22_1(float) CompositeExtract 129_1 0
                              Store 65_8 81_1
            65_9:   32_4(ptr) AccessChain 59_22(outcol) uint(1)
            81_2: 22_1(float) CompositeExtract 129_1 1
                              Store 65_9 81_2
           65_10:   32_4(ptr) AccessChain 59_22(outcol) uint(2)
            81_3: 22_1(float) CompositeExtract 129_1 2
                              Store 65_10 81_3
           61_13: 23_1(fvec4) Load 59_26(colorMapColor)
           61_14: 23_1(fvec4) Load 59_22(outcol)
           133_2: 23_1(fvec4) FMul 61_14 61_13
                              Store 59_22(outcol) 133_2
           65_11:  32_15(ptr) AccessChain 59_1(iVert) 43_6 uint(3)
           61_15: 22_1(float) Load 65_11
           65_12:   32_4(ptr) AccessChain 59_26(colorMapColor) uint(3)
           61_16: 22_1(float) Load 65_12
           133_3: 22_1(float) FMul 61_15 61_16
                              Store 59_28(alpha) 133_3
           61_17: 23_1(fvec4) Load 59_22(outcol)
                              Store 59_29(param) 61_17
            57_2: 23_1(fvec4) FunctionCall 54_5(TDDither(vf4;) 59_29(param)
                              Store 59_22(outcol) 57_2
           61_18: 22_1(float) Load 59_28(alpha)
           61_19: 23_1(fvec4) Load 59_22(outcol)
            79_3: 23_2(fvec3) VectorShuffle 61_19 61_19 0 1 2
           142_1: 23_2(fvec3) VectorTimesScalar 79_3 61_18
           65_13:   32_4(ptr) AccessChain 59_22(outcol) uint(0)
            81_4: 22_1(float) CompositeExtract 142_1 0
                              Store 65_13 81_4
           65_14:   32_4(ptr) AccessChain 59_22(outcol) uint(1)
            81_5: 22_1(float) CompositeExtract 142_1 1
                              Store 65_14 81_5
           65_15:   32_4(ptr) AccessChain 59_22(outcol) uint(2)
            81_6: 22_1(float) CompositeExtract 142_1 2
                              Store 65_15 81_6
           61_20: 22_1(float) Load 59_28(alpha)
                              Store 59_30(param) 61_20
            57_3:        19_1 FunctionCall 54_8(TDAlphaTest(f1;) 59_30(param)
           61_21: 22_1(float) Load 59_28(alpha)
           65_16:   32_4(ptr) AccessChain 59_22(outcol) uint(3)
                              Store 65_16 61_21
           61_22: 23_1(fvec4) Load 59_22(outcol)
                              Store 59_31(param) 61_22
            57_4: 23_1(fvec4) FunctionCall 54_48(TDOutputSwizzle(vf4;) 59_31(param)
           65_17:  32_17(ptr) AccessChain 59_4(oFragColor) 43_6
                              Store 65_17 57_4
                              Store 59_32(i) 43_7
                              Branch 248_2
           248_2:             Label
                              LoopMerge 248_6 248_5 None
                              Branch 248_3
           248_3:             Label
           61_23:   21_1(int) Load 59_32(i)
           177_1:  20_1(bool) SLessThan 61_23 43_7
                              BranchConditional 177_1 248_4 248_6
           248_4:               Label
           61_24:   21_1(int)   Load 59_32(i)
           65_18:  32_17(ptr)   AccessChain 59_4(oFragColor) 61_24
                                Store 65_18 44_1
                                Branch 248_5
           248_5:               Label
           61_25:   21_1(int)   Load 59_32(i)
           128_1:   21_1(int)   IAdd 61_25 43_7
                                Store 59_32(i) 128_1
                                Branch 248_2
           248_6:             Label
                              Return
                              FunctionEnd
54_2(TDColor(vf4;): 23_1(fvec4) Function None 33_2
     55_1(color):   32_1(ptr) FunctionParameter
           248_7:             Label
           61_26: 23_1(fvec4) Load 55_1(color)
                              ReturnValue 61_26
                              FunctionEnd
54_3(TDCheckOrderIndTrans():        19_1 Function None 33_1
           248_8:             Label
                              Return
                              FunctionEnd
54_4(TDCheckDiscard():        19_1 Function None 33_1
           248_9:             Label
            57_5:        19_1 FunctionCall 54_3(TDCheckOrderIndTrans()
                              Return
                              FunctionEnd
54_5(TDDither(vf4;): 23_1(fvec4) Function None 33_2
     55_2(color):   32_1(ptr) FunctionParameter
          248_10:             Label
        59_33(d):   32_4(ptr) Variable Function
           61_27:        27_2 Load 59_5(sTDNoiseMap)
           61_28: 23_1(fvec4) Load 59_6(gl_FragCoord)
            79_4: 23_3(fvec2) VectorShuffle 61_28 61_28 0 1
            80_2: 23_3(fvec2) CompositeConstruct 43_8 43_8
           136_1: 23_3(fvec2) FDiv 79_4 80_2
            87_2: 23_1(fvec4) ImageSampleImplicitLod 61_27 136_1
            81_7: 22_1(float) CompositeExtract 87_2 0
                              Store 59_33(d) 81_7
           61_29: 22_1(float) Load 59_33(d)
           131_1: 22_1(float) FSub 61_29 43_9
                              Store 59_33(d) 131_1
           61_30: 22_1(float) Load 59_33(d)
           136_2: 22_1(float) FDiv 61_30 43_8
                              Store 59_33(d) 136_2
           61_31: 23_1(fvec4) Load 55_2(color)
            79_5: 23_2(fvec3) VectorShuffle 61_31 61_31 0 1 2
           61_32: 22_1(float) Load 59_33(d)
            80_3: 23_2(fvec3) CompositeConstruct 61_32 61_32 61_32
           129_2: 23_2(fvec3) FAdd 79_5 80_3
           65_19:   32_4(ptr) AccessChain 55_2(color) uint(3)
           61_33: 22_1(float) Load 65_19
            81_8: 22_1(float) CompositeExtract 129_2 0
            81_9: 22_1(float) CompositeExtract 129_2 1
           81_10: 22_1(float) CompositeExtract 129_2 2
            80_4: 23_1(fvec4) CompositeConstruct 81_8 81_9 81_10 61_33
                              ReturnValue 80_4
                              FunctionEnd
54_6(TDFrontFacing(vf3;vf3;):  20_1(bool) Function None 33_3
       55_3(pos):   32_2(ptr) FunctionParameter
    55_4(normal):   32_2(ptr) FunctionParameter
          248_11:             Label
           61_34:  20_1(bool) Load 59_7(gl_FrontFacing)
                              ReturnValue 61_34
                              FunctionEnd
54_7(TDAttenuateLight(i1;f1;): 22_1(float) Function None 33_4
     55_5(index):   32_3(ptr) FunctionParameter
 55_6(lightDist):   32_4(ptr) FunctionParameter
          248_12:             Label
                              ReturnValue 43_10
                              FunctionEnd
54_8(TDAlphaTest(f1;):        19_1 Function None 33_5
     55_7(alpha):   32_4(ptr) FunctionParameter
          248_13:             Label
                              Return
                              FunctionEnd
54_9(TDHardShadow(i1;vf3;): 22_1(float) Function None 33_6
55_8(lightIndex):   32_3(ptr) FunctionParameter
55_9(worldSpacePos):   32_2(ptr) FunctionParameter
          248_14:             Label
                              ReturnValue 43_1
                              FunctionEnd
54_10(TDSoftShadow(i1;vf3;i1;i1;): 22_1(float) Function None 33_7
55_10(lightIndex):   32_3(ptr) FunctionParameter
55_11(worldSpacePos):   32_2(ptr) FunctionParameter
  55_12(samples):   32_3(ptr) FunctionParameter
    55_13(steps):   32_3(ptr) FunctionParameter
          248_15:             Label
                              ReturnValue 43_1
                              FunctionEnd
54_11(TDSoftShadow(i1;vf3;): 22_1(float) Function None 33_6
55_14(lightIndex):   32_3(ptr) FunctionParameter
55_15(worldSpacePos):   32_2(ptr) FunctionParameter
          248_16:             Label
                              ReturnValue 43_1
                              FunctionEnd
54_12(TDShadow(i1;vf3;): 22_1(float) Function None 33_6
55_16(lightIndex):   32_3(ptr) FunctionParameter
55_17(worldSpacePos):   32_2(ptr) FunctionParameter
          248_17:             Label
                              ReturnValue 43_1
                              FunctionEnd
54_13(iTDRadicalInverse_VdC(u1;): 22_1(float) Function None 33_8
     55_18(bits):   32_5(ptr) FunctionParameter
          248_18:             Label
           61_35:   21_2(int) Load 55_18(bits)
           196_1:   21_2(int) ShiftLeftLogical 61_35 uint(16)
           61_36:   21_2(int) Load 55_18(bits)
           194_1:   21_2(int) ShiftRightLogical 61_36 uint(16)
           197_1:   21_2(int) BitwiseOr 196_1 194_1
                              Store 55_18(bits) 197_1
           61_37:   21_2(int) Load 55_18(bits)
           199_1:   21_2(int) BitwiseAnd 61_37 uint(1431655765)
           196_2:   21_2(int) ShiftLeftLogical 199_1 uint(1)
           61_38:   21_2(int) Load 55_18(bits)
           199_2:   21_2(int) BitwiseAnd 61_38 uint(2863311530)
           194_2:   21_2(int) ShiftRightLogical 199_2 uint(1)
           197_2:   21_2(int) BitwiseOr 196_2 194_2
                              Store 55_18(bits) 197_2
           61_39:   21_2(int) Load 55_18(bits)
           199_3:   21_2(int) BitwiseAnd 61_39 uint(858993459)
           196_3:   21_2(int) ShiftLeftLogical 199_3 uint(2)
           61_40:   21_2(int) Load 55_18(bits)
           199_4:   21_2(int) BitwiseAnd 61_40 uint(3435973836)
           194_3:   21_2(int) ShiftRightLogical 199_4 uint(2)
           197_3:   21_2(int) BitwiseOr 196_3 194_3
                              Store 55_18(bits) 197_3
           61_41:   21_2(int) Load 55_18(bits)
           199_5:   21_2(int) BitwiseAnd 61_41 uint(252645135)
           196_4:   21_2(int) ShiftLeftLogical 199_5 uint(4)
           61_42:   21_2(int) Load 55_18(bits)
           199_6:   21_2(int) BitwiseAnd 61_42 uint(4042322160)
           194_4:   21_2(int) ShiftRightLogical 199_6 uint(4)
           197_4:   21_2(int) BitwiseOr 196_4 194_4
                              Store 55_18(bits) 197_4
           61_43:   21_2(int) Load 55_18(bits)
           199_7:   21_2(int) BitwiseAnd 61_43 uint(16711935)
           196_5:   21_2(int) ShiftLeftLogical 199_7 uint(8)
           61_44:   21_2(int) Load 55_18(bits)
           199_8:   21_2(int) BitwiseAnd 61_44 uint(4278255360)
           194_5:   21_2(int) ShiftRightLogical 199_8 uint(8)
           197_5:   21_2(int) BitwiseOr 196_5 194_5
                              Store 55_18(bits) 197_5
           61_45:   21_2(int) Load 55_18(bits)
           112_1: 22_1(float) ConvertUToF 61_45
           133_4: 22_1(float) FMul 112_1 43_11
                              ReturnValue 133_4
                              FunctionEnd
54_14(iTDHammersley(u1;u1;): 23_3(fvec2) Function None 33_9
        55_19(i):   32_5(ptr) FunctionParameter
        55_20(N):   32_5(ptr) FunctionParameter
          248_19:             Label
    59_34(param):   32_5(ptr) Variable Function
           61_46:   21_2(int) Load 55_19(i)
           112_2: 22_1(float) ConvertUToF 61_46
           61_47:   21_2(int) Load 55_20(N)
           112_3: 22_1(float) ConvertUToF 61_47
           136_3: 22_1(float) FDiv 112_2 112_3
           61_48:   21_2(int) Load 55_19(i)
                              Store 59_34(param) 61_48
            57_6: 22_1(float) FunctionCall 54_13(iTDRadicalInverse_VdC(u1;) 59_34(param)
            80_5: 23_3(fvec2) CompositeConstruct 136_3 57_6
                              ReturnValue 80_5
                              FunctionEnd
54_15(iTDImportanceSampleGGX(vf2;f1;vf3;): 23_2(fvec3) Function None 33_10
       55_21(Xi):   32_6(ptr) FunctionParameter
55_22(roughness2):   32_4(ptr) FunctionParameter
        55_23(N):   32_2(ptr) FunctionParameter
          248_20:             Label
        59_35(a):   32_4(ptr) Variable Function
      59_36(phi):   32_4(ptr) Variable Function
 59_37(cosTheta):   32_4(ptr) Variable Function
 59_38(sinTheta):   32_4(ptr) Variable Function
        59_39(H):   32_2(ptr) Variable Function
 59_40(upVector):   32_2(ptr) Variable Function
 59_41(tangentX):   32_2(ptr) Variable Function
 59_42(tangentY):   32_2(ptr) Variable Function
59_43(worldResult):   32_2(ptr) Variable Function
           61_49: 22_1(float) Load 55_22(roughness2)
                              Store 59_35(a) 61_49
           65_20:   32_4(ptr) AccessChain 55_21(Xi) uint(0)
           61_50: 22_1(float) Load 65_20
           133_5: 22_1(float) FMul 43_12 61_50
                              Store 59_36(phi) 133_5
           65_21:   32_4(ptr) AccessChain 55_21(Xi) uint(1)
           61_51: 22_1(float) Load 65_21
           131_2: 22_1(float) FSub 43_10 61_51
           61_52: 22_1(float) Load 59_35(a)
           61_53: 22_1(float) Load 59_35(a)
           133_6: 22_1(float) FMul 61_52 61_53
           131_3: 22_1(float) FSub 133_6 43_10
           65_22:   32_4(ptr) AccessChain 55_21(Xi) uint(1)
           61_54: 22_1(float) Load 65_22
           133_7: 22_1(float) FMul 131_3 61_54
           129_3: 22_1(float) FAdd 43_10 133_7
           136_4: 22_1(float) FDiv 131_2 129_3
          1-31_1: 22_1(float) ExtInst 11_1(GLSL.std.450) 31(Sqrt) 136_4
                              Store 59_37(cosTheta) 1-31_1
           61_55: 22_1(float) Load 59_37(cosTheta)
           61_56: 22_1(float) Load 59_37(cosTheta)
           133_8: 22_1(float) FMul 61_55 61_56
           131_4: 22_1(float) FSub 43_10 133_8
          1-31_2: 22_1(float) ExtInst 11_1(GLSL.std.450) 31(Sqrt) 131_4
                              Store 59_38(sinTheta) 1-31_2
           61_57: 22_1(float) Load 59_38(sinTheta)
           61_58: 22_1(float) Load 59_36(phi)
          1-14_1: 22_1(float) ExtInst 11_1(GLSL.std.450) 14(Cos) 61_58
           133_9: 22_1(float) FMul 61_57 1-14_1
           65_23:   32_4(ptr) AccessChain 59_39(H) uint(0)
                              Store 65_23 133_9
           61_59: 22_1(float) Load 59_38(sinTheta)
           61_60: 22_1(float) Load 59_36(phi)
          1-13_1: 22_1(float) ExtInst 11_1(GLSL.std.450) 13(Sin) 61_60
          133_10: 22_1(float) FMul 61_59 1-13_1
           65_24:   32_4(ptr) AccessChain 59_39(H) uint(1)
                              Store 65_24 133_10
           61_61: 22_1(float) Load 59_37(cosTheta)
           65_25:   32_4(ptr) AccessChain 59_39(H) uint(2)
                              Store 65_25 61_61
           65_26:   32_4(ptr) AccessChain 55_23(N) uint(2)
           61_62: 22_1(float) Load 65_26
           1-4_1: 22_1(float) ExtInst 11_1(GLSL.std.450) 4(FAbs) 61_62
           184_1:  20_1(bool) FOrdLessThan 1-4_1 43_13
            80_6: 23_5(bvec3) CompositeConstruct 184_1 184_1 184_1
           169_1: 23_2(fvec3) Select 80_6 44_2 44_3
                              Store 59_40(upVector) 169_1
           61_63: 23_2(fvec3) Load 59_40(upVector)
           61_64: 23_2(fvec3) Load 55_23(N)
          1-68_1: 23_2(fvec3) ExtInst 11_1(GLSL.std.450) 68(Cross) 61_63 61_64
          1-69_1: 23_2(fvec3) ExtInst 11_1(GLSL.std.450) 69(Normalize) 1-68_1
                              Store 59_41(tangentX) 1-69_1
           61_65: 23_2(fvec3) Load 55_23(N)
           61_66: 23_2(fvec3) Load 59_41(tangentX)
          1-68_2: 23_2(fvec3) ExtInst 11_1(GLSL.std.450) 68(Cross) 61_65 61_66
                              Store 59_42(tangentY) 1-68_2
           61_67: 23_2(fvec3) Load 59_41(tangentX)
           65_27:   32_4(ptr) AccessChain 59_39(H) uint(0)
           61_68: 22_1(float) Load 65_27
           142_2: 23_2(fvec3) VectorTimesScalar 61_67 61_68
           61_69: 23_2(fvec3) Load 59_42(tangentY)
           65_28:   32_4(ptr) AccessChain 59_39(H) uint(1)
           61_70: 22_1(float) Load 65_28
           142_3: 23_2(fvec3) VectorTimesScalar 61_69 61_70
           129_4: 23_2(fvec3) FAdd 142_2 142_3
           61_71: 23_2(fvec3) Load 55_23(N)
           65_29:   32_4(ptr) AccessChain 59_39(H) uint(2)
           61_72: 22_1(float) Load 65_29
           142_4: 23_2(fvec3) VectorTimesScalar 61_71 61_72
           129_5: 23_2(fvec3) FAdd 129_4 142_4
                              Store 59_43(worldResult) 129_5
           61_73: 23_2(fvec3) Load 59_43(worldResult)
                              ReturnValue 61_73
                              FunctionEnd
54_16(iTDDistributionGGX(vf3;vf3;f1;): 22_1(float) Function None 33_11
   55_24(normal):   32_2(ptr) FunctionParameter
55_25(half_vector):   32_2(ptr) FunctionParameter
55_26(roughness2):   32_4(ptr) FunctionParameter
          248_21:             Label
    59_44(NdotH):   32_4(ptr) Variable Function
   59_45(alpha2):   32_4(ptr) Variable Function
    59_46(denom):   32_4(ptr) Variable Function
           61_74: 23_2(fvec3) Load 55_24(normal)
           61_75: 23_2(fvec3) Load 55_25(half_vector)
           148_1: 22_1(float) Dot 61_74 61_75
          1-43_1: 22_1(float) ExtInst 11_1(GLSL.std.450) 43(FClamp) 148_1 43_14 43_10
                              Store 59_44(NdotH) 1-43_1
           61_76: 22_1(float) Load 55_26(roughness2)
           61_77: 22_1(float) Load 55_26(roughness2)
          133_11: 22_1(float) FMul 61_76 61_77
                              Store 59_45(alpha2) 133_11
           61_78: 22_1(float) Load 59_44(NdotH)
           61_79: 22_1(float) Load 59_44(NdotH)
          133_12: 22_1(float) FMul 61_78 61_79
           61_80: 22_1(float) Load 59_45(alpha2)
           131_5: 22_1(float) FSub 61_80 43_10
          133_13: 22_1(float) FMul 133_12 131_5
           129_6: 22_1(float) FAdd 133_13 43_10
                              Store 59_46(denom) 129_6
           61_81: 22_1(float) Load 59_46(denom)
          1-40_1: 22_1(float) ExtInst 11_1(GLSL.std.450) 40(FMax) 43_15 61_81
                              Store 59_46(denom) 1-40_1
           61_82: 22_1(float) Load 59_45(alpha2)
           61_83: 22_1(float) Load 59_46(denom)
          133_14: 22_1(float) FMul 43_16 61_83
           61_84: 22_1(float) Load 59_46(denom)
          133_15: 22_1(float) FMul 133_14 61_84
           136_5: 22_1(float) FDiv 61_82 133_15
                              ReturnValue 136_5
                              FunctionEnd
54_17(iTDCalcF(vf3;f1;): 23_2(fvec3) Function None 33_12
       55_27(F0):   32_2(ptr) FunctionParameter
    55_28(VdotH):   32_4(ptr) FunctionParameter
          248_22:             Label
           61_85: 23_2(fvec3) Load 55_27(F0)
           61_86: 23_2(fvec3) Load 55_27(F0)
           131_6: 23_2(fvec3) FSub 44_4 61_86
           61_87: 22_1(float) Load 55_28(VdotH)
          133_16: 22_1(float) FMul 43_18 61_87
           131_7: 22_1(float) FSub 133_16 43_19
           61_88: 22_1(float) Load 55_28(VdotH)
          133_17: 22_1(float) FMul 131_7 61_88
          1-26_1: 22_1(float) ExtInst 11_1(GLSL.std.450) 26(Pow) 43_17 133_17
           142_5: 23_2(fvec3) VectorTimesScalar 131_6 1-26_1
           129_7: 23_2(fvec3) FAdd 61_85 142_5
                              ReturnValue 129_7
                              FunctionEnd
54_18(iTDCalcG(f1;f1;f1;): 22_1(float) Function None 33_13
    55_29(NdotL):   32_4(ptr) FunctionParameter
    55_30(NdotV):   32_4(ptr) FunctionParameter
        55_31(k):   32_4(ptr) FunctionParameter
          248_23:             Label
       59_47(Gl):   32_4(ptr) Variable Function
       59_48(Gv):   32_4(ptr) Variable Function
           61_89: 22_1(float) Load 55_29(NdotL)
           61_90: 22_1(float) Load 55_31(k)
           131_8: 22_1(float) FSub 43_10 61_90
          133_18: 22_1(float) FMul 61_89 131_8
           61_91: 22_1(float) Load 55_31(k)
           129_8: 22_1(float) FAdd 133_18 61_91
           136_6: 22_1(float) FDiv 43_10 129_8
                              Store 59_47(Gl) 136_6
           61_92: 22_1(float) Load 55_30(NdotV)
           61_93: 22_1(float) Load 55_31(k)
           131_9: 22_1(float) FSub 43_10 61_93
          133_19: 22_1(float) FMul 61_92 131_9
           61_94: 22_1(float) Load 55_31(k)
           129_9: 22_1(float) FAdd 133_19 61_94
           136_7: 22_1(float) FDiv 43_10 129_9
                              Store 59_48(Gv) 136_7
           61_95: 22_1(float) Load 59_47(Gl)
           61_96: 22_1(float) Load 59_48(Gv)
          133_20: 22_1(float) FMul 61_95 61_96
                              ReturnValue 133_20
                              FunctionEnd
54_19(TDLightingPBR(i1;vf3;vf3;vf3;vf3;f1;vf3;vf3;f1;):30_1(TDPBRResult) Function None 33_14
    55_32(index):   32_3(ptr) FunctionParameter
55_33(diffuseColor):   32_2(ptr) FunctionParameter
55_34(specularColor):   32_2(ptr) FunctionParameter
55_35(worldSpacePos):   32_2(ptr) FunctionParameter
   55_36(normal):   32_2(ptr) FunctionParameter
55_37(shadowStrength):   32_4(ptr) FunctionParameter
55_38(shadowColor):   32_2(ptr) FunctionParameter
55_39(camVector):   32_2(ptr) FunctionParameter
55_40(roughness):   32_4(ptr) FunctionParameter
          248_24:             Label
      59_49(res):  32_20(ptr) Variable Function
           61_97:30_1(TDPBRResult) Load 59_49(res)
                              ReturnValue 61_97
                              FunctionEnd
54_20(TDLightingPBR(vf3;vf3;f1;i1;vf3;vf3;vf3;vf3;f1;vf3;vf3;f1;):        19_1 Function None 33_15
55_41(diffuseContrib):   32_2(ptr) FunctionParameter
55_42(specularContrib):   32_2(ptr) FunctionParameter
55_43(shadowStrengthOut):   32_4(ptr) FunctionParameter
    55_44(index):   32_3(ptr) FunctionParameter
55_45(diffuseColor):   32_2(ptr) FunctionParameter
55_46(specularColor):   32_2(ptr) FunctionParameter
55_47(worldSpacePos):   32_2(ptr) FunctionParameter
   55_48(normal):   32_2(ptr) FunctionParameter
55_49(shadowStrength):   32_4(ptr) FunctionParameter
55_50(shadowColor):   32_2(ptr) FunctionParameter
55_51(camVector):   32_2(ptr) FunctionParameter
55_52(roughness):   32_4(ptr) FunctionParameter
          248_25:             Label
      59_50(res):  32_20(ptr) Variable Function
    59_51(param):   32_3(ptr) Variable Function
    59_52(param):   32_2(ptr) Variable Function
    59_53(param):   32_2(ptr) Variable Function
    59_54(param):   32_2(ptr) Variable Function
    59_55(param):   32_2(ptr) Variable Function
    59_56(param):   32_4(ptr) Variable Function
    59_57(param):   32_2(ptr) Variable Function
    59_58(param):   32_2(ptr) Variable Function
    59_59(param):   32_4(ptr) Variable Function
           61_98:   21_1(int) Load 55_44(index)
                              Store 59_51(param) 61_98
           61_99: 23_2(fvec3) Load 55_45(diffuseColor)
                              Store 59_52(param) 61_99
          61_100: 23_2(fvec3) Load 55_46(specularColor)
                              Store 59_53(param) 61_100
          61_101: 23_2(fvec3) Load 55_47(worldSpacePos)
                              Store 59_54(param) 61_101
          61_102: 23_2(fvec3) Load 55_48(normal)
                              Store 59_55(param) 61_102
          61_103: 22_1(float) Load 55_49(shadowStrength)
                              Store 59_56(param) 61_103
          61_104: 23_2(fvec3) Load 55_50(shadowColor)
                              Store 59_57(param) 61_104
          61_105: 23_2(fvec3) Load 55_51(camVector)
                              Store 59_58(param) 61_105
          61_106: 22_1(float) Load 55_52(roughness)
                              Store 59_59(param) 61_106
            57_7:30_1(TDPBRResult) FunctionCall 54_19(TDLightingPBR(i1;vf3;vf3;vf3;vf3;f1;vf3;vf3;f1;) 59_51(param) 59_52(param) 59_53(param) 59_54(param) 59_55(param) 59_56(param) 59_57(param) 59_58(param) 59_59(param)
                              Store 59_50(res) 57_7
           65_30:   32_2(ptr) AccessChain 59_50(res) 43_6
          61_107: 23_2(fvec3) Load 65_30
                              Store 55_41(diffuseContrib) 61_107
           65_31:   32_2(ptr) AccessChain 59_50(res) 43_7
          61_108: 23_2(fvec3) Load 65_31
                              Store 55_42(specularContrib) 61_108
           65_32:   32_4(ptr) AccessChain 59_50(res) 43_2
          61_109: 22_1(float) Load 65_32
                              Store 55_43(shadowStrengthOut) 61_109
                              Return
                              FunctionEnd
54_21(TDLightingPBR(vf3;vf3;i1;vf3;vf3;vf3;vf3;f1;vf3;vf3;f1;):        19_1 Function None 33_16
55_53(diffuseContrib):   32_2(ptr) FunctionParameter
55_54(specularContrib):   32_2(ptr) FunctionParameter
    55_55(index):   32_3(ptr) FunctionParameter
55_56(diffuseColor):   32_2(ptr) FunctionParameter
55_57(specularColor):   32_2(ptr) FunctionParameter
55_58(worldSpacePos):   32_2(ptr) FunctionParameter
   55_59(normal):   32_2(ptr) FunctionParameter
55_60(shadowStrength):   32_4(ptr) FunctionParameter
55_61(shadowColor):   32_2(ptr) FunctionParameter
55_62(camVector):   32_2(ptr) FunctionParameter
55_63(roughness):   32_4(ptr) FunctionParameter
          248_26:             Label
      59_60(res):  32_20(ptr) Variable Function
    59_61(param):   32_3(ptr) Variable Function
    59_62(param):   32_2(ptr) Variable Function
    59_63(param):   32_2(ptr) Variable Function
    59_64(param):   32_2(ptr) Variable Function
    59_65(param):   32_2(ptr) Variable Function
    59_66(param):   32_4(ptr) Variable Function
    59_67(param):   32_2(ptr) Variable Function
    59_68(param):   32_2(ptr) Variable Function
    59_69(param):   32_4(ptr) Variable Function
          61_110:   21_1(int) Load 55_55(index)
                              Store 59_61(param) 61_110
          61_111: 23_2(fvec3) Load 55_56(diffuseColor)
                              Store 59_62(param) 61_111
          61_112: 23_2(fvec3) Load 55_57(specularColor)
                              Store 59_63(param) 61_112
          61_113: 23_2(fvec3) Load 55_58(worldSpacePos)
                              Store 59_64(param) 61_113
          61_114: 23_2(fvec3) Load 55_59(normal)
                              Store 59_65(param) 61_114
          61_115: 22_1(float) Load 55_60(shadowStrength)
                              Store 59_66(param) 61_115
          61_116: 23_2(fvec3) Load 55_61(shadowColor)
                              Store 59_67(param) 61_116
          61_117: 23_2(fvec3) Load 55_62(camVector)
                              Store 59_68(param) 61_117
          61_118: 22_1(float) Load 55_63(roughness)
                              Store 59_69(param) 61_118
            57_8:30_1(TDPBRResult) FunctionCall 54_19(TDLightingPBR(i1;vf3;vf3;vf3;vf3;f1;vf3;vf3;f1;) 59_61(param) 59_62(param) 59_63(param) 59_64(param) 59_65(param) 59_66(param) 59_67(param) 59_68(param) 59_69(param)
                              Store 59_60(res) 57_8
           65_33:   32_2(ptr) AccessChain 59_60(res) 43_6
          61_119: 23_2(fvec3) Load 65_33
                              Store 55_53(diffuseContrib) 61_119
           65_34:   32_2(ptr) AccessChain 59_60(res) 43_7
          61_120: 23_2(fvec3) Load 65_34
                              Store 55_54(specularContrib) 61_120
                              Return
                              FunctionEnd
54_22(TDEnvLightingPBR(i1;vf3;vf3;vf3;vf3;f1;f1;):30_1(TDPBRResult) Function None 33_17
    55_64(index):   32_3(ptr) FunctionParameter
55_65(diffuseColor):   32_2(ptr) FunctionParameter
55_66(specularColor):   32_2(ptr) FunctionParameter
   55_67(normal):   32_2(ptr) FunctionParameter
55_68(camVector):   32_2(ptr) FunctionParameter
55_69(roughness):   32_4(ptr) FunctionParameter
55_70(ambientOcclusion):   32_4(ptr) FunctionParameter
          248_27:             Label
      59_70(res):  32_20(ptr) Variable Function
          61_121:30_1(TDPBRResult) Load 59_70(res)
                              ReturnValue 61_121
                              FunctionEnd
54_23(TDEnvLightingPBR(vf3;vf3;i1;vf3;vf3;vf3;vf3;f1;f1;):        19_1 Function None 33_18
55_71(diffuseContrib):   32_2(ptr) FunctionParameter
55_72(specularContrib):   32_2(ptr) FunctionParameter
    55_73(index):   32_3(ptr) FunctionParameter
55_74(diffuseColor):   32_2(ptr) FunctionParameter
55_75(specularColor):   32_2(ptr) FunctionParameter
   55_76(normal):   32_2(ptr) FunctionParameter
55_77(camVector):   32_2(ptr) FunctionParameter
55_78(roughness):   32_4(ptr) FunctionParameter
55_79(ambientOcclusion):   32_4(ptr) FunctionParameter
          248_28:             Label
      59_71(res):  32_20(ptr) Variable Function
    59_72(param):   32_3(ptr) Variable Function
    59_73(param):   32_2(ptr) Variable Function
    59_74(param):   32_2(ptr) Variable Function
    59_75(param):   32_2(ptr) Variable Function
    59_76(param):   32_2(ptr) Variable Function
    59_77(param):   32_4(ptr) Variable Function
    59_78(param):   32_4(ptr) Variable Function
          61_122:   21_1(int) Load 55_73(index)
                              Store 59_72(param) 61_122
          61_123: 23_2(fvec3) Load 55_74(diffuseColor)
                              Store 59_73(param) 61_123
          61_124: 23_2(fvec3) Load 55_75(specularColor)
                              Store 59_74(param) 61_124
          61_125: 23_2(fvec3) Load 55_76(normal)
                              Store 59_75(param) 61_125
          61_126: 23_2(fvec3) Load 55_77(camVector)
                              Store 59_76(param) 61_126
          61_127: 22_1(float) Load 55_78(roughness)
                              Store 59_77(param) 61_127
          61_128: 22_1(float) Load 55_79(ambientOcclusion)
                              Store 59_78(param) 61_128
            57_9:30_1(TDPBRResult) FunctionCall 54_22(TDEnvLightingPBR(i1;vf3;vf3;vf3;vf3;f1;f1;) 59_72(param) 59_73(param) 59_74(param) 59_75(param) 59_76(param) 59_77(param) 59_78(param)
                              Store 59_71(res) 57_9
           65_35:   32_2(ptr) AccessChain 59_71(res) 43_6
          61_129: 23_2(fvec3) Load 65_35
                              Store 55_71(diffuseContrib) 61_129
           65_36:   32_2(ptr) AccessChain 59_71(res) 43_7
          61_130: 23_2(fvec3) Load 65_36
                              Store 55_72(specularContrib) 61_130
                              Return
                              FunctionEnd
54_24(TDLighting(i1;vf3;vf3;f1;vf3;vf3;f1;f1;):30_2(TDPhongResult) Function None 33_19
    55_80(index):   32_3(ptr) FunctionParameter
55_81(worldSpacePos):   32_2(ptr) FunctionParameter
   55_82(normal):   32_2(ptr) FunctionParameter
55_83(shadowStrength):   32_4(ptr) FunctionParameter
55_84(shadowColor):   32_2(ptr) FunctionParameter
55_85(camVector):   32_2(ptr) FunctionParameter
55_86(shininess):   32_4(ptr) FunctionParameter
55_87(shininess2):   32_4(ptr) FunctionParameter
          248_29:             Label
      59_79(res):  32_21(ptr) Variable Function
          61_131:   21_1(int) Load 55_80(index)
                              SelectionMerge 248_31 None
                              Switch 61_131 248_30
          248_30:               Label
           65_37:   32_2(ptr)   AccessChain 59_79(res) 43_6
                                Store 65_37 44_5
           65_38:   32_2(ptr)   AccessChain 59_79(res) 43_7
                                Store 65_38 44_5
           65_39:   32_2(ptr)   AccessChain 59_79(res) 43_2
                                Store 65_39 44_5
           65_40:   32_4(ptr)   AccessChain 59_79(res) 43_5
                                Store 65_40 43_1
                                Branch 248_31
          248_31:             Label
          61_132:30_2(TDPhongResult) Load 59_79(res)
                              ReturnValue 61_132
                              FunctionEnd
54_25(TDLighting(vf3;vf3;vf3;f1;i1;vf3;vf3;f1;vf3;vf3;f1;f1;):        19_1 Function None 33_20
55_88(diffuseContrib):   32_2(ptr) FunctionParameter
55_89(specularContrib):   32_2(ptr) FunctionParameter
55_90(specularContrib2):   32_2(ptr) FunctionParameter
55_91(shadowStrengthOut):   32_4(ptr) FunctionParameter
    55_92(index):   32_3(ptr) FunctionParameter
55_93(worldSpacePos):   32_2(ptr) FunctionParameter
   55_94(normal):   32_2(ptr) FunctionParameter
55_95(shadowStrength):   32_4(ptr) FunctionParameter
55_96(shadowColor):   32_2(ptr) FunctionParameter
55_97(camVector):   32_2(ptr) FunctionParameter
55_98(shininess):   32_4(ptr) FunctionParameter
55_99(shininess2):   32_4(ptr) FunctionParameter
          248_32:             Label
      59_80(res):  32_21(ptr) Variable Function
          61_133:   21_1(int) Load 55_92(index)
                              SelectionMerge 248_34 None
                              Switch 61_133 248_33
          248_33:               Label
           65_41:   32_2(ptr)   AccessChain 59_80(res) 43_6
                                Store 65_41 44_5
           65_42:   32_2(ptr)   AccessChain 59_80(res) 43_7
                                Store 65_42 44_5
           65_43:   32_2(ptr)   AccessChain 59_80(res) 43_2
                                Store 65_43 44_5
           65_44:   32_4(ptr)   AccessChain 59_80(res) 43_5
                                Store 65_44 43_1
                                Branch 248_34
          248_34:             Label
           65_45:   32_2(ptr) AccessChain 59_80(res) 43_6
          61_134: 23_2(fvec3) Load 65_45
                              Store 55_88(diffuseContrib) 61_134
           65_46:   32_2(ptr) AccessChain 59_80(res) 43_7
          61_135: 23_2(fvec3) Load 65_46
                              Store 55_89(specularContrib) 61_135
           65_47:   32_2(ptr) AccessChain 59_80(res) 43_2
          61_136: 23_2(fvec3) Load 65_47
                              Store 55_90(specularContrib2) 61_136
           65_48:   32_4(ptr) AccessChain 59_80(res) 43_5
          61_137: 22_1(float) Load 65_48
                              Store 55_91(shadowStrengthOut) 61_137
                              Return
                              FunctionEnd
54_26(TDLighting(vf3;vf3;vf3;i1;vf3;vf3;f1;vf3;vf3;f1;f1;):        19_1 Function None 33_21
55_100(diffuseContrib):   32_2(ptr) FunctionParameter
55_101(specularContrib):   32_2(ptr) FunctionParameter
55_102(specularContrib2):   32_2(ptr) FunctionParameter
   55_103(index):   32_3(ptr) FunctionParameter
55_104(worldSpacePos):   32_2(ptr) FunctionParameter
  55_105(normal):   32_2(ptr) FunctionParameter
55_106(shadowStrength):   32_4(ptr) FunctionParameter
55_107(shadowColor):   32_2(ptr) FunctionParameter
55_108(camVector):   32_2(ptr) FunctionParameter
55_109(shininess):   32_4(ptr) FunctionParameter
55_110(shininess2):   32_4(ptr) FunctionParameter
          248_35:             Label
      59_81(res):  32_21(ptr) Variable Function
          61_138:   21_1(int) Load 55_103(index)
                              SelectionMerge 248_37 None
                              Switch 61_138 248_36
          248_36:               Label
           65_49:   32_2(ptr)   AccessChain 59_81(res) 43_6
                                Store 65_49 44_5
           65_50:   32_2(ptr)   AccessChain 59_81(res) 43_7
                                Store 65_50 44_5
           65_51:   32_2(ptr)   AccessChain 59_81(res) 43_2
                                Store 65_51 44_5
           65_52:   32_4(ptr)   AccessChain 59_81(res) 43_5
                                Store 65_52 43_1
                                Branch 248_37
          248_37:             Label
           65_53:   32_2(ptr) AccessChain 59_81(res) 43_6
          61_139: 23_2(fvec3) Load 65_53
                              Store 55_100(diffuseContrib) 61_139
           65_54:   32_2(ptr) AccessChain 59_81(res) 43_7
          61_140: 23_2(fvec3) Load 65_54
                              Store 55_101(specularContrib) 61_140
           65_55:   32_2(ptr) AccessChain 59_81(res) 43_2
          61_141: 23_2(fvec3) Load 65_55
                              Store 55_102(specularContrib2) 61_141
                              Return
                              FunctionEnd
54_27(TDLighting(vf3;vf3;i1;vf3;vf3;f1;vf3;vf3;f1;):        19_1 Function None 33_22
55_111(diffuseContrib):   32_2(ptr) FunctionParameter
55_112(specularContrib):   32_2(ptr) FunctionParameter
   55_113(index):   32_3(ptr) FunctionParameter
55_114(worldSpacePos):   32_2(ptr) FunctionParameter
  55_115(normal):   32_2(ptr) FunctionParameter
55_116(shadowStrength):   32_4(ptr) FunctionParameter
55_117(shadowColor):   32_2(ptr) FunctionParameter
55_118(camVector):   32_2(ptr) FunctionParameter
55_119(shininess):   32_4(ptr) FunctionParameter
          248_38:             Label
      59_82(res):  32_21(ptr) Variable Function
          61_142:   21_1(int) Load 55_113(index)
                              SelectionMerge 248_40 None
                              Switch 61_142 248_39
          248_39:               Label
           65_56:   32_2(ptr)   AccessChain 59_82(res) 43_6
                                Store 65_56 44_5
           65_57:   32_2(ptr)   AccessChain 59_82(res) 43_7
                                Store 65_57 44_5
           65_58:   32_2(ptr)   AccessChain 59_82(res) 43_2
                                Store 65_58 44_5
           65_59:   32_4(ptr)   AccessChain 59_82(res) 43_5
                                Store 65_59 43_1
                                Branch 248_40
          248_40:             Label
           65_60:   32_2(ptr) AccessChain 59_82(res) 43_6
          61_143: 23_2(fvec3) Load 65_60
                              Store 55_111(diffuseContrib) 61_143
           65_61:   32_2(ptr) AccessChain 59_82(res) 43_7
          61_144: 23_2(fvec3) Load 65_61
                              Store 55_112(specularContrib) 61_144
                              Return
                              FunctionEnd
54_28(TDLighting(vf3;vf3;vf3;i1;vf3;vf3;vf3;f1;f1;):        19_1 Function None 33_23
55_120(diffuseContrib):   32_2(ptr) FunctionParameter
55_121(specularContrib):   32_2(ptr) FunctionParameter
55_122(specularContrib2):   32_2(ptr) FunctionParameter
   55_123(index):   32_3(ptr) FunctionParameter
55_124(worldSpacePos):   32_2(ptr) FunctionParameter
  55_125(normal):   32_2(ptr) FunctionParameter
55_126(camVector):   32_2(ptr) FunctionParameter
55_127(shininess):   32_4(ptr) FunctionParameter
55_128(shininess2):   32_4(ptr) FunctionParameter
          248_41:             Label
      59_83(res):  32_21(ptr) Variable Function
          61_145:   21_1(int) Load 55_123(index)
                              SelectionMerge 248_43 None
                              Switch 61_145 248_42
          248_42:               Label
           65_62:   32_2(ptr)   AccessChain 59_83(res) 43_6
                                Store 65_62 44_5
           65_63:   32_2(ptr)   AccessChain 59_83(res) 43_7
                                Store 65_63 44_5
           65_64:   32_2(ptr)   AccessChain 59_83(res) 43_2
                                Store 65_64 44_5
           65_65:   32_4(ptr)   AccessChain 59_83(res) 43_5
                                Store 65_65 43_1
                                Branch 248_43
          248_43:             Label
           65_66:   32_2(ptr) AccessChain 59_83(res) 43_6
          61_146: 23_2(fvec3) Load 65_66
                              Store 55_120(diffuseContrib) 61_146
           65_67:   32_2(ptr) AccessChain 59_83(res) 43_7
          61_147: 23_2(fvec3) Load 65_67
                              Store 55_121(specularContrib) 61_147
           65_68:   32_2(ptr) AccessChain 59_83(res) 43_2
          61_148: 23_2(fvec3) Load 65_68
                              Store 55_122(specularContrib2) 61_148
                              Return
                              FunctionEnd
54_29(TDLighting(vf3;vf3;i1;vf3;vf3;vf3;f1;):        19_1 Function None 33_24
55_129(diffuseContrib):   32_2(ptr) FunctionParameter
55_130(specularContrib):   32_2(ptr) FunctionParameter
   55_131(index):   32_3(ptr) FunctionParameter
55_132(worldSpacePos):   32_2(ptr) FunctionParameter
  55_133(normal):   32_2(ptr) FunctionParameter
55_134(camVector):   32_2(ptr) FunctionParameter
55_135(shininess):   32_4(ptr) FunctionParameter
          248_44:             Label
      59_84(res):  32_21(ptr) Variable Function
          61_149:   21_1(int) Load 55_131(index)
                              SelectionMerge 248_46 None
                              Switch 61_149 248_45
          248_45:               Label
           65_69:   32_2(ptr)   AccessChain 59_84(res) 43_6
                                Store 65_69 44_5
           65_70:   32_2(ptr)   AccessChain 59_84(res) 43_7
                                Store 65_70 44_5
           65_71:   32_2(ptr)   AccessChain 59_84(res) 43_2
                                Store 65_71 44_5
           65_72:   32_4(ptr)   AccessChain 59_84(res) 43_5
                                Store 65_72 43_1
                                Branch 248_46
          248_46:             Label
           65_73:   32_2(ptr) AccessChain 59_84(res) 43_6
          61_150: 23_2(fvec3) Load 65_73
                              Store 55_129(diffuseContrib) 61_150
           65_74:   32_2(ptr) AccessChain 59_84(res) 43_7
          61_151: 23_2(fvec3) Load 65_74
                              Store 55_130(specularContrib) 61_151
                              Return
                              FunctionEnd
54_30(TDLighting(vf3;i1;vf3;vf3;):        19_1 Function None 33_25
55_136(diffuseContrib):   32_2(ptr) FunctionParameter
   55_137(index):   32_3(ptr) FunctionParameter
55_138(worldSpacePos):   32_2(ptr) FunctionParameter
  55_139(normal):   32_2(ptr) FunctionParameter
          248_47:             Label
      59_85(res):  32_21(ptr) Variable Function
          61_152:   21_1(int) Load 55_137(index)
                              SelectionMerge 248_49 None
                              Switch 61_152 248_48
          248_48:               Label
           65_75:   32_2(ptr)   AccessChain 59_85(res) 43_6
                                Store 65_75 44_5
           65_76:   32_2(ptr)   AccessChain 59_85(res) 43_7
                                Store 65_76 44_5
           65_77:   32_2(ptr)   AccessChain 59_85(res) 43_2
                                Store 65_77 44_5
           65_78:   32_4(ptr)   AccessChain 59_85(res) 43_5
                                Store 65_78 43_1
                                Branch 248_49
          248_49:             Label
           65_79:   32_2(ptr) AccessChain 59_85(res) 43_6
          61_153: 23_2(fvec3) Load 65_79
                              Store 55_136(diffuseContrib) 61_153
                              Return
                              FunctionEnd
54_31(TDLighting(vf3;i1;vf3;vf3;f1;vf3;):        19_1 Function None 33_26
55_140(diffuseContrib):   32_2(ptr) FunctionParameter
   55_141(index):   32_3(ptr) FunctionParameter
55_142(worldSpacePos):   32_2(ptr) FunctionParameter
  55_143(normal):   32_2(ptr) FunctionParameter
55_144(shadowStrength):   32_4(ptr) FunctionParameter
55_145(shadowColor):   32_2(ptr) FunctionParameter
          248_50:             Label
      59_86(res):  32_21(ptr) Variable Function
          61_154:   21_1(int) Load 55_141(index)
                              SelectionMerge 248_52 None
                              Switch 61_154 248_51
          248_51:               Label
           65_80:   32_2(ptr)   AccessChain 59_86(res) 43_6
                                Store 65_80 44_5
           65_81:   32_2(ptr)   AccessChain 59_86(res) 43_7
                                Store 65_81 44_5
           65_82:   32_2(ptr)   AccessChain 59_86(res) 43_2
                                Store 65_82 44_5
           65_83:   32_4(ptr)   AccessChain 59_86(res) 43_5
                                Store 65_83 43_1
                                Branch 248_52
          248_52:             Label
           65_84:   32_2(ptr) AccessChain 59_86(res) 43_6
          61_155: 23_2(fvec3) Load 65_84
                              Store 55_140(diffuseContrib) 61_155
                              Return
                              FunctionEnd
54_32(TDProjMap(i1;vf3;vf4;): 23_1(fvec4) Function None 33_27
   55_146(index):   32_3(ptr) FunctionParameter
55_147(worldSpacePos):   32_2(ptr) FunctionParameter
55_148(defaultColor):   32_1(ptr) FunctionParameter
          248_53:             Label
          61_156:   21_1(int) Load 55_146(index)
                              SelectionMerge 248_55 None
                              Switch 61_156 248_54
          248_54:               Label
          61_157: 23_1(fvec4)   Load 55_148(defaultColor)
                                ReturnValue 61_157
          248_55:             Label
                              Unreachable
                              FunctionEnd
54_33(TDFog(vf4;vf3;i1;): 23_1(fvec4) Function None 33_28
   55_149(color):   32_1(ptr) FunctionParameter
55_150(lightingSpacePosition):   32_2(ptr) FunctionParameter
55_151(cameraIndex):   32_3(ptr) FunctionParameter
          248_56:             Label
          61_158:   21_1(int) Load 55_151(cameraIndex)
                              SelectionMerge 248_58 None
                              Switch 61_158 248_57 
                                     case 0: 248_57
          248_57:               Label
          61_159: 23_1(fvec4)   Load 55_149(color)
                                ReturnValue 61_159
          248_58:             Label
                              Unreachable
                              FunctionEnd
54_34(TDFog(vf4;vf3;): 23_1(fvec4) Function None 33_29
   55_152(color):   32_1(ptr) FunctionParameter
55_153(lightingSpacePosition):   32_2(ptr) FunctionParameter
          248_59:             Label
    59_87(param):   32_1(ptr) Variable Function
    59_88(param):   32_2(ptr) Variable Function
    59_89(param):   32_3(ptr) Variable Function
          61_160: 23_1(fvec4) Load 55_152(color)
                              Store 59_87(param) 61_160
          61_161: 23_2(fvec3) Load 55_153(lightingSpacePosition)
                              Store 59_88(param) 61_161
                              Store 59_89(param) 43_6
           57_10: 23_1(fvec4) FunctionCall 54_33(TDFog(vf4;vf3;i1;) 59_87(param) 59_88(param) 59_89(param)
                              ReturnValue 57_10
                              FunctionEnd
54_35(TDInstanceTexCoord(i1;vf3;): 23_2(fvec3) Function None 33_30
   55_154(index):   32_3(ptr) FunctionParameter
       55_155(t):   32_2(ptr) FunctionParameter
          248_60:             Label
    59_90(coord):   32_3(ptr) Variable Function
     59_91(samp):   32_1(ptr) Variable Function
        59_92(v):   32_2(ptr) Variable Function
          61_162:   21_1(int) Load 55_154(index)
                              Store 59_90(coord) 61_162
          61_163:        27_3 Load 59_8(sTDInstanceTexCoord)
          61_164:   21_1(int) Load 59_90(coord)
           100_1:        25_3 Image 61_163
            95_1: 23_1(fvec4) ImageFetch 100_1 61_164
                              Store 59_91(samp) 95_1
           65_85:   32_4(ptr) AccessChain 55_155(t) uint(0)
          61_165: 22_1(float) Load 65_85
           65_86:   32_4(ptr) AccessChain 59_92(v) uint(0)
                              Store 65_86 61_165
           65_87:   32_4(ptr) AccessChain 55_155(t) uint(1)
          61_166: 22_1(float) Load 65_87
           65_88:   32_4(ptr) AccessChain 59_92(v) uint(1)
                              Store 65_88 61_166
           65_89:   32_4(ptr) AccessChain 59_91(samp) uint(0)
          61_167: 22_1(float) Load 65_89
           65_90:   32_4(ptr) AccessChain 59_92(v) uint(2)
                              Store 65_90 61_167
          61_168: 23_2(fvec3) Load 59_92(v)
                              Store 55_155(t) 61_168
          61_169: 23_2(fvec3) Load 55_155(t)
                              ReturnValue 61_169
                              FunctionEnd
54_36(TDInstanceActive(i1;):  20_1(bool) Function None 33_31
   55_156(index):   32_3(ptr) FunctionParameter
          248_61:             Label
    59_93(coord):   32_3(ptr) Variable Function
     59_94(samp):   32_1(ptr) Variable Function
        59_95(v):   32_4(ptr) Variable Function
           65_91:  32_23(ptr) AccessChain 59_3 43_6
          61_170:   21_1(int) Load 65_91
          61_171:   21_1(int) Load 55_156(index)
           130_1:   21_1(int) ISub 61_171 61_170
                              Store 55_156(index) 130_1
          61_172:   21_1(int) Load 55_156(index)
                              Store 59_93(coord) 61_172
          61_173:        27_3 Load 59_9(sTDInstanceT)
          61_174:   21_1(int) Load 59_93(coord)
           100_2:        25_3 Image 61_173
            95_2: 23_1(fvec4) ImageFetch 100_2 61_174
                              Store 59_94(samp) 95_2
           65_92:   32_4(ptr) AccessChain 59_94(samp) uint(0)
          61_175: 22_1(float) Load 65_92
                              Store 59_95(v) 61_175
          61_176: 22_1(float) Load 59_95(v)
           183_1:  20_1(bool) FUnordNotEqual 61_176 43_1
                              ReturnValue 183_1
                              FunctionEnd
54_37(iTDInstanceTranslate(i1;b1;): 23_2(fvec3) Function None 33_32
   55_157(index):   32_3(ptr) FunctionParameter
55_158(instanceActive):   32_7(ptr) FunctionParameter
          248_62:             Label
59_96(origIndex):   32_3(ptr) Variable Function
    59_97(coord):   32_3(ptr) Variable Function
     59_98(samp):   32_1(ptr) Variable Function
        59_99(v):   32_2(ptr) Variable Function
          61_177:   21_1(int) Load 55_157(index)
                              Store 59_96(origIndex) 61_177
           65_93:  32_23(ptr) AccessChain 59_3 43_6
          61_178:   21_1(int) Load 65_93
          61_179:   21_1(int) Load 55_157(index)
           130_2:   21_1(int) ISub 61_179 61_178
                              Store 55_157(index) 130_2
          61_180:   21_1(int) Load 55_157(index)
                              Store 59_97(coord) 61_180
          61_181:        27_3 Load 59_9(sTDInstanceT)
          61_182:   21_1(int) Load 59_97(coord)
           100_3:        25_3 Image 61_181
            95_3: 23_1(fvec4) ImageFetch 100_3 61_182
                              Store 59_98(samp) 95_3
           65_94:   32_4(ptr) AccessChain 59_98(samp) uint(1)
          61_183: 22_1(float) Load 65_94
           65_95:   32_4(ptr) AccessChain 59_99(v) uint(0)
                              Store 65_95 61_183
           65_96:   32_4(ptr) AccessChain 59_98(samp) uint(2)
          61_184: 22_1(float) Load 65_96
           65_97:   32_4(ptr) AccessChain 59_99(v) uint(1)
                              Store 65_97 61_184
           65_98:   32_4(ptr) AccessChain 59_98(samp) uint(3)
          61_185: 22_1(float) Load 65_98
           65_99:   32_4(ptr) AccessChain 59_99(v) uint(2)
                              Store 65_99 61_185
          65_100:   32_4(ptr) AccessChain 59_98(samp) uint(0)
          61_186: 22_1(float) Load 65_100
           183_2:  20_1(bool) FUnordNotEqual 61_186 43_1
                              Store 55_158(instanceActive) 183_2
          61_187: 23_2(fvec3) Load 59_99(v)
                              ReturnValue 61_187
                              FunctionEnd
54_38(TDInstanceTranslate(i1;): 23_2(fvec3) Function None 33_33
   55_159(index):   32_3(ptr) FunctionParameter
          248_63:             Label
   59_100(coord):   32_3(ptr) Variable Function
    59_101(samp):   32_1(ptr) Variable Function
       59_102(v):   32_2(ptr) Variable Function
          65_101:  32_23(ptr) AccessChain 59_3 43_6
          61_188:   21_1(int) Load 65_101
          61_189:   21_1(int) Load 55_159(index)
           130_3:   21_1(int) ISub 61_189 61_188
                              Store 55_159(index) 130_3
          61_190:   21_1(int) Load 55_159(index)
                              Store 59_100(coord) 61_190
          61_191:        27_3 Load 59_9(sTDInstanceT)
          61_192:   21_1(int) Load 59_100(coord)
           100_4:        25_3 Image 61_191
            95_4: 23_1(fvec4) ImageFetch 100_4 61_192
                              Store 59_101(samp) 95_4
          65_102:   32_4(ptr) AccessChain 59_101(samp) uint(1)
          61_193: 22_1(float) Load 65_102
          65_103:   32_4(ptr) AccessChain 59_102(v) uint(0)
                              Store 65_103 61_193
          65_104:   32_4(ptr) AccessChain 59_101(samp) uint(2)
          61_194: 22_1(float) Load 65_104
          65_105:   32_4(ptr) AccessChain 59_102(v) uint(1)
                              Store 65_105 61_194
          65_106:   32_4(ptr) AccessChain 59_101(samp) uint(3)
          61_195: 22_1(float) Load 65_106
          65_107:   32_4(ptr) AccessChain 59_102(v) uint(2)
                              Store 65_107 61_195
          61_196: 23_2(fvec3) Load 59_102(v)
                              ReturnValue 61_196
                              FunctionEnd
54_39(TDInstanceRotateMat(i1;):        24_1 Function None 33_34
   55_160(index):   32_3(ptr) FunctionParameter
          248_64:             Label
       59_103(v):   32_2(ptr) Variable Function
       59_104(m):  32_24(ptr) Variable Function
          65_108:  32_23(ptr) AccessChain 59_3 43_6
          61_197:   21_1(int) Load 65_108
          61_198:   21_1(int) Load 55_160(index)
           130_4:   21_1(int) ISub 61_198 61_197
                              Store 55_160(index) 130_4
                              Store 59_103(v) 44_5
                              Store 59_104(m) 44_7
          61_199:        24_1 Load 59_104(m)
                              ReturnValue 61_199
                              FunctionEnd
54_40(TDInstanceScale(i1;): 23_2(fvec3) Function None 33_33
   55_161(index):   32_3(ptr) FunctionParameter
          248_65:             Label
       59_105(v):   32_2(ptr) Variable Function
          65_109:  32_23(ptr) AccessChain 59_3 43_6
          61_200:   21_1(int) Load 65_109
          61_201:   21_1(int) Load 55_161(index)
           130_5:   21_1(int) ISub 61_201 61_200
                              Store 55_161(index) 130_5
                              Store 59_105(v) 44_4
          61_202: 23_2(fvec3) Load 59_105(v)
                              ReturnValue 61_202
                              FunctionEnd
54_41(TDInstancePivot(i1;): 23_2(fvec3) Function None 33_33
   55_162(index):   32_3(ptr) FunctionParameter
          248_66:             Label
       59_106(v):   32_2(ptr) Variable Function
          65_110:  32_23(ptr) AccessChain 59_3 43_6
          61_203:   21_1(int) Load 65_110
          61_204:   21_1(int) Load 55_162(index)
           130_6:   21_1(int) ISub 61_204 61_203
                              Store 55_162(index) 130_6
                              Store 59_106(v) 44_5
          61_205: 23_2(fvec3) Load 59_106(v)
                              ReturnValue 61_205
                              FunctionEnd
54_42(TDInstanceRotTo(i1;): 23_2(fvec3) Function None 33_33
   55_163(index):   32_3(ptr) FunctionParameter
          248_67:             Label
       59_107(v):   32_2(ptr) Variable Function
          65_111:  32_23(ptr) AccessChain 59_3 43_6
          61_206:   21_1(int) Load 65_111
          61_207:   21_1(int) Load 55_163(index)
           130_7:   21_1(int) ISub 61_207 61_206
                              Store 55_163(index) 130_7
                              Store 59_107(v) 44_2
          61_208: 23_2(fvec3) Load 59_107(v)
                              ReturnValue 61_208
                              FunctionEnd
54_43(TDInstanceRotUp(i1;): 23_2(fvec3) Function None 33_33
   55_164(index):   32_3(ptr) FunctionParameter
          248_68:             Label
       59_108(v):   32_2(ptr) Variable Function
          65_112:  32_23(ptr) AccessChain 59_3 43_6
          61_209:   21_1(int) Load 65_112
          61_210:   21_1(int) Load 55_164(index)
           130_8:   21_1(int) ISub 61_210 61_209
                              Store 55_164(index) 130_8
                              Store 59_108(v) 44_6
          61_211: 23_2(fvec3) Load 59_108(v)
                              ReturnValue 61_211
                              FunctionEnd
54_44(TDInstanceMat(i1;):        24_2 Function None 33_35
      55_165(id):   32_3(ptr) FunctionParameter
          248_69:             Label
59_109(instanceActive):   32_7(ptr) Variable Function
       59_110(t):   32_2(ptr) Variable Function
   59_111(param):   32_3(ptr) Variable Function
   59_112(param):   32_7(ptr) Variable Function
       59_113(m):  32_25(ptr) Variable Function
      59_114(tt):   32_2(ptr) Variable Function
                              Store 59_109(instanceActive) 41_1
          61_212:   21_1(int) Load 55_165(id)
                              Store 59_111(param) 61_212
           57_11: 23_2(fvec3) FunctionCall 54_37(iTDInstanceTranslate(i1;b1;) 59_111(param) 59_112(param)
          61_213:  20_1(bool) Load 59_112(param)
                              Store 59_109(instanceActive) 61_213
                              Store 59_110(t) 57_11
          61_214:  20_1(bool) Load 59_109(instanceActive)
           168_1:  20_1(bool) LogicalNot 61_214
                              SelectionMerge 248_71 None
                              BranchConditional 168_1 248_70 248_71
          248_70:               Label
                                ReturnValue 44_8
          248_71:             Label
                              Store 59_113(m) 44_13
          61_215: 23_2(fvec3) Load 59_110(t)
                              Store 59_114(tt) 61_215
          65_113:   32_4(ptr) AccessChain 59_113(m) 43_6 uint(0)
          61_216: 22_1(float) Load 65_113
          65_114:   32_4(ptr) AccessChain 59_114(tt) uint(0)
          61_217: 22_1(float) Load 65_114
          133_21: 22_1(float) FMul 61_216 61_217
          65_115:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(0)
          61_218: 22_1(float) Load 65_115
          129_10: 22_1(float) FAdd 61_218 133_21
          65_116:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(0)
                              Store 65_116 129_10
          65_117:   32_4(ptr) AccessChain 59_113(m) 43_6 uint(1)
          61_219: 22_1(float) Load 65_117
          65_118:   32_4(ptr) AccessChain 59_114(tt) uint(0)
          61_220: 22_1(float) Load 65_118
          133_22: 22_1(float) FMul 61_219 61_220
          65_119:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(1)
          61_221: 22_1(float) Load 65_119
          129_11: 22_1(float) FAdd 61_221 133_22
          65_120:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(1)
                              Store 65_120 129_11
          65_121:   32_4(ptr) AccessChain 59_113(m) 43_6 uint(2)
          61_222: 22_1(float) Load 65_121
          65_122:   32_4(ptr) AccessChain 59_114(tt) uint(0)
          61_223: 22_1(float) Load 65_122
          133_23: 22_1(float) FMul 61_222 61_223
          65_123:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(2)
          61_224: 22_1(float) Load 65_123
          129_12: 22_1(float) FAdd 61_224 133_23
          65_124:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(2)
                              Store 65_124 129_12
          65_125:   32_4(ptr) AccessChain 59_113(m) 43_6 uint(3)
          61_225: 22_1(float) Load 65_125
          65_126:   32_4(ptr) AccessChain 59_114(tt) uint(0)
          61_226: 22_1(float) Load 65_126
          133_24: 22_1(float) FMul 61_225 61_226
          65_127:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(3)
          61_227: 22_1(float) Load 65_127
          129_13: 22_1(float) FAdd 61_227 133_24
          65_128:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(3)
                              Store 65_128 129_13
          65_129:   32_4(ptr) AccessChain 59_113(m) 43_7 uint(0)
          61_228: 22_1(float) Load 65_129
          65_130:   32_4(ptr) AccessChain 59_114(tt) uint(1)
          61_229: 22_1(float) Load 65_130
          133_25: 22_1(float) FMul 61_228 61_229
          65_131:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(0)
          61_230: 22_1(float) Load 65_131
          129_14: 22_1(float) FAdd 61_230 133_25
          65_132:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(0)
                              Store 65_132 129_14
          65_133:   32_4(ptr) AccessChain 59_113(m) 43_7 uint(1)
          61_231: 22_1(float) Load 65_133
          65_134:   32_4(ptr) AccessChain 59_114(tt) uint(1)
          61_232: 22_1(float) Load 65_134
          133_26: 22_1(float) FMul 61_231 61_232
          65_135:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(1)
          61_233: 22_1(float) Load 65_135
          129_15: 22_1(float) FAdd 61_233 133_26
          65_136:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(1)
                              Store 65_136 129_15
          65_137:   32_4(ptr) AccessChain 59_113(m) 43_7 uint(2)
          61_234: 22_1(float) Load 65_137
          65_138:   32_4(ptr) AccessChain 59_114(tt) uint(1)
          61_235: 22_1(float) Load 65_138
          133_27: 22_1(float) FMul 61_234 61_235
          65_139:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(2)
          61_236: 22_1(float) Load 65_139
          129_16: 22_1(float) FAdd 61_236 133_27
          65_140:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(2)
                              Store 65_140 129_16
          65_141:   32_4(ptr) AccessChain 59_113(m) 43_7 uint(3)
          61_237: 22_1(float) Load 65_141
          65_142:   32_4(ptr) AccessChain 59_114(tt) uint(1)
          61_238: 22_1(float) Load 65_142
          133_28: 22_1(float) FMul 61_237 61_238
          65_143:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(3)
          61_239: 22_1(float) Load 65_143
          129_17: 22_1(float) FAdd 61_239 133_28
          65_144:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(3)
                              Store 65_144 129_17
          65_145:   32_4(ptr) AccessChain 59_113(m) 43_2 uint(0)
          61_240: 22_1(float) Load 65_145
          65_146:   32_4(ptr) AccessChain 59_114(tt) uint(2)
          61_241: 22_1(float) Load 65_146
          133_29: 22_1(float) FMul 61_240 61_241
          65_147:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(0)
          61_242: 22_1(float) Load 65_147
          129_18: 22_1(float) FAdd 61_242 133_29
          65_148:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(0)
                              Store 65_148 129_18
          65_149:   32_4(ptr) AccessChain 59_113(m) 43_2 uint(1)
          61_243: 22_1(float) Load 65_149
          65_150:   32_4(ptr) AccessChain 59_114(tt) uint(2)
          61_244: 22_1(float) Load 65_150
          133_30: 22_1(float) FMul 61_243 61_244
          65_151:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(1)
          61_245: 22_1(float) Load 65_151
          129_19: 22_1(float) FAdd 61_245 133_30
          65_152:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(1)
                              Store 65_152 129_19
          65_153:   32_4(ptr) AccessChain 59_113(m) 43_2 uint(2)
          61_246: 22_1(float) Load 65_153
          65_154:   32_4(ptr) AccessChain 59_114(tt) uint(2)
          61_247: 22_1(float) Load 65_154
          133_31: 22_1(float) FMul 61_246 61_247
          65_155:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(2)
          61_248: 22_1(float) Load 65_155
          129_20: 22_1(float) FAdd 61_248 133_31
          65_156:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(2)
                              Store 65_156 129_20
          65_157:   32_4(ptr) AccessChain 59_113(m) 43_2 uint(3)
          61_249: 22_1(float) Load 65_157
          65_158:   32_4(ptr) AccessChain 59_114(tt) uint(2)
          61_250: 22_1(float) Load 65_158
          133_32: 22_1(float) FMul 61_249 61_250
          65_159:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(3)
          61_251: 22_1(float) Load 65_159
          129_21: 22_1(float) FAdd 61_251 133_32
          65_160:   32_4(ptr) AccessChain 59_113(m) 43_5 uint(3)
                              Store 65_160 129_21
          61_252:        24_2 Load 59_113(m)
                              ReturnValue 61_252
                              FunctionEnd
54_45(TDInstanceMat3(i1;):        24_1 Function None 33_34
      55_166(id):   32_3(ptr) FunctionParameter
          248_72:             Label
       59_115(m):  32_24(ptr) Variable Function
                              Store 59_115(m) 44_7
          61_253:        24_1 Load 59_115(m)
                              ReturnValue 61_253
                              FunctionEnd
54_46(TDInstanceMat3ForNorm(i1;):        24_1 Function None 33_34
      55_167(id):   32_3(ptr) FunctionParameter
          248_73:             Label
       59_116(m):  32_24(ptr) Variable Function
   59_117(param):   32_3(ptr) Variable Function
          61_254:   21_1(int) Load 55_167(id)
                              Store 59_117(param) 61_254
           57_12:        24_1 FunctionCall 54_45(TDInstanceMat3(i1;) 59_117(param)
                              Store 59_116(m) 57_12
          61_255:        24_1 Load 59_116(m)
                              ReturnValue 61_255
                              FunctionEnd
54_47(TDInstanceColor(i1;vf4;): 23_1(fvec4) Function None 33_36
   55_168(index):   32_3(ptr) FunctionParameter
55_169(curColor):   32_1(ptr) FunctionParameter
          248_74:             Label
   59_118(coord):   32_3(ptr) Variable Function
    59_119(samp):   32_1(ptr) Variable Function
       59_120(v):   32_1(ptr) Variable Function
          65_161:  32_23(ptr) AccessChain 59_3 43_6
          61_256:   21_1(int) Load 65_161
          61_257:   21_1(int) Load 55_168(index)
           130_9:   21_1(int) ISub 61_257 61_256
                              Store 55_168(index) 130_9
          61_258:   21_1(int) Load 55_168(index)
                              Store 59_118(coord) 61_258
          61_259:        27_3 Load 59_10(sTDInstanceColor)
          61_260:   21_1(int) Load 59_118(coord)
           100_5:        25_3 Image 61_259
            95_5: 23_1(fvec4) ImageFetch 100_5 61_260
                              Store 59_119(samp) 95_5
          65_162:   32_4(ptr) AccessChain 59_119(samp) uint(0)
          61_261: 22_1(float) Load 65_162
          65_163:   32_4(ptr) AccessChain 59_120(v) uint(0)
                              Store 65_163 61_261
          65_164:   32_4(ptr) AccessChain 59_119(samp) uint(1)
          61_262: 22_1(float) Load 65_164
          65_165:   32_4(ptr) AccessChain 59_120(v) uint(1)
                              Store 65_165 61_262
          65_166:   32_4(ptr) AccessChain 59_119(samp) uint(2)
          61_263: 22_1(float) Load 65_166
          65_167:   32_4(ptr) AccessChain 59_120(v) uint(2)
                              Store 65_167 61_263
          65_168:   32_4(ptr) AccessChain 59_120(v) uint(3)
                              Store 65_168 43_10
          65_169:   32_4(ptr) AccessChain 59_120(v) uint(0)
          61_264: 22_1(float) Load 65_169
          65_170:   32_4(ptr) AccessChain 55_169(curColor) uint(0)
                              Store 65_170 61_264
          65_171:   32_4(ptr) AccessChain 59_120(v) uint(1)
          61_265: 22_1(float) Load 65_171
          65_172:   32_4(ptr) AccessChain 55_169(curColor) uint(1)
                              Store 65_172 61_265
          65_173:   32_4(ptr) AccessChain 59_120(v) uint(2)
          61_266: 22_1(float) Load 65_173
          65_174:   32_4(ptr) AccessChain 55_169(curColor) uint(2)
                              Store 65_174 61_266
          61_267: 23_1(fvec4) Load 55_169(curColor)
                              ReturnValue 61_267
                              FunctionEnd
54_48(TDOutputSwizzle(vf4;): 23_1(fvec4) Function None 33_2
       55_170(c):   32_1(ptr) FunctionParameter
          248_75:             Label
          61_268: 23_1(fvec4) Load 55_170(c)
                              ReturnValue 61_268
                              FunctionEnd
54_49(TDOutputSwizzle(vu4;): 23_4(ivec4) Function None 33_37
       55_171(c):   32_8(ptr) FunctionParameter
          248_76:             Label
          61_269: 23_4(ivec4) Load 55_171(c)
                              ReturnValue 61_269
                              FunctionEnd
