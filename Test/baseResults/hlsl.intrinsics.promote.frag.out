hlsl.intrinsics.promote.frag
Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:20  Function Definition: @main( ( temp structure{ temp 4-component vector of float color})
0:20    Function Parameters: 
0:?     Sequence
0:23      Sequence
0:23        move second child to first child ( temp float)
0:23          'r00' ( temp float)
0:23          max ( temp float)
0:23            Convert bool to float ( temp float)
0:23              b: direct index for structure ( uniform bool)
0:23                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:23                Constant:
0:23                  3 (const uint)
0:23            f: direct index for structure ( uniform float)
0:23              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:23              Constant:
0:23                2 (const uint)
0:24      Sequence
0:24        move second child to first child ( temp uint)
0:24          'r01' ( temp uint)
0:24          max ( temp uint)
0:24            Convert bool to uint ( temp uint)
0:24              b: direct index for structure ( uniform bool)
0:24                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:24                Constant:
0:24                  3 (const uint)
0:24            u: direct index for structure ( uniform uint)
0:24              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:24              Constant:
0:24                1 (const uint)
0:25      Sequence
0:25        move second child to first child ( temp int)
0:25          'r02' ( temp int)
0:25          max ( temp int)
0:25            Convert bool to int ( temp int)
0:25              b: direct index for structure ( uniform bool)
0:25                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:25                Constant:
0:25                  3 (const uint)
0:25            i: direct index for structure ( uniform int)
0:25              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:25              Constant:
0:25                0 (const uint)
0:26      Sequence
0:26        move second child to first child ( temp float)
0:26          'r03' ( temp float)
0:26          max ( temp float)
0:26            Convert int to float ( temp float)
0:26              i: direct index for structure ( uniform int)
0:26                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:26                Constant:
0:26                  0 (const uint)
0:26            f: direct index for structure ( uniform float)
0:26              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:26              Constant:
0:26                2 (const uint)
0:27      Sequence
0:27        move second child to first child ( temp float)
0:27          'r04' ( temp float)
0:27          max ( temp float)
0:27            Convert uint to float ( temp float)
0:27              u: direct index for structure ( uniform uint)
0:27                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:27                Constant:
0:27                  1 (const uint)
0:27            f: direct index for structure ( uniform float)
0:27              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:27              Constant:
0:27                2 (const uint)
0:29      Sequence
0:29        move second child to first child ( temp 2-component vector of float)
0:29          'r10' ( temp 2-component vector of float)
0:29          max ( temp 2-component vector of float)
0:29            Convert bool to float ( temp 2-component vector of float)
0:29              b2: direct index for structure ( uniform 2-component vector of bool)
0:29                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:29                Constant:
0:29                  7 (const uint)
0:29            f2: direct index for structure ( uniform 2-component vector of float)
0:29              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:29              Constant:
0:29                6 (const uint)
0:30      Sequence
0:30        move second child to first child ( temp 2-component vector of uint)
0:30          'r11' ( temp 2-component vector of uint)
0:30          max ( temp 2-component vector of uint)
0:30            Convert bool to uint ( temp 2-component vector of uint)
0:30              b2: direct index for structure ( uniform 2-component vector of bool)
0:30                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:30                Constant:
0:30                  7 (const uint)
0:30            u2: direct index for structure ( uniform 2-component vector of uint)
0:30              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:30              Constant:
0:30                5 (const uint)
0:31      Sequence
0:31        move second child to first child ( temp 2-component vector of int)
0:31          'r12' ( temp 2-component vector of int)
0:31          max ( temp 2-component vector of int)
0:31            Convert bool to int ( temp 2-component vector of int)
0:31              b2: direct index for structure ( uniform 2-component vector of bool)
0:31                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:31                Constant:
0:31                  7 (const uint)
0:31            i2: direct index for structure ( uniform 2-component vector of int)
0:31              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:31              Constant:
0:31                4 (const uint)
0:32      Sequence
0:32        move second child to first child ( temp 2-component vector of float)
0:32          'r13' ( temp 2-component vector of float)
0:32          max ( temp 2-component vector of float)
0:32            Convert int to float ( temp 2-component vector of float)
0:32              i2: direct index for structure ( uniform 2-component vector of int)
0:32                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:32                Constant:
0:32                  4 (const uint)
0:32            f2: direct index for structure ( uniform 2-component vector of float)
0:32              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:32              Constant:
0:32                6 (const uint)
0:33      Sequence
0:33        move second child to first child ( temp 2-component vector of float)
0:33          'r14' ( temp 2-component vector of float)
0:33          max ( temp 2-component vector of float)
0:33            Convert uint to float ( temp 2-component vector of float)
0:33              u2: direct index for structure ( uniform 2-component vector of uint)
0:33                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:33                Constant:
0:33                  5 (const uint)
0:33            f2: direct index for structure ( uniform 2-component vector of float)
0:33              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:33              Constant:
0:33                6 (const uint)
0:35      Sequence
0:35        move second child to first child ( temp 2-component vector of float)
0:35          'r20' ( temp 2-component vector of float)
0:35          clamp ( temp 2-component vector of float)
0:35            Convert int to float ( temp 2-component vector of float)
0:35              i2: direct index for structure ( uniform 2-component vector of int)
0:35                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:35                Constant:
0:35                  4 (const uint)
0:35            Convert uint to float ( temp 2-component vector of float)
0:35              u2: direct index for structure ( uniform 2-component vector of uint)
0:35                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:35                Constant:
0:35                  5 (const uint)
0:35            f2: direct index for structure ( uniform 2-component vector of float)
0:35              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:35              Constant:
0:35                6 (const uint)
0:36      Sequence
0:36        move second child to first child ( temp 2-component vector of uint)
0:36          'r21' ( temp 2-component vector of uint)
0:36          clamp ( temp 2-component vector of uint)
0:36            Convert bool to uint ( temp 2-component vector of uint)
0:36              b2: direct index for structure ( uniform 2-component vector of bool)
0:36                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:36                Constant:
0:36                  7 (const uint)
0:36            u2: direct index for structure ( uniform 2-component vector of uint)
0:36              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:36              Constant:
0:36                5 (const uint)
0:36            Convert bool to uint ( temp 2-component vector of uint)
0:36              b2: direct index for structure ( uniform 2-component vector of bool)
0:36                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:36                Constant:
0:36                  7 (const uint)
0:37      Sequence
0:37        move second child to first child ( temp 2-component vector of float)
0:37          'r22' ( temp 2-component vector of float)
0:37          clamp ( temp 2-component vector of float)
0:37            Convert bool to float ( temp 2-component vector of float)
0:37              b2: direct index for structure ( uniform 2-component vector of bool)
0:37                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:37                Constant:
0:37                  7 (const uint)
0:37            f2: direct index for structure ( uniform 2-component vector of float)
0:37              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:37              Constant:
0:37                6 (const uint)
0:37            Convert bool to float ( temp 2-component vector of float)
0:37              b2: direct index for structure ( uniform 2-component vector of bool)
0:37                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:37                Constant:
0:37                  7 (const uint)
0:40      Sequence
0:40        move second child to first child ( temp 2-component vector of float)
0:40          'r30' ( temp 2-component vector of float)
0:40          max ( temp 2-component vector of float)
0:40            Construct vec2 ( in 2-component vector of float)
0:40              Convert bool to float ( temp float)
0:40                b: direct index for structure ( uniform bool)
0:40                  'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:40                  Constant:
0:40                    3 (const uint)
0:40            f2: direct index for structure ( uniform 2-component vector of float)
0:40              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:40              Constant:
0:40                6 (const uint)
0:41      Sequence
0:41        move second child to first child ( temp 2-component vector of uint)
0:41          'r31' ( temp 2-component vector of uint)
0:41          max ( temp 2-component vector of uint)
0:41            Construct uvec2 ( in 2-component vector of uint)
0:41              Convert bool to uint ( temp uint)
0:41                b: direct index for structure ( uniform bool)
0:41                  'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:41                  Constant:
0:41                    3 (const uint)
0:41            u2: direct index for structure ( uniform 2-component vector of uint)
0:41              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:41              Constant:
0:41                5 (const uint)
0:42      Sequence
0:42        move second child to first child ( temp 2-component vector of int)
0:42          'r32' ( temp 2-component vector of int)
0:42          max ( temp 2-component vector of int)
0:42            Construct ivec2 ( in 2-component vector of int)
0:42              Convert bool to int ( temp int)
0:42                b: direct index for structure ( uniform bool)
0:42                  'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:42                  Constant:
0:42                    3 (const uint)
0:42            i2: direct index for structure ( uniform 2-component vector of int)
0:42              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:42              Constant:
0:42                4 (const uint)
0:43      Sequence
0:43        move second child to first child ( temp 2-component vector of float)
0:43          'r33' ( temp 2-component vector of float)
0:43          max ( temp 2-component vector of float)
0:43            Construct vec2 ( in 2-component vector of float)
0:43              Convert int to float ( temp float)
0:43                i: direct index for structure ( uniform int)
0:43                  'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:43                  Constant:
0:43                    0 (const uint)
0:43            f2: direct index for structure ( uniform 2-component vector of float)
0:43              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:43              Constant:
0:43                6 (const uint)
0:44      Sequence
0:44        move second child to first child ( temp 2-component vector of float)
0:44          'r34' ( temp 2-component vector of float)
0:44          max ( temp 2-component vector of float)
0:44            Construct vec2 ( in 2-component vector of float)
0:44              Convert uint to float ( temp float)
0:44                u: direct index for structure ( uniform uint)
0:44                  'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:44                  Constant:
0:44                    1 (const uint)
0:44            f2: direct index for structure ( uniform 2-component vector of float)
0:44              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:44              Constant:
0:44                6 (const uint)
0:46      Sequence
0:46        move second child to first child ( temp 2-component vector of float)
0:46          'r40' ( temp 2-component vector of float)
0:46          clamp ( temp 2-component vector of float)
0:46            Construct vec2 ( in 2-component vector of float)
0:46              Convert int to float ( temp float)
0:46                i: direct index for structure ( uniform int)
0:46                  'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:46                  Constant:
0:46                    0 (const uint)
0:46            Convert uint to float ( temp 2-component vector of float)
0:46              u2: direct index for structure ( uniform 2-component vector of uint)
0:46                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:46                Constant:
0:46                  5 (const uint)
0:46            f2: direct index for structure ( uniform 2-component vector of float)
0:46              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:46              Constant:
0:46                6 (const uint)
0:47      Sequence
0:47        move second child to first child ( temp 2-component vector of uint)
0:47          'r41' ( temp 2-component vector of uint)
0:47          clamp ( temp 2-component vector of uint)
0:47            Convert bool to uint ( temp 2-component vector of uint)
0:47              b2: direct index for structure ( uniform 2-component vector of bool)
0:47                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:47                Constant:
0:47                  7 (const uint)
0:47            Construct uvec2 ( in 2-component vector of uint)
0:47              u: direct index for structure ( uniform uint)
0:47                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:47                Constant:
0:47                  1 (const uint)
0:47            Convert bool to uint ( temp 2-component vector of uint)
0:47              b2: direct index for structure ( uniform 2-component vector of bool)
0:47                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:47                Constant:
0:47                  7 (const uint)
0:48      Sequence
0:48        move second child to first child ( temp 2-component vector of float)
0:48          'r42' ( temp 2-component vector of float)
0:48          clamp ( temp 2-component vector of float)
0:48            Convert bool to float ( temp 2-component vector of float)
0:48              b2: direct index for structure ( uniform 2-component vector of bool)
0:48                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:48                Constant:
0:48                  7 (const uint)
0:48            Construct vec2 ( in 2-component vector of float)
0:48              f: direct index for structure ( uniform float)
0:48                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:48                Constant:
0:48                  2 (const uint)
0:48            Construct vec2 ( in 2-component vector of float)
0:48              Convert bool to float ( temp float)
0:48                b: direct index for structure ( uniform bool)
0:48                  'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:48                  Constant:
0:48                    3 (const uint)
0:49      Sequence
0:49        move second child to first child ( temp 2-component vector of int)
0:49          'r43' ( temp 2-component vector of int)
0:49          Convert uint to int ( temp 2-component vector of int)
0:49            clamp ( temp 2-component vector of uint)
0:49              Construct uvec2 ( in 2-component vector of uint)
0:49                Convert int to uint ( temp uint)
0:49                  i: direct index for structure ( uniform int)
0:49                    'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:49                    Constant:
0:49                      0 (const uint)
0:49              Convert int to uint ( temp 2-component vector of uint)
0:49                i2: direct index for structure ( uniform 2-component vector of int)
0:49                  'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:49                  Constant:
0:49                    4 (const uint)
0:49              u2: direct index for structure ( uniform 2-component vector of uint)
0:49                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:49                Constant:
0:49                  5 (const uint)
0:51      Sequence
0:51        move second child to first child ( temp float)
0:51          'r50' ( temp float)
0:51          Construct float ( temp float)
0:?             textureFetch ( temp 4-component vector of float)
0:51              'g_tTexbfs' (layout( r32f) uniform textureBuffer)
0:51              Convert uint to int ( temp int)
0:51                upos: direct index for structure ( uniform uint)
0:51                  'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:51                  Constant:
0:51                    8 (const uint)
0:52      Sequence
0:52        move second child to first child ( temp float)
0:52          'r51' ( temp float)
0:52          Construct float ( temp float)
0:?             textureFetch ( temp 4-component vector of float)
0:52              'g_tTexbfs' (layout( r32f) uniform textureBuffer)
0:52              Convert float to int ( temp int)
0:52                fpos: direct index for structure ( uniform float)
0:52                  'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:52                  Constant:
0:52                    9 (const uint)
0:70      Sequence
0:70        move second child to first child ( temp uint)
0:70          'sizeQueryTemp' ( temp uint)
0:70          textureSize ( temp uint)
0:70            'g_tTex1df4' ( uniform texture1D)
0:70            Constant:
0:70              0 (const int)
0:70        move second child to first child ( temp int)
0:70          'WidthI' ( temp int)
0:70          Convert uint to int ( temp int)
0:70            'sizeQueryTemp' ( temp uint)
0:71      Sequence
0:71        move second child to first child ( temp uint)
0:71          'sizeQueryTemp' ( temp uint)
0:71          textureSize ( temp uint)
0:71            'g_tTex1df4' ( uniform texture1D)
0:71            Constant:
0:71              6 (const uint)
0:71        move second child to first child ( temp int)
0:71          'WidthI' ( temp int)
0:71          Convert uint to int ( temp int)
0:71            'sizeQueryTemp' ( temp uint)
0:71        move second child to first child ( temp uint)
0:71          'NumberOfLevelsU' ( temp uint)
0:71          textureQueryLevels ( temp uint)
0:71            'g_tTex1df4' ( uniform texture1D)
0:72      Sequence
0:72        move second child to first child ( temp uint)
0:72          'sizeQueryTemp' ( temp uint)
0:72          textureSize ( temp uint)
0:72            'g_tTex1df4' ( uniform texture1D)
0:72            Constant:
0:72              6 (const uint)
0:72        move second child to first child ( temp uint)
0:72          'WidthU' ( temp uint)
0:72          'sizeQueryTemp' ( temp uint)
0:72        move second child to first child ( temp int)
0:72          'NumberOfLevelsI' ( temp int)
0:72          Convert uint to int ( temp int)
0:72            textureQueryLevels ( temp uint)
0:72              'g_tTex1df4' ( uniform texture1D)
0:73      Sequence
0:73        move second child to first child ( temp uint)
0:73          'sizeQueryTemp' ( temp uint)
0:73          textureSize ( temp uint)
0:73            'g_tTex1df4' ( uniform texture1D)
0:73            Constant:
0:73              6 (const uint)
0:73        move second child to first child ( temp int)
0:73          'WidthI' ( temp int)
0:73          Convert uint to int ( temp int)
0:73            'sizeQueryTemp' ( temp uint)
0:73        move second child to first child ( temp int)
0:73          'NumberOfLevelsI' ( temp int)
0:73          Convert uint to int ( temp int)
0:73            textureQueryLevels ( temp uint)
0:73              'g_tTex1df4' ( uniform texture1D)
0:77      move second child to first child ( temp 4-component vector of float)
0:77        color: direct index for structure ( temp 4-component vector of float)
0:77          'ps_output' ( temp structure{ temp 4-component vector of float color})
0:77          Constant:
0:77            0 (const int)
0:77        Construct vec4 ( temp 4-component vector of float)
0:77          'r00' ( temp float)
0:78      Branch: Return with expression
0:78        'ps_output' ( temp structure{ temp 4-component vector of float color})
0:20  Function Definition: main( ( temp void)
0:20    Function Parameters: 
0:?     Sequence
0:20      Sequence
0:20        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.color' (layout( location=0) out 4-component vector of float)
0:20          color: direct index for structure ( temp 4-component vector of float)
0:20            Function Call: @main( ( temp structure{ temp 4-component vector of float color})
0:20            Constant:
0:20              0 (const int)
0:?   Linker Objects
0:?     'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:?     'g_tTexbfs' (layout( r32f) uniform textureBuffer)
0:?     'g_tTex1df4' ( uniform texture1D)
0:?     '@entryPointOutput.color' (layout( location=0) out 4-component vector of float)


Linked fragment stage:


Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:20  Function Definition: @main( ( temp structure{ temp 4-component vector of float color})
0:20    Function Parameters: 
0:?     Sequence
0:23      Sequence
0:23        move second child to first child ( temp float)
0:23          'r00' ( temp float)
0:23          max ( temp float)
0:23            Convert bool to float ( temp float)
0:23              b: direct index for structure ( uniform bool)
0:23                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:23                Constant:
0:23                  3 (const uint)
0:23            f: direct index for structure ( uniform float)
0:23              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:23              Constant:
0:23                2 (const uint)
0:24      Sequence
0:24        move second child to first child ( temp uint)
0:24          'r01' ( temp uint)
0:24          max ( temp uint)
0:24            Convert bool to uint ( temp uint)
0:24              b: direct index for structure ( uniform bool)
0:24                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:24                Constant:
0:24                  3 (const uint)
0:24            u: direct index for structure ( uniform uint)
0:24              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:24              Constant:
0:24                1 (const uint)
0:25      Sequence
0:25        move second child to first child ( temp int)
0:25          'r02' ( temp int)
0:25          max ( temp int)
0:25            Convert bool to int ( temp int)
0:25              b: direct index for structure ( uniform bool)
0:25                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:25                Constant:
0:25                  3 (const uint)
0:25            i: direct index for structure ( uniform int)
0:25              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:25              Constant:
0:25                0 (const uint)
0:26      Sequence
0:26        move second child to first child ( temp float)
0:26          'r03' ( temp float)
0:26          max ( temp float)
0:26            Convert int to float ( temp float)
0:26              i: direct index for structure ( uniform int)
0:26                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:26                Constant:
0:26                  0 (const uint)
0:26            f: direct index for structure ( uniform float)
0:26              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:26              Constant:
0:26                2 (const uint)
0:27      Sequence
0:27        move second child to first child ( temp float)
0:27          'r04' ( temp float)
0:27          max ( temp float)
0:27            Convert uint to float ( temp float)
0:27              u: direct index for structure ( uniform uint)
0:27                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:27                Constant:
0:27                  1 (const uint)
0:27            f: direct index for structure ( uniform float)
0:27              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:27              Constant:
0:27                2 (const uint)
0:29      Sequence
0:29        move second child to first child ( temp 2-component vector of float)
0:29          'r10' ( temp 2-component vector of float)
0:29          max ( temp 2-component vector of float)
0:29            Convert bool to float ( temp 2-component vector of float)
0:29              b2: direct index for structure ( uniform 2-component vector of bool)
0:29                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:29                Constant:
0:29                  7 (const uint)
0:29            f2: direct index for structure ( uniform 2-component vector of float)
0:29              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:29              Constant:
0:29                6 (const uint)
0:30      Sequence
0:30        move second child to first child ( temp 2-component vector of uint)
0:30          'r11' ( temp 2-component vector of uint)
0:30          max ( temp 2-component vector of uint)
0:30            Convert bool to uint ( temp 2-component vector of uint)
0:30              b2: direct index for structure ( uniform 2-component vector of bool)
0:30                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:30                Constant:
0:30                  7 (const uint)
0:30            u2: direct index for structure ( uniform 2-component vector of uint)
0:30              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:30              Constant:
0:30                5 (const uint)
0:31      Sequence
0:31        move second child to first child ( temp 2-component vector of int)
0:31          'r12' ( temp 2-component vector of int)
0:31          max ( temp 2-component vector of int)
0:31            Convert bool to int ( temp 2-component vector of int)
0:31              b2: direct index for structure ( uniform 2-component vector of bool)
0:31                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:31                Constant:
0:31                  7 (const uint)
0:31            i2: direct index for structure ( uniform 2-component vector of int)
0:31              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:31              Constant:
0:31                4 (const uint)
0:32      Sequence
0:32        move second child to first child ( temp 2-component vector of float)
0:32          'r13' ( temp 2-component vector of float)
0:32          max ( temp 2-component vector of float)
0:32            Convert int to float ( temp 2-component vector of float)
0:32              i2: direct index for structure ( uniform 2-component vector of int)
0:32                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:32                Constant:
0:32                  4 (const uint)
0:32            f2: direct index for structure ( uniform 2-component vector of float)
0:32              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:32              Constant:
0:32                6 (const uint)
0:33      Sequence
0:33        move second child to first child ( temp 2-component vector of float)
0:33          'r14' ( temp 2-component vector of float)
0:33          max ( temp 2-component vector of float)
0:33            Convert uint to float ( temp 2-component vector of float)
0:33              u2: direct index for structure ( uniform 2-component vector of uint)
0:33                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:33                Constant:
0:33                  5 (const uint)
0:33            f2: direct index for structure ( uniform 2-component vector of float)
0:33              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:33              Constant:
0:33                6 (const uint)
0:35      Sequence
0:35        move second child to first child ( temp 2-component vector of float)
0:35          'r20' ( temp 2-component vector of float)
0:35          clamp ( temp 2-component vector of float)
0:35            Convert int to float ( temp 2-component vector of float)
0:35              i2: direct index for structure ( uniform 2-component vector of int)
0:35                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:35                Constant:
0:35                  4 (const uint)
0:35            Convert uint to float ( temp 2-component vector of float)
0:35              u2: direct index for structure ( uniform 2-component vector of uint)
0:35                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:35                Constant:
0:35                  5 (const uint)
0:35            f2: direct index for structure ( uniform 2-component vector of float)
0:35              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:35              Constant:
0:35                6 (const uint)
0:36      Sequence
0:36        move second child to first child ( temp 2-component vector of uint)
0:36          'r21' ( temp 2-component vector of uint)
0:36          clamp ( temp 2-component vector of uint)
0:36            Convert bool to uint ( temp 2-component vector of uint)
0:36              b2: direct index for structure ( uniform 2-component vector of bool)
0:36                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:36                Constant:
0:36                  7 (const uint)
0:36            u2: direct index for structure ( uniform 2-component vector of uint)
0:36              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:36              Constant:
0:36                5 (const uint)
0:36            Convert bool to uint ( temp 2-component vector of uint)
0:36              b2: direct index for structure ( uniform 2-component vector of bool)
0:36                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:36                Constant:
0:36                  7 (const uint)
0:37      Sequence
0:37        move second child to first child ( temp 2-component vector of float)
0:37          'r22' ( temp 2-component vector of float)
0:37          clamp ( temp 2-component vector of float)
0:37            Convert bool to float ( temp 2-component vector of float)
0:37              b2: direct index for structure ( uniform 2-component vector of bool)
0:37                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:37                Constant:
0:37                  7 (const uint)
0:37            f2: direct index for structure ( uniform 2-component vector of float)
0:37              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:37              Constant:
0:37                6 (const uint)
0:37            Convert bool to float ( temp 2-component vector of float)
0:37              b2: direct index for structure ( uniform 2-component vector of bool)
0:37                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:37                Constant:
0:37                  7 (const uint)
0:40      Sequence
0:40        move second child to first child ( temp 2-component vector of float)
0:40          'r30' ( temp 2-component vector of float)
0:40          max ( temp 2-component vector of float)
0:40            Construct vec2 ( in 2-component vector of float)
0:40              Convert bool to float ( temp float)
0:40                b: direct index for structure ( uniform bool)
0:40                  'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:40                  Constant:
0:40                    3 (const uint)
0:40            f2: direct index for structure ( uniform 2-component vector of float)
0:40              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:40              Constant:
0:40                6 (const uint)
0:41      Sequence
0:41        move second child to first child ( temp 2-component vector of uint)
0:41          'r31' ( temp 2-component vector of uint)
0:41          max ( temp 2-component vector of uint)
0:41            Construct uvec2 ( in 2-component vector of uint)
0:41              Convert bool to uint ( temp uint)
0:41                b: direct index for structure ( uniform bool)
0:41                  'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:41                  Constant:
0:41                    3 (const uint)
0:41            u2: direct index for structure ( uniform 2-component vector of uint)
0:41              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:41              Constant:
0:41                5 (const uint)
0:42      Sequence
0:42        move second child to first child ( temp 2-component vector of int)
0:42          'r32' ( temp 2-component vector of int)
0:42          max ( temp 2-component vector of int)
0:42            Construct ivec2 ( in 2-component vector of int)
0:42              Convert bool to int ( temp int)
0:42                b: direct index for structure ( uniform bool)
0:42                  'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:42                  Constant:
0:42                    3 (const uint)
0:42            i2: direct index for structure ( uniform 2-component vector of int)
0:42              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:42              Constant:
0:42                4 (const uint)
0:43      Sequence
0:43        move second child to first child ( temp 2-component vector of float)
0:43          'r33' ( temp 2-component vector of float)
0:43          max ( temp 2-component vector of float)
0:43            Construct vec2 ( in 2-component vector of float)
0:43              Convert int to float ( temp float)
0:43                i: direct index for structure ( uniform int)
0:43                  'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:43                  Constant:
0:43                    0 (const uint)
0:43            f2: direct index for structure ( uniform 2-component vector of float)
0:43              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:43              Constant:
0:43                6 (const uint)
0:44      Sequence
0:44        move second child to first child ( temp 2-component vector of float)
0:44          'r34' ( temp 2-component vector of float)
0:44          max ( temp 2-component vector of float)
0:44            Construct vec2 ( in 2-component vector of float)
0:44              Convert uint to float ( temp float)
0:44                u: direct index for structure ( uniform uint)
0:44                  'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:44                  Constant:
0:44                    1 (const uint)
0:44            f2: direct index for structure ( uniform 2-component vector of float)
0:44              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:44              Constant:
0:44                6 (const uint)
0:46      Sequence
0:46        move second child to first child ( temp 2-component vector of float)
0:46          'r40' ( temp 2-component vector of float)
0:46          clamp ( temp 2-component vector of float)
0:46            Construct vec2 ( in 2-component vector of float)
0:46              Convert int to float ( temp float)
0:46                i: direct index for structure ( uniform int)
0:46                  'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:46                  Constant:
0:46                    0 (const uint)
0:46            Convert uint to float ( temp 2-component vector of float)
0:46              u2: direct index for structure ( uniform 2-component vector of uint)
0:46                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:46                Constant:
0:46                  5 (const uint)
0:46            f2: direct index for structure ( uniform 2-component vector of float)
0:46              'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:46              Constant:
0:46                6 (const uint)
0:47      Sequence
0:47        move second child to first child ( temp 2-component vector of uint)
0:47          'r41' ( temp 2-component vector of uint)
0:47          clamp ( temp 2-component vector of uint)
0:47            Convert bool to uint ( temp 2-component vector of uint)
0:47              b2: direct index for structure ( uniform 2-component vector of bool)
0:47                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:47                Constant:
0:47                  7 (const uint)
0:47            Construct uvec2 ( in 2-component vector of uint)
0:47              u: direct index for structure ( uniform uint)
0:47                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:47                Constant:
0:47                  1 (const uint)
0:47            Convert bool to uint ( temp 2-component vector of uint)
0:47              b2: direct index for structure ( uniform 2-component vector of bool)
0:47                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:47                Constant:
0:47                  7 (const uint)
0:48      Sequence
0:48        move second child to first child ( temp 2-component vector of float)
0:48          'r42' ( temp 2-component vector of float)
0:48          clamp ( temp 2-component vector of float)
0:48            Convert bool to float ( temp 2-component vector of float)
0:48              b2: direct index for structure ( uniform 2-component vector of bool)
0:48                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:48                Constant:
0:48                  7 (const uint)
0:48            Construct vec2 ( in 2-component vector of float)
0:48              f: direct index for structure ( uniform float)
0:48                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:48                Constant:
0:48                  2 (const uint)
0:48            Construct vec2 ( in 2-component vector of float)
0:48              Convert bool to float ( temp float)
0:48                b: direct index for structure ( uniform bool)
0:48                  'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:48                  Constant:
0:48                    3 (const uint)
0:49      Sequence
0:49        move second child to first child ( temp 2-component vector of int)
0:49          'r43' ( temp 2-component vector of int)
0:49          Convert uint to int ( temp 2-component vector of int)
0:49            clamp ( temp 2-component vector of uint)
0:49              Construct uvec2 ( in 2-component vector of uint)
0:49                Convert int to uint ( temp uint)
0:49                  i: direct index for structure ( uniform int)
0:49                    'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:49                    Constant:
0:49                      0 (const uint)
0:49              Convert int to uint ( temp 2-component vector of uint)
0:49                i2: direct index for structure ( uniform 2-component vector of int)
0:49                  'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:49                  Constant:
0:49                    4 (const uint)
0:49              u2: direct index for structure ( uniform 2-component vector of uint)
0:49                'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:49                Constant:
0:49                  5 (const uint)
0:51      Sequence
0:51        move second child to first child ( temp float)
0:51          'r50' ( temp float)
0:51          Construct float ( temp float)
0:?             textureFetch ( temp 4-component vector of float)
0:51              'g_tTexbfs' (layout( r32f) uniform textureBuffer)
0:51              Convert uint to int ( temp int)
0:51                upos: direct index for structure ( uniform uint)
0:51                  'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:51                  Constant:
0:51                    8 (const uint)
0:52      Sequence
0:52        move second child to first child ( temp float)
0:52          'r51' ( temp float)
0:52          Construct float ( temp float)
0:?             textureFetch ( temp 4-component vector of float)
0:52              'g_tTexbfs' (layout( r32f) uniform textureBuffer)
0:52              Convert float to int ( temp int)
0:52                fpos: direct index for structure ( uniform float)
0:52                  'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:52                  Constant:
0:52                    9 (const uint)
0:70      Sequence
0:70        move second child to first child ( temp uint)
0:70          'sizeQueryTemp' ( temp uint)
0:70          textureSize ( temp uint)
0:70            'g_tTex1df4' ( uniform texture1D)
0:70            Constant:
0:70              0 (const int)
0:70        move second child to first child ( temp int)
0:70          'WidthI' ( temp int)
0:70          Convert uint to int ( temp int)
0:70            'sizeQueryTemp' ( temp uint)
0:71      Sequence
0:71        move second child to first child ( temp uint)
0:71          'sizeQueryTemp' ( temp uint)
0:71          textureSize ( temp uint)
0:71            'g_tTex1df4' ( uniform texture1D)
0:71            Constant:
0:71              6 (const uint)
0:71        move second child to first child ( temp int)
0:71          'WidthI' ( temp int)
0:71          Convert uint to int ( temp int)
0:71            'sizeQueryTemp' ( temp uint)
0:71        move second child to first child ( temp uint)
0:71          'NumberOfLevelsU' ( temp uint)
0:71          textureQueryLevels ( temp uint)
0:71            'g_tTex1df4' ( uniform texture1D)
0:72      Sequence
0:72        move second child to first child ( temp uint)
0:72          'sizeQueryTemp' ( temp uint)
0:72          textureSize ( temp uint)
0:72            'g_tTex1df4' ( uniform texture1D)
0:72            Constant:
0:72              6 (const uint)
0:72        move second child to first child ( temp uint)
0:72          'WidthU' ( temp uint)
0:72          'sizeQueryTemp' ( temp uint)
0:72        move second child to first child ( temp int)
0:72          'NumberOfLevelsI' ( temp int)
0:72          Convert uint to int ( temp int)
0:72            textureQueryLevels ( temp uint)
0:72              'g_tTex1df4' ( uniform texture1D)
0:73      Sequence
0:73        move second child to first child ( temp uint)
0:73          'sizeQueryTemp' ( temp uint)
0:73          textureSize ( temp uint)
0:73            'g_tTex1df4' ( uniform texture1D)
0:73            Constant:
0:73              6 (const uint)
0:73        move second child to first child ( temp int)
0:73          'WidthI' ( temp int)
0:73          Convert uint to int ( temp int)
0:73            'sizeQueryTemp' ( temp uint)
0:73        move second child to first child ( temp int)
0:73          'NumberOfLevelsI' ( temp int)
0:73          Convert uint to int ( temp int)
0:73            textureQueryLevels ( temp uint)
0:73              'g_tTex1df4' ( uniform texture1D)
0:77      move second child to first child ( temp 4-component vector of float)
0:77        color: direct index for structure ( temp 4-component vector of float)
0:77          'ps_output' ( temp structure{ temp 4-component vector of float color})
0:77          Constant:
0:77            0 (const int)
0:77        Construct vec4 ( temp 4-component vector of float)
0:77          'r00' ( temp float)
0:78      Branch: Return with expression
0:78        'ps_output' ( temp structure{ temp 4-component vector of float color})
0:20  Function Definition: main( ( temp void)
0:20    Function Parameters: 
0:?     Sequence
0:20      Sequence
0:20        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.color' (layout( location=0) out 4-component vector of float)
0:20          color: direct index for structure ( temp 4-component vector of float)
0:20            Function Call: @main( ( temp structure{ temp 4-component vector of float color})
0:20            Constant:
0:20              0 (const int)
0:?   Linker Objects
0:?     'anon@0' (layout( row_major std140) uniform block{ uniform int i,  uniform uint u,  uniform float f,  uniform bool b,  uniform 2-component vector of int i2,  uniform 2-component vector of uint u2,  uniform 2-component vector of float f2,  uniform 2-component vector of bool b2,  uniform uint upos,  uniform float fpos})
0:?     'g_tTexbfs' (layout( r32f) uniform textureBuffer)
0:?     'g_tTex1df4' ( uniform texture1D)
0:?     '@entryPointOutput.color' (layout( location=0) out 4-component vector of float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 322

                              Capability Shader
                              Capability Sampled1D
                              Capability SampledBuffer
                              Capability ImageQuery
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 54_1  "main" 59_4
                              ExecutionMode 54_1 OriginUpperLeft
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 30_1  "PS_OUTPUT"
                              MemberName 30_1(PS_OUTPUT) 0  "color"
                              Name 54_2  "@main("
                              Name 59_5  "r00"
                              Name 30_2  "$Global"
                              MemberName 30_2($Global) 0  "i"
                              MemberName 30_2($Global) 1  "u"
                              MemberName 30_2($Global) 2  "f"
                              MemberName 30_2($Global) 3  "b"
                              MemberName 30_2($Global) 4  "i2"
                              MemberName 30_2($Global) 5  "u2"
                              MemberName 30_2($Global) 6  "f2"
                              MemberName 30_2($Global) 7  "b2"
                              MemberName 30_2($Global) 8  "upos"
                              MemberName 30_2($Global) 9  "fpos"
                              Name 59_1  ""
                              Name 59_6  "r01"
                              Name 59_7  "r02"
                              Name 59_8  "r03"
                              Name 59_9  "r04"
                              Name 59_10  "r10"
                              Name 59_11  "r11"
                              Name 59_12  "r12"
                              Name 59_13  "r13"
                              Name 59_14  "r14"
                              Name 59_15  "r20"
                              Name 59_16  "r21"
                              Name 59_17  "r22"
                              Name 59_18  "r30"
                              Name 59_19  "r31"
                              Name 59_20  "r32"
                              Name 59_21  "r33"
                              Name 59_22  "r34"
                              Name 59_23  "r40"
                              Name 59_24  "r41"
                              Name 59_25  "r42"
                              Name 59_26  "r43"
                              Name 59_27  "r50"
                              Name 59_2  "g_tTexbfs"
                              Name 59_28  "r51"
                              Name 59_29  "sizeQueryTemp"
                              Name 59_3  "g_tTex1df4"
                              Name 59_30  "WidthI"
                              Name 59_31  "sizeQueryTemp"
                              Name 59_32  "NumberOfLevelsU"
                              Name 59_33  "sizeQueryTemp"
                              Name 59_34  "WidthU"
                              Name 59_35  "NumberOfLevelsI"
                              Name 59_36  "sizeQueryTemp"
                              Name 59_37  "ps_output"
                              Name 59_4  "@entryPointOutput.color"
                              Decorate 30_2($Global) Block
                              MemberDecorate 30_2($Global) 0 Offset 0
                              MemberDecorate 30_2($Global) 1 Offset 4
                              MemberDecorate 30_2($Global) 2 Offset 8
                              MemberDecorate 30_2($Global) 3 Offset 12
                              MemberDecorate 30_2($Global) 4 Offset 16
                              MemberDecorate 30_2($Global) 5 Offset 24
                              MemberDecorate 30_2($Global) 6 Offset 32
                              MemberDecorate 30_2($Global) 7 Offset 40
                              MemberDecorate 30_2($Global) 8 Offset 48
                              MemberDecorate 30_2($Global) 9 Offset 52
                              Decorate 59_1 Binding 0
                              Decorate 59_1 DescriptorSet 0
                              Decorate 59_2(g_tTexbfs) Binding 1
                              Decorate 59_2(g_tTexbfs) DescriptorSet 0
                              Decorate 59_3(g_tTex1df4) Binding 2
                              Decorate 59_3(g_tTex1df4) DescriptorSet 0
                              Decorate 59_4(@entryPointOutput.color) Location 0
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
 30_1(PS_OUTPUT):             TypeStruct 23_1(fvec4)
            33_2:             TypeFunction 30_1(PS_OUTPUT)
            32_1:             TypePointer Function 22_1(float)
            21_1:             TypeInt 32 1
            21_2:             TypeInt 32 0
            23_2:             TypeVector 21_1(int) 2
            23_3:             TypeVector 21_2(int) 2
            23_4:             TypeVector 22_1(float) 2
   30_2($Global):             TypeStruct 21_1(int) 21_2(int) 22_1(float) 21_2(int) 23_2(ivec2) 23_3(ivec2) 23_4(fvec2) 23_3(ivec2) 21_2(int) 22_1(float)
            32_2:             TypePointer Uniform 30_2($Global)
            59_1:   32_2(ptr) Variable Uniform
            43_1:   21_1(int) Constant 3
            32_3:             TypePointer Uniform 21_2(int)
            20_1:             TypeBool
         uint(0):   21_2(int) Constant 0
            43_2: 22_1(float) Constant 0
            43_3: 22_1(float) Constant 1065353216
            43_4:   21_1(int) Constant 2
            32_4:             TypePointer Uniform 22_1(float)
            32_5:             TypePointer Function 21_2(int)
         uint(1):   21_2(int) Constant 1
            43_5:   21_1(int) Constant 1
            32_6:             TypePointer Function 21_1(int)
            43_6:   21_1(int) Constant 0
            32_7:             TypePointer Uniform 21_1(int)
            32_8:             TypePointer Function 23_4(fvec2)
            43_7:   21_1(int) Constant 7
            32_9:             TypePointer Uniform 23_3(ivec2)
            23_5:             TypeVector 20_1(bool) 2
            44_1: 23_3(ivec2) ConstantComposite uint(0) uint(0)
            44_2: 23_4(fvec2) ConstantComposite 43_2 43_2
            44_3: 23_4(fvec2) ConstantComposite 43_3 43_3
            43_8:   21_1(int) Constant 6
           32_10:             TypePointer Uniform 23_4(fvec2)
           32_11:             TypePointer Function 23_3(ivec2)
            44_4: 23_3(ivec2) ConstantComposite uint(1) uint(1)
            43_9:   21_1(int) Constant 5
           32_12:             TypePointer Function 23_2(ivec2)
            44_5: 23_2(ivec2) ConstantComposite 43_6 43_6
            44_6: 23_2(ivec2) ConstantComposite 43_5 43_5
           43_10:   21_1(int) Constant 4
           32_13:             TypePointer Uniform 23_2(ivec2)
            25_1:             TypeImage 22_1(float) Buffer sampled format:R32f
           32_14:             TypePointer UniformConstant 25_1
 59_2(g_tTexbfs):  32_14(ptr) Variable UniformConstant
           43_11:   21_1(int) Constant 8
           43_12:   21_1(int) Constant 9
            25_2:             TypeImage 22_1(float) 1D sampled format:Unknown
           32_15:             TypePointer UniformConstant 25_2
59_3(g_tTex1df4):  32_15(ptr) Variable UniformConstant
         uint(6):   21_2(int) Constant 6
           32_16:             TypePointer Function 30_1(PS_OUTPUT)
           32_17:             TypePointer Function 23_1(fvec4)
           32_18:             TypePointer Output 23_1(fvec4)
59_4(@entryPointOutput.color):  32_18(ptr) Variable Output
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
            57_1:30_1(PS_OUTPUT) FunctionCall 54_2(@main()
            81_1: 23_1(fvec4) CompositeExtract 57_1 0
                              Store 59_4(@entryPointOutput.color) 81_1
                              Return
                              FunctionEnd
    54_2(@main():30_1(PS_OUTPUT) Function None 33_2
           248_2:             Label
       59_5(r00):   32_1(ptr) Variable Function
       59_6(r01):   32_5(ptr) Variable Function
       59_7(r02):   32_6(ptr) Variable Function
       59_8(r03):   32_1(ptr) Variable Function
       59_9(r04):   32_1(ptr) Variable Function
      59_10(r10):   32_8(ptr) Variable Function
      59_11(r11):  32_11(ptr) Variable Function
      59_12(r12):  32_12(ptr) Variable Function
      59_13(r13):   32_8(ptr) Variable Function
      59_14(r14):   32_8(ptr) Variable Function
      59_15(r20):   32_8(ptr) Variable Function
      59_16(r21):  32_11(ptr) Variable Function
      59_17(r22):   32_8(ptr) Variable Function
      59_18(r30):   32_8(ptr) Variable Function
      59_19(r31):  32_11(ptr) Variable Function
      59_20(r32):  32_12(ptr) Variable Function
      59_21(r33):   32_8(ptr) Variable Function
      59_22(r34):   32_8(ptr) Variable Function
      59_23(r40):   32_8(ptr) Variable Function
      59_24(r41):  32_11(ptr) Variable Function
      59_25(r42):   32_8(ptr) Variable Function
      59_26(r43):  32_12(ptr) Variable Function
      59_27(r50):   32_1(ptr) Variable Function
      59_28(r51):   32_1(ptr) Variable Function
59_29(sizeQueryTemp):   32_5(ptr) Variable Function
   59_30(WidthI):   32_6(ptr) Variable Function
59_31(sizeQueryTemp):   32_5(ptr) Variable Function
59_32(NumberOfLevelsU):   32_5(ptr) Variable Function
59_33(sizeQueryTemp):   32_5(ptr) Variable Function
   59_34(WidthU):   32_5(ptr) Variable Function
59_35(NumberOfLevelsI):   32_6(ptr) Variable Function
59_36(sizeQueryTemp):   32_5(ptr) Variable Function
59_37(ps_output):  32_16(ptr) Variable Function
            65_1:   32_3(ptr) AccessChain 59_1 43_1
            61_1:   21_2(int) Load 65_1
           171_1:  20_1(bool) INotEqual 61_1 uint(0)
           169_1: 22_1(float) Select 171_1 43_3 43_2
            65_2:   32_4(ptr) AccessChain 59_1 43_4
            61_2: 22_1(float) Load 65_2
          1-40_1: 22_1(float) ExtInst 11_1(GLSL.std.450) 40(FMax) 169_1 61_2
                              Store 59_5(r00) 1-40_1
            65_3:   32_3(ptr) AccessChain 59_1 43_1
            61_3:   21_2(int) Load 65_3
           171_2:  20_1(bool) INotEqual 61_3 uint(0)
           169_2:   21_2(int) Select 171_2 uint(1) uint(0)
            65_4:   32_3(ptr) AccessChain 59_1 43_5
            61_4:   21_2(int) Load 65_4
          1-41_1:   21_2(int) ExtInst 11_1(GLSL.std.450) 41(UMax) 169_2 61_4
                              Store 59_6(r01) 1-41_1
            65_5:   32_3(ptr) AccessChain 59_1 43_1
            61_5:   21_2(int) Load 65_5
           171_3:  20_1(bool) INotEqual 61_5 uint(0)
           169_3:   21_1(int) Select 171_3 43_5 43_6
            65_6:   32_7(ptr) AccessChain 59_1 43_6
            61_6:   21_1(int) Load 65_6
          1-42_1:   21_1(int) ExtInst 11_1(GLSL.std.450) 42(SMax) 169_3 61_6
                              Store 59_7(r02) 1-42_1
            65_7:   32_7(ptr) AccessChain 59_1 43_6
            61_7:   21_1(int) Load 65_7
           111_1: 22_1(float) ConvertSToF 61_7
            65_8:   32_4(ptr) AccessChain 59_1 43_4
            61_8: 22_1(float) Load 65_8
          1-40_2: 22_1(float) ExtInst 11_1(GLSL.std.450) 40(FMax) 111_1 61_8
                              Store 59_8(r03) 1-40_2
            65_9:   32_3(ptr) AccessChain 59_1 43_5
            61_9:   21_2(int) Load 65_9
           112_1: 22_1(float) ConvertUToF 61_9
           65_10:   32_4(ptr) AccessChain 59_1 43_4
           61_10: 22_1(float) Load 65_10
          1-40_3: 22_1(float) ExtInst 11_1(GLSL.std.450) 40(FMax) 112_1 61_10
                              Store 59_9(r04) 1-40_3
           65_11:   32_9(ptr) AccessChain 59_1 43_7
           61_11: 23_3(ivec2) Load 65_11
           171_4: 23_5(bvec2) INotEqual 61_11 44_1
           169_4: 23_4(fvec2) Select 171_4 44_3 44_2
           65_12:  32_10(ptr) AccessChain 59_1 43_8
           61_12: 23_4(fvec2) Load 65_12
          1-40_4: 23_4(fvec2) ExtInst 11_1(GLSL.std.450) 40(FMax) 169_4 61_12
                              Store 59_10(r10) 1-40_4
           65_13:   32_9(ptr) AccessChain 59_1 43_7
           61_13: 23_3(ivec2) Load 65_13
           171_5: 23_5(bvec2) INotEqual 61_13 44_1
           169_5: 23_3(ivec2) Select 171_5 44_4 44_1
           65_14:   32_9(ptr) AccessChain 59_1 43_9
           61_14: 23_3(ivec2) Load 65_14
          1-41_2: 23_3(ivec2) ExtInst 11_1(GLSL.std.450) 41(UMax) 169_5 61_14
                              Store 59_11(r11) 1-41_2
           65_15:   32_9(ptr) AccessChain 59_1 43_7
           61_15: 23_3(ivec2) Load 65_15
           171_6: 23_5(bvec2) INotEqual 61_15 44_1
           169_6: 23_2(ivec2) Select 171_6 44_6 44_5
           65_16:  32_13(ptr) AccessChain 59_1 43_10
           61_16: 23_2(ivec2) Load 65_16
          1-42_2: 23_2(ivec2) ExtInst 11_1(GLSL.std.450) 42(SMax) 169_6 61_16
                              Store 59_12(r12) 1-42_2
           65_17:  32_13(ptr) AccessChain 59_1 43_10
           61_17: 23_2(ivec2) Load 65_17
           111_2: 23_4(fvec2) ConvertSToF 61_17
           65_18:  32_10(ptr) AccessChain 59_1 43_8
           61_18: 23_4(fvec2) Load 65_18
          1-40_5: 23_4(fvec2) ExtInst 11_1(GLSL.std.450) 40(FMax) 111_2 61_18
                              Store 59_13(r13) 1-40_5
           65_19:   32_9(ptr) AccessChain 59_1 43_9
           61_19: 23_3(ivec2) Load 65_19
           112_2: 23_4(fvec2) ConvertUToF 61_19
           65_20:  32_10(ptr) AccessChain 59_1 43_8
           61_20: 23_4(fvec2) Load 65_20
          1-40_6: 23_4(fvec2) ExtInst 11_1(GLSL.std.450) 40(FMax) 112_2 61_20
                              Store 59_14(r14) 1-40_6
           65_21:  32_13(ptr) AccessChain 59_1 43_10
           61_21: 23_2(ivec2) Load 65_21
           111_3: 23_4(fvec2) ConvertSToF 61_21
           65_22:   32_9(ptr) AccessChain 59_1 43_9
           61_22: 23_3(ivec2) Load 65_22
           112_3: 23_4(fvec2) ConvertUToF 61_22
           65_23:  32_10(ptr) AccessChain 59_1 43_8
           61_23: 23_4(fvec2) Load 65_23
          1-43_1: 23_4(fvec2) ExtInst 11_1(GLSL.std.450) 43(FClamp) 111_3 112_3 61_23
                              Store 59_15(r20) 1-43_1
           65_24:   32_9(ptr) AccessChain 59_1 43_7
           61_24: 23_3(ivec2) Load 65_24
           171_7: 23_5(bvec2) INotEqual 61_24 44_1
           169_7: 23_3(ivec2) Select 171_7 44_4 44_1
           65_25:   32_9(ptr) AccessChain 59_1 43_9
           61_25: 23_3(ivec2) Load 65_25
           65_26:   32_9(ptr) AccessChain 59_1 43_7
           61_26: 23_3(ivec2) Load 65_26
           171_8: 23_5(bvec2) INotEqual 61_26 44_1
           169_8: 23_3(ivec2) Select 171_8 44_4 44_1
          1-44_1: 23_3(ivec2) ExtInst 11_1(GLSL.std.450) 44(UClamp) 169_7 61_25 169_8
                              Store 59_16(r21) 1-44_1
           65_27:   32_9(ptr) AccessChain 59_1 43_7
           61_27: 23_3(ivec2) Load 65_27
           171_9: 23_5(bvec2) INotEqual 61_27 44_1
           169_9: 23_4(fvec2) Select 171_9 44_3 44_2
           65_28:  32_10(ptr) AccessChain 59_1 43_8
           61_28: 23_4(fvec2) Load 65_28
           65_29:   32_9(ptr) AccessChain 59_1 43_7
           61_29: 23_3(ivec2) Load 65_29
          171_10: 23_5(bvec2) INotEqual 61_29 44_1
          169_10: 23_4(fvec2) Select 171_10 44_3 44_2
          1-43_2: 23_4(fvec2) ExtInst 11_1(GLSL.std.450) 43(FClamp) 169_9 61_28 169_10
                              Store 59_17(r22) 1-43_2
           65_30:   32_3(ptr) AccessChain 59_1 43_1
           61_30:   21_2(int) Load 65_30
          171_11:  20_1(bool) INotEqual 61_30 uint(0)
          169_11: 22_1(float) Select 171_11 43_3 43_2
            80_1: 23_4(fvec2) CompositeConstruct 169_11 169_11
           65_31:  32_10(ptr) AccessChain 59_1 43_8
           61_31: 23_4(fvec2) Load 65_31
          1-40_7: 23_4(fvec2) ExtInst 11_1(GLSL.std.450) 40(FMax) 80_1 61_31
                              Store 59_18(r30) 1-40_7
           65_32:   32_3(ptr) AccessChain 59_1 43_1
           61_32:   21_2(int) Load 65_32
          171_12:  20_1(bool) INotEqual 61_32 uint(0)
          169_12:   21_2(int) Select 171_12 uint(1) uint(0)
            80_2: 23_3(ivec2) CompositeConstruct 169_12 169_12
           65_33:   32_9(ptr) AccessChain 59_1 43_9
           61_33: 23_3(ivec2) Load 65_33
          1-41_3: 23_3(ivec2) ExtInst 11_1(GLSL.std.450) 41(UMax) 80_2 61_33
                              Store 59_19(r31) 1-41_3
           65_34:   32_3(ptr) AccessChain 59_1 43_1
           61_34:   21_2(int) Load 65_34
          171_13:  20_1(bool) INotEqual 61_34 uint(0)
          169_13:   21_1(int) Select 171_13 43_5 43_6
            80_3: 23_2(ivec2) CompositeConstruct 169_13 169_13
           65_35:  32_13(ptr) AccessChain 59_1 43_10
           61_35: 23_2(ivec2) Load 65_35
          1-42_3: 23_2(ivec2) ExtInst 11_1(GLSL.std.450) 42(SMax) 80_3 61_35
                              Store 59_20(r32) 1-42_3
           65_36:   32_7(ptr) AccessChain 59_1 43_6
           61_36:   21_1(int) Load 65_36
           111_4: 22_1(float) ConvertSToF 61_36
            80_4: 23_4(fvec2) CompositeConstruct 111_4 111_4
           65_37:  32_10(ptr) AccessChain 59_1 43_8
           61_37: 23_4(fvec2) Load 65_37
          1-40_8: 23_4(fvec2) ExtInst 11_1(GLSL.std.450) 40(FMax) 80_4 61_37
                              Store 59_21(r33) 1-40_8
           65_38:   32_3(ptr) AccessChain 59_1 43_5
           61_38:   21_2(int) Load 65_38
           112_4: 22_1(float) ConvertUToF 61_38
            80_5: 23_4(fvec2) CompositeConstruct 112_4 112_4
           65_39:  32_10(ptr) AccessChain 59_1 43_8
           61_39: 23_4(fvec2) Load 65_39
          1-40_9: 23_4(fvec2) ExtInst 11_1(GLSL.std.450) 40(FMax) 80_5 61_39
                              Store 59_22(r34) 1-40_9
           65_40:   32_7(ptr) AccessChain 59_1 43_6
           61_40:   21_1(int) Load 65_40
           111_5: 22_1(float) ConvertSToF 61_40
            80_6: 23_4(fvec2) CompositeConstruct 111_5 111_5
           65_41:   32_9(ptr) AccessChain 59_1 43_9
           61_41: 23_3(ivec2) Load 65_41
           112_5: 23_4(fvec2) ConvertUToF 61_41
           65_42:  32_10(ptr) AccessChain 59_1 43_8
           61_42: 23_4(fvec2) Load 65_42
          1-43_3: 23_4(fvec2) ExtInst 11_1(GLSL.std.450) 43(FClamp) 80_6 112_5 61_42
                              Store 59_23(r40) 1-43_3
           65_43:   32_9(ptr) AccessChain 59_1 43_7
           61_43: 23_3(ivec2) Load 65_43
          171_14: 23_5(bvec2) INotEqual 61_43 44_1
          169_14: 23_3(ivec2) Select 171_14 44_4 44_1
           65_44:   32_3(ptr) AccessChain 59_1 43_5
           61_44:   21_2(int) Load 65_44
            80_7: 23_3(ivec2) CompositeConstruct 61_44 61_44
           65_45:   32_9(ptr) AccessChain 59_1 43_7
           61_45: 23_3(ivec2) Load 65_45
          171_15: 23_5(bvec2) INotEqual 61_45 44_1
          169_15: 23_3(ivec2) Select 171_15 44_4 44_1
          1-44_2: 23_3(ivec2) ExtInst 11_1(GLSL.std.450) 44(UClamp) 169_14 80_7 169_15
                              Store 59_24(r41) 1-44_2
           65_46:   32_9(ptr) AccessChain 59_1 43_7
           61_46: 23_3(ivec2) Load 65_46
          171_16: 23_5(bvec2) INotEqual 61_46 44_1
          169_16: 23_4(fvec2) Select 171_16 44_3 44_2
           65_47:   32_4(ptr) AccessChain 59_1 43_4
           61_47: 22_1(float) Load 65_47
            80_8: 23_4(fvec2) CompositeConstruct 61_47 61_47
           65_48:   32_3(ptr) AccessChain 59_1 43_1
           61_48:   21_2(int) Load 65_48
          171_17:  20_1(bool) INotEqual 61_48 uint(0)
          169_17: 22_1(float) Select 171_17 43_3 43_2
            80_9: 23_4(fvec2) CompositeConstruct 169_17 169_17
          1-43_4: 23_4(fvec2) ExtInst 11_1(GLSL.std.450) 43(FClamp) 169_16 80_8 80_9
                              Store 59_25(r42) 1-43_4
           65_49:   32_7(ptr) AccessChain 59_1 43_6
           61_49:   21_1(int) Load 65_49
           124_1:   21_2(int) Bitcast 61_49
           80_10: 23_3(ivec2) CompositeConstruct 124_1 124_1
           65_50:  32_13(ptr) AccessChain 59_1 43_10
           61_50: 23_2(ivec2) Load 65_50
           124_2: 23_3(ivec2) Bitcast 61_50
           65_51:   32_9(ptr) AccessChain 59_1 43_9
           61_51: 23_3(ivec2) Load 65_51
          1-44_3: 23_3(ivec2) ExtInst 11_1(GLSL.std.450) 44(UClamp) 80_10 124_2 61_51
           124_3: 23_2(ivec2) Bitcast 1-44_3
                              Store 59_26(r43) 124_3
           61_52:        25_1 Load 59_2(g_tTexbfs)
           65_52:   32_3(ptr) AccessChain 59_1 43_11
           61_53:   21_2(int) Load 65_52
           124_4:   21_1(int) Bitcast 61_53
            95_1: 23_1(fvec4) ImageFetch 61_52 124_4
            81_2: 22_1(float) CompositeExtract 95_1 0
                              Store 59_27(r50) 81_2
           61_54:        25_1 Load 59_2(g_tTexbfs)
           65_53:   32_4(ptr) AccessChain 59_1 43_12
           61_55: 22_1(float) Load 65_53
           110_1:   21_1(int) ConvertFToS 61_55
            95_2: 23_1(fvec4) ImageFetch 61_54 110_1
            81_3: 22_1(float) CompositeExtract 95_2 0
                              Store 59_28(r51) 81_3
           61_56:        25_2 Load 59_3(g_tTex1df4)
           103_1:   21_2(int) ImageQuerySizeLod 61_56 43_6
                              Store 59_29(sizeQueryTemp) 103_1
           61_57:   21_2(int) Load 59_29(sizeQueryTemp)
           124_5:   21_1(int) Bitcast 61_57
                              Store 59_30(WidthI) 124_5
           61_58:        25_2 Load 59_3(g_tTex1df4)
           103_2:   21_2(int) ImageQuerySizeLod 61_58 uint(6)
                              Store 59_31(sizeQueryTemp) 103_2
           61_59:   21_2(int) Load 59_31(sizeQueryTemp)
           124_6:   21_1(int) Bitcast 61_59
                              Store 59_30(WidthI) 124_6
           61_60:        25_2 Load 59_3(g_tTex1df4)
           106_1:   21_2(int) ImageQueryLevels 61_60
                              Store 59_32(NumberOfLevelsU) 106_1
           61_61:        25_2 Load 59_3(g_tTex1df4)
           103_3:   21_2(int) ImageQuerySizeLod 61_61 uint(6)
                              Store 59_33(sizeQueryTemp) 103_3
           61_62:   21_2(int) Load 59_33(sizeQueryTemp)
                              Store 59_34(WidthU) 61_62
           61_63:        25_2 Load 59_3(g_tTex1df4)
           106_2:   21_2(int) ImageQueryLevels 61_63
           124_7:   21_1(int) Bitcast 106_2
                              Store 59_35(NumberOfLevelsI) 124_7
           61_64:        25_2 Load 59_3(g_tTex1df4)
           103_4:   21_2(int) ImageQuerySizeLod 61_64 uint(6)
                              Store 59_36(sizeQueryTemp) 103_4
           61_65:   21_2(int) Load 59_36(sizeQueryTemp)
           124_8:   21_1(int) Bitcast 61_65
                              Store 59_30(WidthI) 124_8
           61_66:        25_2 Load 59_3(g_tTex1df4)
           106_3:   21_2(int) ImageQueryLevels 61_66
           124_9:   21_1(int) Bitcast 106_3
                              Store 59_35(NumberOfLevelsI) 124_9
           61_67: 22_1(float) Load 59_5(r00)
           80_11: 23_1(fvec4) CompositeConstruct 61_67 61_67 61_67 61_67
           65_54:  32_17(ptr) AccessChain 59_37(ps_output) 43_6
                              Store 65_54 80_11
           61_68:30_1(PS_OUTPUT) Load 59_37(ps_output)
                              ReturnValue 61_68
                              FunctionEnd
