hlsl.logical.binary.frag
Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:12  Function Definition: @main( ( temp structure{ temp 4-component vector of float Color})
0:12    Function Parameters: 
0:?     Sequence
0:13      Test condition and select ( temp void)
0:13        Condition
0:13        logical-and ( temp bool)
0:13          Convert int to bool ( temp bool)
0:13            ival: direct index for structure ( uniform int)
0:13              'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:13              Constant:
0:13                0 (const uint)
0:13          Convert float to bool ( temp bool)
0:13            fval: direct index for structure ( uniform float)
0:13              'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:13              Constant:
0:13                2 (const uint)
0:13        true case is null
0:14      Test condition and select ( temp void)
0:14        Condition
0:14        logical-or ( temp bool)
0:14          Convert int to bool ( temp bool)
0:14            ival: direct index for structure ( uniform int)
0:14              'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:14              Constant:
0:14                0 (const uint)
0:14          Convert float to bool ( temp bool)
0:14            fval: direct index for structure ( uniform float)
0:14              'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:14              Constant:
0:14                2 (const uint)
0:14        true case is null
0:17      move second child to first child ( temp 4-component vector of float)
0:17        Color: direct index for structure ( temp 4-component vector of float)
0:17          'psout' ( temp structure{ temp 4-component vector of float Color})
0:17          Constant:
0:17            0 (const int)
0:17        Constant:
0:17          1.000000
0:17          1.000000
0:17          1.000000
0:17          1.000000
0:18      Branch: Return with expression
0:18        'psout' ( temp structure{ temp 4-component vector of float Color})
0:12  Function Definition: main( ( temp void)
0:12    Function Parameters: 
0:?     Sequence
0:12      Sequence
0:12        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.Color' (layout( location=0) out 4-component vector of float)
0:12          Color: direct index for structure ( temp 4-component vector of float)
0:12            Function Call: @main( ( temp structure{ temp 4-component vector of float Color})
0:12            Constant:
0:12              0 (const int)
0:?   Linker Objects
0:?     'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:?     '@entryPointOutput.Color' (layout( location=0) out 4-component vector of float)


Linked fragment stage:


Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:12  Function Definition: @main( ( temp structure{ temp 4-component vector of float Color})
0:12    Function Parameters: 
0:?     Sequence
0:13      Test condition and select ( temp void)
0:13        Condition
0:13        logical-and ( temp bool)
0:13          Convert int to bool ( temp bool)
0:13            ival: direct index for structure ( uniform int)
0:13              'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:13              Constant:
0:13                0 (const uint)
0:13          Convert float to bool ( temp bool)
0:13            fval: direct index for structure ( uniform float)
0:13              'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:13              Constant:
0:13                2 (const uint)
0:13        true case is null
0:14      Test condition and select ( temp void)
0:14        Condition
0:14        logical-or ( temp bool)
0:14          Convert int to bool ( temp bool)
0:14            ival: direct index for structure ( uniform int)
0:14              'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:14              Constant:
0:14                0 (const uint)
0:14          Convert float to bool ( temp bool)
0:14            fval: direct index for structure ( uniform float)
0:14              'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:14              Constant:
0:14                2 (const uint)
0:14        true case is null
0:17      move second child to first child ( temp 4-component vector of float)
0:17        Color: direct index for structure ( temp 4-component vector of float)
0:17          'psout' ( temp structure{ temp 4-component vector of float Color})
0:17          Constant:
0:17            0 (const int)
0:17        Constant:
0:17          1.000000
0:17          1.000000
0:17          1.000000
0:17          1.000000
0:18      Branch: Return with expression
0:18        'psout' ( temp structure{ temp 4-component vector of float Color})
0:12  Function Definition: main( ( temp void)
0:12    Function Parameters: 
0:?     Sequence
0:12      Sequence
0:12        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.Color' (layout( location=0) out 4-component vector of float)
0:12          Color: direct index for structure ( temp 4-component vector of float)
0:12            Function Call: @main( ( temp structure{ temp 4-component vector of float Color})
0:12            Constant:
0:12              0 (const int)
0:?   Linker Objects
0:?     'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:?     '@entryPointOutput.Color' (layout( location=0) out 4-component vector of float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 56

                              Capability Shader
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 54_1  "main" 59_2
                              ExecutionMode 54_1 OriginUpperLeft
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 30_1  "PS_OUTPUT"
                              MemberName 30_1(PS_OUTPUT) 0  "Color"
                              Name 54_2  "@main("
                              Name 30_2  "$Global"
                              MemberName 30_2($Global) 0  "ival"
                              MemberName 30_2($Global) 1  "ival4"
                              MemberName 30_2($Global) 2  "fval"
                              MemberName 30_2($Global) 3  "fval4"
                              Name 59_1  ""
                              Name 59_3  "psout"
                              Name 59_2  "@entryPointOutput.Color"
                              Decorate 30_2($Global) Block
                              MemberDecorate 30_2($Global) 0 Offset 0
                              MemberDecorate 30_2($Global) 1 Offset 16
                              MemberDecorate 30_2($Global) 2 Offset 32
                              MemberDecorate 30_2($Global) 3 Offset 48
                              Decorate 59_1 Binding 0
                              Decorate 59_1 DescriptorSet 0
                              Decorate 59_2(@entryPointOutput.Color) Location 0
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
 30_1(PS_OUTPUT):             TypeStruct 23_1(fvec4)
            33_2:             TypeFunction 30_1(PS_OUTPUT)
            21_1:             TypeInt 32 1
            23_2:             TypeVector 21_1(int) 4
   30_2($Global):             TypeStruct 21_1(int) 23_2(ivec4) 22_1(float) 23_1(fvec4)
            32_1:             TypePointer Uniform 30_2($Global)
            59_1:   32_1(ptr) Variable Uniform
            43_1:   21_1(int) Constant 0
            32_2:             TypePointer Uniform 21_1(int)
            20_1:             TypeBool
            21_2:             TypeInt 32 0
         uint(0):   21_2(int) Constant 0
            43_2:   21_1(int) Constant 2
            32_3:             TypePointer Uniform 22_1(float)
            43_3: 22_1(float) Constant 0
            32_4:             TypePointer Function 30_1(PS_OUTPUT)
            43_4: 22_1(float) Constant 1065353216
            44_1: 23_1(fvec4) ConstantComposite 43_4 43_4 43_4 43_4
            32_5:             TypePointer Function 23_1(fvec4)
            32_6:             TypePointer Output 23_1(fvec4)
59_2(@entryPointOutput.Color):   32_6(ptr) Variable Output
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
            57_1:30_1(PS_OUTPUT) FunctionCall 54_2(@main()
            81_1: 23_1(fvec4) CompositeExtract 57_1 0
                              Store 59_2(@entryPointOutput.Color) 81_1
                              Return
                              FunctionEnd
    54_2(@main():30_1(PS_OUTPUT) Function None 33_2
           248_2:             Label
     59_3(psout):   32_4(ptr) Variable Function
            65_1:   32_2(ptr) AccessChain 59_1 43_1
            61_1:   21_1(int) Load 65_1
           171_1:  20_1(bool) INotEqual 61_1 uint(0)
            65_2:   32_3(ptr) AccessChain 59_1 43_2
            61_2: 22_1(float) Load 65_2
           183_1:  20_1(bool) FUnordNotEqual 61_2 43_3
           167_1:  20_1(bool) LogicalAnd 171_1 183_1
                              SelectionMerge 248_4 None
                              BranchConditional 167_1 248_3 248_4
           248_3:               Label
                                Branch 248_4
           248_4:             Label
            65_3:   32_2(ptr) AccessChain 59_1 43_1
            61_3:   21_1(int) Load 65_3
           171_2:  20_1(bool) INotEqual 61_3 uint(0)
            65_4:   32_3(ptr) AccessChain 59_1 43_2
            61_4: 22_1(float) Load 65_4
           183_2:  20_1(bool) FUnordNotEqual 61_4 43_3
           166_1:  20_1(bool) LogicalOr 171_2 183_2
                              SelectionMerge 248_6 None
                              BranchConditional 166_1 248_5 248_6
           248_5:               Label
                                Branch 248_6
           248_6:             Label
            65_5:   32_5(ptr) AccessChain 59_3(psout) 43_1
                              Store 65_5 44_1
            61_5:30_1(PS_OUTPUT) Load 59_3(psout)
                              ReturnValue 61_5
                              FunctionEnd
