hlsl.partialInit.frag
WARNING: 0:35: 'cgf2a' : variable with qualifier 'const' not initialized; zero initializing 
WARNING: 0:36: 'ci' : variable with qualifier 'const' not initialized; zero initializing 

Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:8  Sequence
0:8    move second child to first child ( temp 4-component vector of float)
0:8      'gv' ( global 4-component vector of float)
0:8      Constant:
0:8        0.000000
0:8        0.000000
0:8        1.000000
0:8        0.000000
0:9  Sequence
0:9    move second child to first child ( temp 3-element array of float)
0:9      'gfa' ( global 3-element array of float)
0:9      Constant:
0:9        0.000000
0:9        0.000000
0:9        0.000000
0:18  Function Definition: @PixelShaderFunction(vf4; ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:18    Function Parameters: 
0:18      'input' ( in 4-component vector of float)
0:?     Sequence
0:19      Sequence
0:19        move second child to first child ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:19          'o2' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:19          Constant:
0:19            3 (const int)
0:19            0.000000
0:19            false (const bool)
0:19            0.000000
0:19            0.000000
0:19            0.000000
0:19            0.000000
0:21      move second child to first child ( temp 4-component vector of float)
0:21        v: direct index for structure ( temp 4-component vector of float)
0:21          'o4' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:21          Constant:
0:21            3 (const int)
0:21        vector-scale ( temp 4-component vector of float)
0:21          'gv' ( global 4-component vector of float)
0:21          direct index ( temp float)
0:21            'gfa' ( global 3-element array of float)
0:21            Constant:
0:21              2 (const int)
0:22      Sequence
0:22        move second child to first child ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:22          'o1' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:22          Constant:
0:22            0 (const int)
0:22            0.000000
0:22            false (const bool)
0:22            0.000000
0:22            0.000000
0:22            0.000000
0:22            0.000000
0:23      Sequence
0:23        move second child to first child ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:23          'o3' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:23          Constant:
0:23            0 (const int)
0:23            0.000000
0:23            false (const bool)
0:23            0.000000
0:23            0.000000
0:23            0.000000
0:23            0.000000
0:24      move second child to first child ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:24        'o4' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:24        Constant:
0:24          0 (const int)
0:24          0.000000
0:24          false (const bool)
0:24          0.000000
0:24          0.000000
0:24          0.000000
0:24          0.000000
0:25      move second child to first child ( temp bool)
0:25        c: direct index for structure ( temp bool)
0:25          'o4' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:25          Constant:
0:25            2 (const int)
0:25        c: direct index for structure ( temp bool)
0:25          'o1' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:25          Constant:
0:25            2 (const int)
0:26      Sequence
0:26        move second child to first child ( temp structure{ temp 4X3 matrix of float m,  temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v} os,  temp bool b})
0:26          'nest' ( temp structure{ temp 4X3 matrix of float m,  temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v} os,  temp bool b})
0:26          Constant:
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0 (const int)
0:26            0.000000
0:26            false (const bool)
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            false (const bool)
0:28      Sequence
0:28        move second child to first child ( temp 4-element array of 2-component vector of float)
0:28          'gf2a' ( temp 4-element array of 2-component vector of float)
0:28          Constant:
0:28            0.000000
0:28            0.000000
0:28            0.000000
0:28            0.000000
0:28            0.000000
0:28            0.000000
0:28            0.000000
0:28            0.000000
0:29      Sequence
0:29        move second child to first child ( temp int)
0:29          'cgi' ( temp int)
0:29          Constant:
0:29            0 (const int)
0:30      move second child to first child ( temp float)
0:30        b: direct index for structure ( temp float)
0:30          'o4' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:30          Constant:
0:30            1 (const int)
0:30        component-wise multiply ( temp float)
0:30          direct index ( temp float)
0:30            direct index ( temp 2-component vector of float)
0:30              'gf2a' ( temp 4-element array of 2-component vector of float)
0:30              Constant:
0:30                2 (const int)
0:30            Constant:
0:30              1 (const int)
0:30          Convert int to float ( temp float)
0:30            'cgi' ( temp int)
0:32      Branch: Return with expression
0:32        'o4' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:18  Function Definition: PixelShaderFunction( ( temp void)
0:18    Function Parameters: 
0:?     Sequence
0:18      move second child to first child ( temp 4-component vector of float)
0:?         'input' ( temp 4-component vector of float)
0:?         'input' (layout( location=0) in 4-component vector of float)
0:18      Sequence
0:18        move second child to first child ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:18          'flattenTemp' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:18          Function Call: @PixelShaderFunction(vf4; ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:?             'input' ( temp 4-component vector of float)
0:18        move second child to first child ( temp int)
0:?           '@entryPointOutput.a' (layout( location=0) out int)
0:18          a: direct index for structure ( temp int)
0:18            'flattenTemp' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:18            Constant:
0:18              0 (const int)
0:18        move second child to first child ( temp float)
0:?           '@entryPointOutput.b' (layout( location=1) out float)
0:18          b: direct index for structure ( temp float)
0:18            'flattenTemp' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:18            Constant:
0:18              1 (const int)
0:18        move second child to first child ( temp bool)
0:?           '@entryPointOutput.c' (layout( location=2) out bool)
0:18          c: direct index for structure ( temp bool)
0:18            'flattenTemp' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:18            Constant:
0:18              2 (const int)
0:18        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.v' (layout( location=3) out 4-component vector of float)
0:18          v: direct index for structure ( temp 4-component vector of float)
0:18            'flattenTemp' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:18            Constant:
0:18              3 (const int)
0:?   Linker Objects
0:?     'gv' ( global 4-component vector of float)
0:?     'gfa' ( global 3-element array of float)
0:?     '@entryPointOutput.a' (layout( location=0) out int)
0:?     '@entryPointOutput.b' (layout( location=1) out float)
0:?     '@entryPointOutput.c' (layout( location=2) out bool)
0:?     '@entryPointOutput.v' (layout( location=3) out 4-component vector of float)
0:?     'input' (layout( location=0) in 4-component vector of float)
0:?     'cgf2a' ( const 3-element array of 2-component vector of float)
0:?       0.000000
0:?       0.000000
0:?       0.000000
0:?       0.000000
0:?       0.000000
0:?       0.000000
0:?     'ci' ( const int)
0:?       0 (const int)


Linked fragment stage:


Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:8  Sequence
0:8    move second child to first child ( temp 4-component vector of float)
0:8      'gv' ( global 4-component vector of float)
0:8      Constant:
0:8        0.000000
0:8        0.000000
0:8        1.000000
0:8        0.000000
0:9  Sequence
0:9    move second child to first child ( temp 3-element array of float)
0:9      'gfa' ( global 3-element array of float)
0:9      Constant:
0:9        0.000000
0:9        0.000000
0:9        0.000000
0:18  Function Definition: @PixelShaderFunction(vf4; ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:18    Function Parameters: 
0:18      'input' ( in 4-component vector of float)
0:?     Sequence
0:19      Sequence
0:19        move second child to first child ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:19          'o2' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:19          Constant:
0:19            3 (const int)
0:19            0.000000
0:19            false (const bool)
0:19            0.000000
0:19            0.000000
0:19            0.000000
0:19            0.000000
0:21      move second child to first child ( temp 4-component vector of float)
0:21        v: direct index for structure ( temp 4-component vector of float)
0:21          'o4' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:21          Constant:
0:21            3 (const int)
0:21        vector-scale ( temp 4-component vector of float)
0:21          'gv' ( global 4-component vector of float)
0:21          direct index ( temp float)
0:21            'gfa' ( global 3-element array of float)
0:21            Constant:
0:21              2 (const int)
0:22      Sequence
0:22        move second child to first child ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:22          'o1' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:22          Constant:
0:22            0 (const int)
0:22            0.000000
0:22            false (const bool)
0:22            0.000000
0:22            0.000000
0:22            0.000000
0:22            0.000000
0:23      Sequence
0:23        move second child to first child ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:23          'o3' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:23          Constant:
0:23            0 (const int)
0:23            0.000000
0:23            false (const bool)
0:23            0.000000
0:23            0.000000
0:23            0.000000
0:23            0.000000
0:24      move second child to first child ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:24        'o4' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:24        Constant:
0:24          0 (const int)
0:24          0.000000
0:24          false (const bool)
0:24          0.000000
0:24          0.000000
0:24          0.000000
0:24          0.000000
0:25      move second child to first child ( temp bool)
0:25        c: direct index for structure ( temp bool)
0:25          'o4' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:25          Constant:
0:25            2 (const int)
0:25        c: direct index for structure ( temp bool)
0:25          'o1' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:25          Constant:
0:25            2 (const int)
0:26      Sequence
0:26        move second child to first child ( temp structure{ temp 4X3 matrix of float m,  temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v} os,  temp bool b})
0:26          'nest' ( temp structure{ temp 4X3 matrix of float m,  temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v} os,  temp bool b})
0:26          Constant:
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0 (const int)
0:26            0.000000
0:26            false (const bool)
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            false (const bool)
0:28      Sequence
0:28        move second child to first child ( temp 4-element array of 2-component vector of float)
0:28          'gf2a' ( temp 4-element array of 2-component vector of float)
0:28          Constant:
0:28            0.000000
0:28            0.000000
0:28            0.000000
0:28            0.000000
0:28            0.000000
0:28            0.000000
0:28            0.000000
0:28            0.000000
0:29      Sequence
0:29        move second child to first child ( temp int)
0:29          'cgi' ( temp int)
0:29          Constant:
0:29            0 (const int)
0:30      move second child to first child ( temp float)
0:30        b: direct index for structure ( temp float)
0:30          'o4' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:30          Constant:
0:30            1 (const int)
0:30        component-wise multiply ( temp float)
0:30          direct index ( temp float)
0:30            direct index ( temp 2-component vector of float)
0:30              'gf2a' ( temp 4-element array of 2-component vector of float)
0:30              Constant:
0:30                2 (const int)
0:30            Constant:
0:30              1 (const int)
0:30          Convert int to float ( temp float)
0:30            'cgi' ( temp int)
0:32      Branch: Return with expression
0:32        'o4' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:18  Function Definition: PixelShaderFunction( ( temp void)
0:18    Function Parameters: 
0:?     Sequence
0:18      move second child to first child ( temp 4-component vector of float)
0:?         'input' ( temp 4-component vector of float)
0:?         'input' (layout( location=0) in 4-component vector of float)
0:18      Sequence
0:18        move second child to first child ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:18          'flattenTemp' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:18          Function Call: @PixelShaderFunction(vf4; ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:?             'input' ( temp 4-component vector of float)
0:18        move second child to first child ( temp int)
0:?           '@entryPointOutput.a' (layout( location=0) out int)
0:18          a: direct index for structure ( temp int)
0:18            'flattenTemp' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:18            Constant:
0:18              0 (const int)
0:18        move second child to first child ( temp float)
0:?           '@entryPointOutput.b' (layout( location=1) out float)
0:18          b: direct index for structure ( temp float)
0:18            'flattenTemp' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:18            Constant:
0:18              1 (const int)
0:18        move second child to first child ( temp bool)
0:?           '@entryPointOutput.c' (layout( location=2) out bool)
0:18          c: direct index for structure ( temp bool)
0:18            'flattenTemp' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:18            Constant:
0:18              2 (const int)
0:18        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.v' (layout( location=3) out 4-component vector of float)
0:18          v: direct index for structure ( temp 4-component vector of float)
0:18            'flattenTemp' ( temp structure{ temp int a,  temp float b,  temp bool c,  temp 4-component vector of float v})
0:18            Constant:
0:18              3 (const int)
0:?   Linker Objects
0:?     'gv' ( global 4-component vector of float)
0:?     'gfa' ( global 3-element array of float)
0:?     '@entryPointOutput.a' (layout( location=0) out int)
0:?     '@entryPointOutput.b' (layout( location=1) out float)
0:?     '@entryPointOutput.c' (layout( location=2) out bool)
0:?     '@entryPointOutput.v' (layout( location=3) out 4-component vector of float)
0:?     'input' (layout( location=0) in 4-component vector of float)
0:?     'cgf2a' ( const 3-element array of 2-component vector of float)
0:?       0.000000
0:?       0.000000
0:?       0.000000
0:?       0.000000
0:?       0.000000
0:?       0.000000
0:?     'ci' ( const int)
0:?       0 (const int)

Validation failed
// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 104

                              Capability Shader
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 54_1  "PixelShaderFunction" 59_3 59_4 59_5 59_6 59_7
                              ExecutionMode 54_1 OriginUpperLeft
                              Source HLSL 500
                              Name 54_1  "PixelShaderFunction"
                              Name 30_1  "outs"
                              MemberName 30_1(outs) 0  "a"
                              MemberName 30_1(outs) 1  "b"
                              MemberName 30_1(outs) 2  "c"
                              MemberName 30_1(outs) 3  "v"
                              Name 54_2  "@PixelShaderFunction(vf4;"
                              Name 55_1  "input"
                              Name 59_1  "gv"
                              Name 59_2  "gfa"
                              Name 59_11  "o2"
                              Name 59_12  "o4"
                              Name 59_13  "o1"
                              Name 59_14  "o3"
                              Name 30_2  "Nest"
                              MemberName 30_2(Nest) 0  "m"
                              MemberName 30_2(Nest) 1  "os"
                              MemberName 30_2(Nest) 2  "b"
                              Name 59_15  "nest"
                              Name 59_16  "gf2a"
                              Name 59_17  "cgi"
                              Name 59_8  "input"
                              Name 59_3  "input"
                              Name 59_9  "flattenTemp"
                              Name 59_10  "param"
                              Name 59_4  "@entryPointOutput.a"
                              Name 59_5  "@entryPointOutput.b"
                              Name 59_6  "@entryPointOutput.c"
                              Name 59_7  "@entryPointOutput.v"
                              Decorate 59_3(input) Location 0
                              Decorate 59_4(@entryPointOutput.a) Location 0
                              Decorate 59_5(@entryPointOutput.b) Location 1
                              Decorate 59_6(@entryPointOutput.c) Location 2
                              Decorate 59_7(@entryPointOutput.v) Location 3
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
            32_1:             TypePointer Function 23_1(fvec4)
            21_1:             TypeInt 32 1
            20_1:             TypeBool
      30_1(outs):             TypeStruct 21_1(int) 22_1(float) 20_1(bool) 23_1(fvec4)
            33_2:             TypeFunction 30_1(outs) 32_1(ptr)
            32_2:             TypePointer Private 23_1(fvec4)
        59_1(gv):   32_2(ptr) Variable Private
            43_1: 22_1(float) Constant 0
            43_2: 22_1(float) Constant 1065353216
            44_1: 23_1(fvec4) ConstantComposite 43_1 43_1 43_2 43_1
            21_2:             TypeInt 32 0
         uint(3):   21_2(int) Constant 3
            28_1:             TypeArray 22_1(float) uint(3)
            32_3:             TypePointer Private 28_1
       59_2(gfa):   32_3(ptr) Variable Private
            44_2:        28_1 ConstantComposite 43_1 43_1 43_1
            32_4:             TypePointer Function 30_1(outs)
            43_3:   21_1(int) Constant 3
            42_1:  20_1(bool) ConstantFalse
            44_3: 23_1(fvec4) ConstantComposite 43_1 43_1 43_1 43_1
            44_4:  30_1(outs) ConstantComposite 43_3 43_1 42_1 44_3
            43_4:   21_1(int) Constant 2
            32_5:             TypePointer Private 22_1(float)
            43_5:   21_1(int) Constant 0
            44_5:  30_1(outs) ConstantComposite 43_5 43_1 42_1 44_3
            32_6:             TypePointer Function 20_1(bool)
            23_2:             TypeVector 22_1(float) 3
            24_1:             TypeMatrix 23_2(fvec3) 4
      30_2(Nest):             TypeStruct 24_1 30_1(outs) 20_1(bool)
            32_7:             TypePointer Function 30_2(Nest)
            44_6: 23_2(fvec3) ConstantComposite 43_1 43_1 43_1
            44_7:        24_1 ConstantComposite 44_6 44_6 44_6 44_6
            44_8:  30_2(Nest) ConstantComposite 44_7 44_5 42_1
            23_3:             TypeVector 22_1(float) 2
         uint(4):   21_2(int) Constant 4
            28_2:             TypeArray 23_3(fvec2) uint(4)
            32_8:             TypePointer Function 28_2
            44_9: 23_3(fvec2) ConstantComposite 43_1 43_1
           44_10:        28_2 ConstantComposite 44_9 44_9 44_9 44_9
            32_9:             TypePointer Function 21_1(int)
            43_6:   21_1(int) Constant 1
         uint(1):   21_2(int) Constant 1
           32_10:             TypePointer Function 22_1(float)
           32_11:             TypePointer Input 23_1(fvec4)
     59_3(input):  32_11(ptr) Variable Input
           32_12:             TypePointer Output 21_1(int)
59_4(@entryPointOutput.a):  32_12(ptr) Variable Output
           32_13:             TypePointer Output 22_1(float)
59_5(@entryPointOutput.b):  32_13(ptr) Variable Output
           32_14:             TypePointer Output 20_1(bool)
59_6(@entryPointOutput.c):  32_14(ptr) Variable Output
           32_15:             TypePointer Output 23_1(fvec4)
59_7(@entryPointOutput.v):  32_15(ptr) Variable Output
            28_3:             TypeArray 23_3(fvec2) uint(3)
           44_11:        28_3 ConstantComposite 44_9 44_9 44_9
54_1(PixelShaderFunction):        19_1 Function None 33_1
           248_1:             Label
     59_8(input):   32_1(ptr) Variable Function
59_9(flattenTemp):   32_4(ptr) Variable Function
    59_10(param):   32_1(ptr) Variable Function
                              Store 59_1(gv) 44_1
                              Store 59_2(gfa) 44_2
            61_1: 23_1(fvec4) Load 59_3(input)
                              Store 59_8(input) 61_1
            61_2: 23_1(fvec4) Load 59_8(input)
                              Store 59_10(param) 61_2
            57_1:  30_1(outs) FunctionCall 54_2(@PixelShaderFunction(vf4;) 59_10(param)
                              Store 59_9(flattenTemp) 57_1
            65_1:   32_9(ptr) AccessChain 59_9(flattenTemp) 43_5
            61_3:   21_1(int) Load 65_1
                              Store 59_4(@entryPointOutput.a) 61_3
            65_2:  32_10(ptr) AccessChain 59_9(flattenTemp) 43_6
            61_4: 22_1(float) Load 65_2
                              Store 59_5(@entryPointOutput.b) 61_4
            65_3:   32_6(ptr) AccessChain 59_9(flattenTemp) 43_4
            61_5:  20_1(bool) Load 65_3
                              Store 59_6(@entryPointOutput.c) 61_5
            65_4:   32_1(ptr) AccessChain 59_9(flattenTemp) 43_3
            61_6: 23_1(fvec4) Load 65_4
                              Store 59_7(@entryPointOutput.v) 61_6
                              Return
                              FunctionEnd
54_2(@PixelShaderFunction(vf4;):  30_1(outs) Function None 33_2
     55_1(input):   32_1(ptr) FunctionParameter
           248_2:             Label
       59_11(o2):   32_4(ptr) Variable Function
       59_12(o4):   32_4(ptr) Variable Function
       59_13(o1):   32_4(ptr) Variable Function
       59_14(o3):   32_4(ptr) Variable Function
     59_15(nest):   32_7(ptr) Variable Function
     59_16(gf2a):   32_8(ptr) Variable Function
      59_17(cgi):   32_9(ptr) Variable Function
                              Store 59_11(o2) 44_4
            61_7: 23_1(fvec4) Load 59_1(gv)
            65_5:   32_5(ptr) AccessChain 59_2(gfa) 43_4
            61_8: 22_1(float) Load 65_5
           142_1: 23_1(fvec4) VectorTimesScalar 61_7 61_8
            65_6:   32_1(ptr) AccessChain 59_12(o4) 43_3
                              Store 65_6 142_1
                              Store 59_13(o1) 44_5
                              Store 59_14(o3) 44_5
                              Store 59_12(o4) 44_5
            65_7:   32_6(ptr) AccessChain 59_13(o1) 43_4
            61_9:  20_1(bool) Load 65_7
            65_8:   32_6(ptr) AccessChain 59_12(o4) 43_4
                              Store 65_8 61_9
                              Store 59_15(nest) 44_8
                              Store 59_16(gf2a) 44_10
                              Store 59_17(cgi) 43_5
            65_9:  32_10(ptr) AccessChain 59_16(gf2a) 43_4 uint(1)
           61_10: 22_1(float) Load 65_9
           61_11:   21_1(int) Load 59_17(cgi)
           111_1: 22_1(float) ConvertSToF 61_11
           133_1: 22_1(float) FMul 61_10 111_1
           65_10:  32_10(ptr) AccessChain 59_12(o4) 43_6
                              Store 65_10 133_1
           61_12:  30_1(outs) Load 59_12(o4)
                              ReturnValue 61_12
                              FunctionEnd
