hlsl.logicalConvert.frag
Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:2  Function Definition: @main( ( temp 4-component vector of float)
0:2    Function Parameters: 
0:?     Sequence
0:3      Test condition and select ( temp void)
0:3        Condition
0:3        Constant:
0:3          false (const bool)
0:3        true case
0:4        Branch: Return with expression
0:4          Constant:
0:4            0.000000
0:4            0.000000
0:4            0.000000
0:4            0.000000
0:5      Test condition and select ( temp void)
0:5        Condition
0:5        Constant:
0:5          false (const bool)
0:5        true case
0:6        Branch: Return with expression
0:6          Constant:
0:6            0.000000
0:6            0.000000
0:6            0.000000
0:6            0.000000
0:7      Test condition and select ( temp void)
0:7        Condition
0:7        Constant:
0:7          true (const bool)
0:7        true case
0:8        Branch: Return with expression
0:8          Constant:
0:8            0.000000
0:8            0.000000
0:8            0.000000
0:8            0.000000
0:9      Test condition and select ( temp void)
0:9        Condition
0:9        Constant:
0:9          true (const bool)
0:9        true case
0:10        Branch: Return with expression
0:10          Constant:
0:10            0.000000
0:10            0.000000
0:10            0.000000
0:10            0.000000
0:11      Test condition and select ( temp void)
0:11        Condition
0:11        Constant:
0:11          false (const bool)
0:11        true case
0:12        Branch: Return with expression
0:12          Constant:
0:12            0.000000
0:12            0.000000
0:12            0.000000
0:12            0.000000
0:13      Test condition and select ( temp void)
0:13        Condition
0:13        Constant:
0:13          false (const bool)
0:13        true case
0:14        Branch: Return with expression
0:14          Constant:
0:14            0.000000
0:14            0.000000
0:14            0.000000
0:14            0.000000
0:15      Test condition and select ( temp void)
0:15        Condition
0:15        Constant:
0:15          true (const bool)
0:15        true case
0:16        Branch: Return with expression
0:16          Constant:
0:16            0.000000
0:16            0.000000
0:16            0.000000
0:16            0.000000
0:17      Test condition and select ( temp void)
0:17        Condition
0:17        Constant:
0:17          false (const bool)
0:17        true case
0:18        Branch: Return with expression
0:18          Constant:
0:18            0.000000
0:18            0.000000
0:18            0.000000
0:18            0.000000
0:19      Test condition and select ( temp void)
0:19        Condition
0:19        Constant:
0:19          true (const bool)
0:19        true case
0:20        Branch: Return with expression
0:20          Constant:
0:20            0.000000
0:20            0.000000
0:20            0.000000
0:20            0.000000
0:21      Test condition and select ( temp void)
0:21        Condition
0:21        Constant:
0:21          true (const bool)
0:21        true case
0:22        Branch: Return with expression
0:22          Constant:
0:22            0.000000
0:22            0.000000
0:22            0.000000
0:22            0.000000
0:2  Function Definition: main( ( temp void)
0:2    Function Parameters: 
0:?     Sequence
0:2      move second child to first child ( temp 4-component vector of float)
0:?         '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:2        Function Call: @main( ( temp 4-component vector of float)
0:?   Linker Objects
0:?     '@entryPointOutput' (layout( location=0) out 4-component vector of float)


Linked fragment stage:


Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:2  Function Definition: @main( ( temp 4-component vector of float)
0:2    Function Parameters: 
0:?     Sequence
0:3      Test condition and select ( temp void)
0:3        Condition
0:3        Constant:
0:3          false (const bool)
0:3        true case
0:4        Branch: Return with expression
0:4          Constant:
0:4            0.000000
0:4            0.000000
0:4            0.000000
0:4            0.000000
0:5      Test condition and select ( temp void)
0:5        Condition
0:5        Constant:
0:5          false (const bool)
0:5        true case
0:6        Branch: Return with expression
0:6          Constant:
0:6            0.000000
0:6            0.000000
0:6            0.000000
0:6            0.000000
0:7      Test condition and select ( temp void)
0:7        Condition
0:7        Constant:
0:7          true (const bool)
0:7        true case
0:8        Branch: Return with expression
0:8          Constant:
0:8            0.000000
0:8            0.000000
0:8            0.000000
0:8            0.000000
0:9      Test condition and select ( temp void)
0:9        Condition
0:9        Constant:
0:9          true (const bool)
0:9        true case
0:10        Branch: Return with expression
0:10          Constant:
0:10            0.000000
0:10            0.000000
0:10            0.000000
0:10            0.000000
0:11      Test condition and select ( temp void)
0:11        Condition
0:11        Constant:
0:11          false (const bool)
0:11        true case
0:12        Branch: Return with expression
0:12          Constant:
0:12            0.000000
0:12            0.000000
0:12            0.000000
0:12            0.000000
0:13      Test condition and select ( temp void)
0:13        Condition
0:13        Constant:
0:13          false (const bool)
0:13        true case
0:14        Branch: Return with expression
0:14          Constant:
0:14            0.000000
0:14            0.000000
0:14            0.000000
0:14            0.000000
0:15      Test condition and select ( temp void)
0:15        Condition
0:15        Constant:
0:15          true (const bool)
0:15        true case
0:16        Branch: Return with expression
0:16          Constant:
0:16            0.000000
0:16            0.000000
0:16            0.000000
0:16            0.000000
0:17      Test condition and select ( temp void)
0:17        Condition
0:17        Constant:
0:17          false (const bool)
0:17        true case
0:18        Branch: Return with expression
0:18          Constant:
0:18            0.000000
0:18            0.000000
0:18            0.000000
0:18            0.000000
0:19      Test condition and select ( temp void)
0:19        Condition
0:19        Constant:
0:19          true (const bool)
0:19        true case
0:20        Branch: Return with expression
0:20          Constant:
0:20            0.000000
0:20            0.000000
0:20            0.000000
0:20            0.000000
0:21      Test condition and select ( temp void)
0:21        Condition
0:21        Constant:
0:21          true (const bool)
0:21        true case
0:22        Branch: Return with expression
0:22          Constant:
0:22            0.000000
0:22            0.000000
0:22            0.000000
0:22            0.000000
0:2  Function Definition: main( ( temp void)
0:2    Function Parameters: 
0:?     Sequence
0:2      move second child to first child ( temp 4-component vector of float)
0:?         '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:2        Function Call: @main( ( temp 4-component vector of float)
0:?   Linker Objects
0:?     '@entryPointOutput' (layout( location=0) out 4-component vector of float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 50

                              Capability Shader
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 54_1  "main" 59_1
                              ExecutionMode 54_1 OriginUpperLeft
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 54_2  "@main("
                              Name 59_1  "@entryPointOutput"
                              Decorate 59_1(@entryPointOutput) Location 0
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
            33_2:             TypeFunction 23_1(fvec4)
            20_1:             TypeBool
            42_1:  20_1(bool) ConstantFalse
            43_1: 22_1(float) Constant 0
            44_1: 23_1(fvec4) ConstantComposite 43_1 43_1 43_1 43_1
            41_1:  20_1(bool) ConstantTrue
            32_1:             TypePointer Output 23_1(fvec4)
59_1(@entryPointOutput):   32_1(ptr) Variable Output
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
            57_1: 23_1(fvec4) FunctionCall 54_2(@main()
                              Store 59_1(@entryPointOutput) 57_1
                              Return
                              FunctionEnd
    54_2(@main(): 23_1(fvec4) Function None 33_2
           248_2:             Label
                              SelectionMerge 248_4 None
                              BranchConditional 42_1 248_3 248_4
           248_3:               Label
                                ReturnValue 44_1
           248_4:             Label
                              SelectionMerge 248_6 None
                              BranchConditional 42_1 248_5 248_6
           248_5:               Label
                                ReturnValue 44_1
           248_6:             Label
                              SelectionMerge 248_8 None
                              BranchConditional 41_1 248_7 248_8
           248_7:               Label
                                ReturnValue 44_1
           248_8:             Label
                              SelectionMerge 248_10 None
                              BranchConditional 41_1 248_9 248_10
           248_9:               Label
                                ReturnValue 44_1
          248_10:             Label
                              SelectionMerge 248_12 None
                              BranchConditional 42_1 248_11 248_12
          248_11:               Label
                                ReturnValue 44_1
          248_12:             Label
                              SelectionMerge 248_14 None
                              BranchConditional 42_1 248_13 248_14
          248_13:               Label
                                ReturnValue 44_1
          248_14:             Label
                              SelectionMerge 248_16 None
                              BranchConditional 41_1 248_15 248_16
          248_15:               Label
                                ReturnValue 44_1
          248_16:             Label
                              SelectionMerge 248_18 None
                              BranchConditional 42_1 248_17 248_18
          248_17:               Label
                                ReturnValue 44_1
          248_18:             Label
                              SelectionMerge 248_20 None
                              BranchConditional 41_1 248_19 248_20
          248_19:               Label
                                ReturnValue 44_1
          248_20:             Label
                              SelectionMerge 248_22 None
                              BranchConditional 41_1 248_21 248_22
          248_21:               Label
                                ReturnValue 44_1
          248_22:             Label
             1_1: 23_1(fvec4) Undef
                              ReturnValue 1_1
                              FunctionEnd
