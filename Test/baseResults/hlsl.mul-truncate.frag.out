hlsl.mul-truncate.frag
WARNING: 0:24: '' : mul() matrix size mismatch 
WARNING: 0:25: '' : mul() matrix size mismatch 
WARNING: 0:28: '' : mul() matrix size mismatch 
WARNING: 0:29: '' : mul() matrix size mismatch 
WARNING: 0:32: '' : mul() matrix size mismatch 
WARNING: 0:33: '' : mul() matrix size mismatch 
WARNING: 0:34: '' : mul() matrix size mismatch 
WARNING: 0:35: '' : mul() matrix size mismatch 

Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:18  Function Definition: @main( ( temp 4-component vector of float)
0:18    Function Parameters: 
0:?     Sequence
0:20      Sequence
0:20        move second child to first child ( temp float)
0:20          'r00' ( temp float)
0:20          dot-product ( temp float)
0:20            v2: direct index for structure (layout( row_major std140) uniform 2-component vector of float)
0:20              'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:20              Constant:
0:20                8 (const uint)
0:20            Construct vec2 ( in 2-component vector of float)
0:20              v3: direct index for structure (layout( row_major std140) uniform 3-component vector of float)
0:20                'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:20                Constant:
0:20                  7 (const uint)
0:21      Sequence
0:21        move second child to first child ( temp float)
0:21          'r01' ( temp float)
0:21          dot-product ( temp float)
0:21            Construct vec2 ( in 2-component vector of float)
0:21              v4: direct index for structure (layout( row_major std140) uniform 4-component vector of float)
0:21                'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:21                Constant:
0:21                  6 (const uint)
0:21            v2: direct index for structure (layout( row_major std140) uniform 2-component vector of float)
0:21              'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:21              Constant:
0:21                8 (const uint)
0:24      Sequence
0:24        move second child to first child ( temp 4-component vector of float)
0:24          'r10' ( temp 4-component vector of float)
0:24          matrix-times-vector ( temp 4-component vector of float)
0:24            Construct mat3x4 ( uniform 3X4 matrix of float)
0:24              m44: direct index for structure (layout( row_major std140) uniform 4X4 matrix of float)
0:24                'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:24                Constant:
0:24                  0 (const uint)
0:24            v3: direct index for structure (layout( row_major std140) uniform 3-component vector of float)
0:24              'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:24              Constant:
0:24                7 (const uint)
0:25      Sequence
0:25        move second child to first child ( temp 4-component vector of float)
0:25          'r11' ( temp 4-component vector of float)
0:25          matrix-times-vector ( temp 4-component vector of float)
0:25            m34: direct index for structure (layout( row_major std140) uniform 3X4 matrix of float)
0:25              'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:25              Constant:
0:25                2 (const uint)
0:25            Construct vec3 ( uniform 3-component vector of float)
0:25              v4: direct index for structure (layout( row_major std140) uniform 4-component vector of float)
0:25                'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:25                Constant:
0:25                  6 (const uint)
0:28      Sequence
0:28        move second child to first child ( temp 4-component vector of float)
0:28          'r20' ( temp 4-component vector of float)
0:28          vector-times-matrix ( temp 4-component vector of float)
0:28            v3: direct index for structure (layout( row_major std140) uniform 3-component vector of float)
0:28              'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:28              Constant:
0:28                7 (const uint)
0:28            Construct mat4x3 ( uniform 4X3 matrix of float)
0:28              m44: direct index for structure (layout( row_major std140) uniform 4X4 matrix of float)
0:28                'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:28                Constant:
0:28                  0 (const uint)
0:29      Sequence
0:29        move second child to first child ( temp 4-component vector of float)
0:29          'r21' ( temp 4-component vector of float)
0:29          vector-times-matrix ( temp 4-component vector of float)
0:29            Construct vec3 ( uniform 3-component vector of float)
0:29              v4: direct index for structure (layout( row_major std140) uniform 4-component vector of float)
0:29                'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:29                Constant:
0:29                  6 (const uint)
0:29            m43: direct index for structure (layout( row_major std140) uniform 4X3 matrix of float)
0:29              'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:29              Constant:
0:29                1 (const uint)
0:32      Sequence
0:32        move second child to first child ( temp 2X3 matrix of float)
0:32          'r30' ( temp 2X3 matrix of float)
0:32          matrix-multiply ( temp 2X3 matrix of float)
0:32            m33: direct index for structure (layout( row_major std140) uniform 3X3 matrix of float)
0:32              'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:32              Constant:
0:32                3 (const uint)
0:32            Construct mat2x3 ( uniform 2X3 matrix of float)
0:32              m24: direct index for structure (layout( row_major std140) uniform 2X4 matrix of float)
0:32                'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:32                Constant:
0:32                  4 (const uint)
0:33      Sequence
0:33        move second child to first child ( temp 3X4 matrix of float)
0:33          'r31' ( temp 3X4 matrix of float)
0:33          matrix-multiply ( temp 3X4 matrix of float)
0:33            m24: direct index for structure (layout( row_major std140) uniform 2X4 matrix of float)
0:33              'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:33              Constant:
0:33                4 (const uint)
0:33            Construct mat3x2 ( uniform 3X2 matrix of float)
0:33              m33: direct index for structure (layout( row_major std140) uniform 3X3 matrix of float)
0:33                'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:33                Constant:
0:33                  3 (const uint)
0:34      Sequence
0:34        move second child to first child ( temp 3X2 matrix of float)
0:34          'r32' ( temp 3X2 matrix of float)
0:34          matrix-multiply ( temp 3X2 matrix of float)
0:34            Construct mat3x2 ( uniform 3X2 matrix of float)
0:34              m42: direct index for structure (layout( row_major std140) uniform 4X2 matrix of float)
0:34                'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:34                Constant:
0:34                  5 (const uint)
0:34            m33: direct index for structure (layout( row_major std140) uniform 3X3 matrix of float)
0:34              'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:34              Constant:
0:34                3 (const uint)
0:35      Sequence
0:35        move second child to first child ( temp 4X3 matrix of float)
0:35          'r33' ( temp 4X3 matrix of float)
0:35          matrix-multiply ( temp 4X3 matrix of float)
0:35            Construct mat2x3 ( uniform 2X3 matrix of float)
0:35              m33: direct index for structure (layout( row_major std140) uniform 3X3 matrix of float)
0:35                'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:35                Constant:
0:35                  3 (const uint)
0:35            m42: direct index for structure (layout( row_major std140) uniform 4X2 matrix of float)
0:35              'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:35              Constant:
0:35                5 (const uint)
0:37      Branch: Return with expression
0:37        add ( temp 4-component vector of float)
0:37          add ( temp 4-component vector of float)
0:37            add ( temp 4-component vector of float)
0:37              add ( temp 4-component vector of float)
0:37                add ( temp 4-component vector of float)
0:37                  add ( temp 4-component vector of float)
0:37                    add ( temp 4-component vector of float)
0:37                      add ( temp 4-component vector of float)
0:37                        add ( temp 4-component vector of float)
0:37                          'r10' ( temp 4-component vector of float)
0:37                          'r11' ( temp 4-component vector of float)
0:37                        'r20' ( temp 4-component vector of float)
0:37                      'r21' ( temp 4-component vector of float)
0:37                    'r00' ( temp float)
0:37                  'r01' ( temp float)
0:37                direct index ( temp float)
0:37                  direct index ( temp 3-component vector of float)
0:37                    'r30' ( temp 2X3 matrix of float)
0:37                    Constant:
0:37                      0 (const int)
0:37                  Constant:
0:37                    0 (const int)
0:37              direct index ( temp 4-component vector of float)
0:37                'r31' ( temp 3X4 matrix of float)
0:37                Constant:
0:37                  0 (const int)
0:37            direct index ( temp float)
0:37              direct index ( temp 2-component vector of float)
0:37                'r32' ( temp 3X2 matrix of float)
0:37                Constant:
0:37                  0 (const int)
0:37              Constant:
0:37                0 (const int)
0:37          direct index ( temp 4-component vector of float)
0:37            transpose ( temp 3X4 matrix of float)
0:37              'r33' ( temp 4X3 matrix of float)
0:37            Constant:
0:37              0 (const int)
0:18  Function Definition: main( ( temp void)
0:18    Function Parameters: 
0:?     Sequence
0:18      move second child to first child ( temp 4-component vector of float)
0:?         '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:18        Function Call: @main( ( temp 4-component vector of float)
0:?   Linker Objects
0:?     'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:?     '@entryPointOutput' (layout( location=0) out 4-component vector of float)


Linked fragment stage:


Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:18  Function Definition: @main( ( temp 4-component vector of float)
0:18    Function Parameters: 
0:?     Sequence
0:20      Sequence
0:20        move second child to first child ( temp float)
0:20          'r00' ( temp float)
0:20          dot-product ( temp float)
0:20            v2: direct index for structure (layout( row_major std140) uniform 2-component vector of float)
0:20              'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:20              Constant:
0:20                8 (const uint)
0:20            Construct vec2 ( in 2-component vector of float)
0:20              v3: direct index for structure (layout( row_major std140) uniform 3-component vector of float)
0:20                'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:20                Constant:
0:20                  7 (const uint)
0:21      Sequence
0:21        move second child to first child ( temp float)
0:21          'r01' ( temp float)
0:21          dot-product ( temp float)
0:21            Construct vec2 ( in 2-component vector of float)
0:21              v4: direct index for structure (layout( row_major std140) uniform 4-component vector of float)
0:21                'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:21                Constant:
0:21                  6 (const uint)
0:21            v2: direct index for structure (layout( row_major std140) uniform 2-component vector of float)
0:21              'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:21              Constant:
0:21                8 (const uint)
0:24      Sequence
0:24        move second child to first child ( temp 4-component vector of float)
0:24          'r10' ( temp 4-component vector of float)
0:24          matrix-times-vector ( temp 4-component vector of float)
0:24            Construct mat3x4 ( uniform 3X4 matrix of float)
0:24              m44: direct index for structure (layout( row_major std140) uniform 4X4 matrix of float)
0:24                'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:24                Constant:
0:24                  0 (const uint)
0:24            v3: direct index for structure (layout( row_major std140) uniform 3-component vector of float)
0:24              'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:24              Constant:
0:24                7 (const uint)
0:25      Sequence
0:25        move second child to first child ( temp 4-component vector of float)
0:25          'r11' ( temp 4-component vector of float)
0:25          matrix-times-vector ( temp 4-component vector of float)
0:25            m34: direct index for structure (layout( row_major std140) uniform 3X4 matrix of float)
0:25              'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:25              Constant:
0:25                2 (const uint)
0:25            Construct vec3 ( uniform 3-component vector of float)
0:25              v4: direct index for structure (layout( row_major std140) uniform 4-component vector of float)
0:25                'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:25                Constant:
0:25                  6 (const uint)
0:28      Sequence
0:28        move second child to first child ( temp 4-component vector of float)
0:28          'r20' ( temp 4-component vector of float)
0:28          vector-times-matrix ( temp 4-component vector of float)
0:28            v3: direct index for structure (layout( row_major std140) uniform 3-component vector of float)
0:28              'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:28              Constant:
0:28                7 (const uint)
0:28            Construct mat4x3 ( uniform 4X3 matrix of float)
0:28              m44: direct index for structure (layout( row_major std140) uniform 4X4 matrix of float)
0:28                'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:28                Constant:
0:28                  0 (const uint)
0:29      Sequence
0:29        move second child to first child ( temp 4-component vector of float)
0:29          'r21' ( temp 4-component vector of float)
0:29          vector-times-matrix ( temp 4-component vector of float)
0:29            Construct vec3 ( uniform 3-component vector of float)
0:29              v4: direct index for structure (layout( row_major std140) uniform 4-component vector of float)
0:29                'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:29                Constant:
0:29                  6 (const uint)
0:29            m43: direct index for structure (layout( row_major std140) uniform 4X3 matrix of float)
0:29              'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:29              Constant:
0:29                1 (const uint)
0:32      Sequence
0:32        move second child to first child ( temp 2X3 matrix of float)
0:32          'r30' ( temp 2X3 matrix of float)
0:32          matrix-multiply ( temp 2X3 matrix of float)
0:32            m33: direct index for structure (layout( row_major std140) uniform 3X3 matrix of float)
0:32              'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:32              Constant:
0:32                3 (const uint)
0:32            Construct mat2x3 ( uniform 2X3 matrix of float)
0:32              m24: direct index for structure (layout( row_major std140) uniform 2X4 matrix of float)
0:32                'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:32                Constant:
0:32                  4 (const uint)
0:33      Sequence
0:33        move second child to first child ( temp 3X4 matrix of float)
0:33          'r31' ( temp 3X4 matrix of float)
0:33          matrix-multiply ( temp 3X4 matrix of float)
0:33            m24: direct index for structure (layout( row_major std140) uniform 2X4 matrix of float)
0:33              'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:33              Constant:
0:33                4 (const uint)
0:33            Construct mat3x2 ( uniform 3X2 matrix of float)
0:33              m33: direct index for structure (layout( row_major std140) uniform 3X3 matrix of float)
0:33                'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:33                Constant:
0:33                  3 (const uint)
0:34      Sequence
0:34        move second child to first child ( temp 3X2 matrix of float)
0:34          'r32' ( temp 3X2 matrix of float)
0:34          matrix-multiply ( temp 3X2 matrix of float)
0:34            Construct mat3x2 ( uniform 3X2 matrix of float)
0:34              m42: direct index for structure (layout( row_major std140) uniform 4X2 matrix of float)
0:34                'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:34                Constant:
0:34                  5 (const uint)
0:34            m33: direct index for structure (layout( row_major std140) uniform 3X3 matrix of float)
0:34              'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:34              Constant:
0:34                3 (const uint)
0:35      Sequence
0:35        move second child to first child ( temp 4X3 matrix of float)
0:35          'r33' ( temp 4X3 matrix of float)
0:35          matrix-multiply ( temp 4X3 matrix of float)
0:35            Construct mat2x3 ( uniform 2X3 matrix of float)
0:35              m33: direct index for structure (layout( row_major std140) uniform 3X3 matrix of float)
0:35                'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:35                Constant:
0:35                  3 (const uint)
0:35            m42: direct index for structure (layout( row_major std140) uniform 4X2 matrix of float)
0:35              'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:35              Constant:
0:35                5 (const uint)
0:37      Branch: Return with expression
0:37        add ( temp 4-component vector of float)
0:37          add ( temp 4-component vector of float)
0:37            add ( temp 4-component vector of float)
0:37              add ( temp 4-component vector of float)
0:37                add ( temp 4-component vector of float)
0:37                  add ( temp 4-component vector of float)
0:37                    add ( temp 4-component vector of float)
0:37                      add ( temp 4-component vector of float)
0:37                        add ( temp 4-component vector of float)
0:37                          'r10' ( temp 4-component vector of float)
0:37                          'r11' ( temp 4-component vector of float)
0:37                        'r20' ( temp 4-component vector of float)
0:37                      'r21' ( temp 4-component vector of float)
0:37                    'r00' ( temp float)
0:37                  'r01' ( temp float)
0:37                direct index ( temp float)
0:37                  direct index ( temp 3-component vector of float)
0:37                    'r30' ( temp 2X3 matrix of float)
0:37                    Constant:
0:37                      0 (const int)
0:37                  Constant:
0:37                    0 (const int)
0:37              direct index ( temp 4-component vector of float)
0:37                'r31' ( temp 3X4 matrix of float)
0:37                Constant:
0:37                  0 (const int)
0:37            direct index ( temp float)
0:37              direct index ( temp 2-component vector of float)
0:37                'r32' ( temp 3X2 matrix of float)
0:37                Constant:
0:37                  0 (const int)
0:37              Constant:
0:37                0 (const int)
0:37          direct index ( temp 4-component vector of float)
0:37            transpose ( temp 3X4 matrix of float)
0:37              'r33' ( temp 4X3 matrix of float)
0:37            Constant:
0:37              0 (const int)
0:18  Function Definition: main( ( temp void)
0:18    Function Parameters: 
0:?     Sequence
0:18      move second child to first child ( temp 4-component vector of float)
0:?         '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:18        Function Call: @main( ( temp 4-component vector of float)
0:?   Linker Objects
0:?     'anon@0' (layout( row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float m44, layout( row_major std140) uniform 4X3 matrix of float m43, layout( row_major std140) uniform 3X4 matrix of float m34, layout( row_major std140) uniform 3X3 matrix of float m33, layout( row_major std140) uniform 2X4 matrix of float m24, layout( row_major std140) uniform 4X2 matrix of float m42, layout( row_major std140) uniform 4-component vector of float v4, layout( row_major std140) uniform 3-component vector of float v3, layout( row_major std140) uniform 2-component vector of float v2})
0:?     '@entryPointOutput' (layout( location=0) out 4-component vector of float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 190

                              Capability Shader
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 54_1  "main" 59_2
                              ExecutionMode 54_1 OriginUpperLeft
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 54_2  "@main("
                              Name 59_3  "r00"
                              Name 30_1  "Matrix"
                              MemberName 30_1(Matrix) 0  "m44"
                              MemberName 30_1(Matrix) 1  "m43"
                              MemberName 30_1(Matrix) 2  "m34"
                              MemberName 30_1(Matrix) 3  "m33"
                              MemberName 30_1(Matrix) 4  "m24"
                              MemberName 30_1(Matrix) 5  "m42"
                              MemberName 30_1(Matrix) 6  "v4"
                              MemberName 30_1(Matrix) 7  "v3"
                              MemberName 30_1(Matrix) 8  "v2"
                              Name 59_1  ""
                              Name 59_4  "r01"
                              Name 59_5  "r10"
                              Name 59_6  "r11"
                              Name 59_7  "r20"
                              Name 59_8  "r21"
                              Name 59_9  "r30"
                              Name 59_10  "r31"
                              Name 59_11  "r32"
                              Name 59_12  "r33"
                              Name 59_2  "@entryPointOutput"
                              Decorate 30_1(Matrix) Block
                              MemberDecorate 30_1(Matrix) 0 RowMajor
                              MemberDecorate 30_1(Matrix) 0 MatrixStride 16
                              MemberDecorate 30_1(Matrix) 0 Offset 0
                              MemberDecorate 30_1(Matrix) 1 RowMajor
                              MemberDecorate 30_1(Matrix) 1 MatrixStride 16
                              MemberDecorate 30_1(Matrix) 1 Offset 64
                              MemberDecorate 30_1(Matrix) 2 RowMajor
                              MemberDecorate 30_1(Matrix) 2 MatrixStride 16
                              MemberDecorate 30_1(Matrix) 2 Offset 112
                              MemberDecorate 30_1(Matrix) 3 RowMajor
                              MemberDecorate 30_1(Matrix) 3 MatrixStride 16
                              MemberDecorate 30_1(Matrix) 3 Offset 176
                              MemberDecorate 30_1(Matrix) 4 RowMajor
                              MemberDecorate 30_1(Matrix) 4 MatrixStride 16
                              MemberDecorate 30_1(Matrix) 4 Offset 224
                              MemberDecorate 30_1(Matrix) 5 RowMajor
                              MemberDecorate 30_1(Matrix) 5 MatrixStride 16
                              MemberDecorate 30_1(Matrix) 5 Offset 288
                              MemberDecorate 30_1(Matrix) 6 Offset 320
                              MemberDecorate 30_1(Matrix) 7 Offset 336
                              MemberDecorate 30_1(Matrix) 8 Offset 352
                              Decorate 59_1 Binding 0
                              Decorate 59_1 DescriptorSet 0
                              Decorate 59_2(@entryPointOutput) Location 0
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
            33_2:             TypeFunction 23_1(fvec4)
            32_1:             TypePointer Function 22_1(float)
            24_1:             TypeMatrix 23_1(fvec4) 4
            23_2:             TypeVector 22_1(float) 3
            24_2:             TypeMatrix 23_2(fvec3) 4
            24_3:             TypeMatrix 23_1(fvec4) 3
            24_4:             TypeMatrix 23_2(fvec3) 3
            24_5:             TypeMatrix 23_1(fvec4) 2
            23_3:             TypeVector 22_1(float) 2
            24_6:             TypeMatrix 23_3(fvec2) 4
    30_1(Matrix):             TypeStruct 24_1 24_2 24_3 24_4 24_5 24_6 23_1(fvec4) 23_2(fvec3) 23_3(fvec2)
            32_2:             TypePointer Uniform 30_1(Matrix)
            59_1:   32_2(ptr) Variable Uniform
            21_1:             TypeInt 32 1
            43_1:   21_1(int) Constant 8
            32_3:             TypePointer Uniform 23_3(fvec2)
            43_2:   21_1(int) Constant 7
            32_4:             TypePointer Uniform 23_2(fvec3)
            43_3:   21_1(int) Constant 6
            32_5:             TypePointer Uniform 23_1(fvec4)
            32_6:             TypePointer Function 23_1(fvec4)
            43_4:   21_1(int) Constant 0
            32_7:             TypePointer Uniform 24_1
            43_5:   21_1(int) Constant 2
            32_8:             TypePointer Uniform 24_3
            43_6:   21_1(int) Constant 1
            32_9:             TypePointer Uniform 24_2
            24_7:             TypeMatrix 23_2(fvec3) 2
           32_10:             TypePointer Function 24_7
            43_7:   21_1(int) Constant 3
           32_11:             TypePointer Uniform 24_4
            43_8:   21_1(int) Constant 4
           32_12:             TypePointer Uniform 24_5
           32_13:             TypePointer Function 24_3
            24_8:             TypeMatrix 23_3(fvec2) 3
           32_14:             TypePointer Function 24_8
            43_9:   21_1(int) Constant 5
           32_15:             TypePointer Uniform 24_6
           32_16:             TypePointer Function 24_2
            21_2:             TypeInt 32 0
         uint(0):   21_2(int) Constant 0
           32_17:             TypePointer Output 23_1(fvec4)
59_2(@entryPointOutput):  32_17(ptr) Variable Output
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
            57_1: 23_1(fvec4) FunctionCall 54_2(@main()
                              Store 59_2(@entryPointOutput) 57_1
                              Return
                              FunctionEnd
    54_2(@main(): 23_1(fvec4) Function None 33_2
           248_2:             Label
       59_3(r00):   32_1(ptr) Variable Function
       59_4(r01):   32_1(ptr) Variable Function
       59_5(r10):   32_6(ptr) Variable Function
       59_6(r11):   32_6(ptr) Variable Function
       59_7(r20):   32_6(ptr) Variable Function
       59_8(r21):   32_6(ptr) Variable Function
       59_9(r30):  32_10(ptr) Variable Function
      59_10(r31):  32_13(ptr) Variable Function
      59_11(r32):  32_14(ptr) Variable Function
      59_12(r33):  32_16(ptr) Variable Function
            65_1:   32_3(ptr) AccessChain 59_1 43_1
            61_1: 23_3(fvec2) Load 65_1
            65_2:   32_4(ptr) AccessChain 59_1 43_2
            61_2: 23_2(fvec3) Load 65_2
            81_1: 22_1(float) CompositeExtract 61_2 0
            81_2: 22_1(float) CompositeExtract 61_2 1
            80_1: 23_3(fvec2) CompositeConstruct 81_1 81_2
           148_1: 22_1(float) Dot 61_1 80_1
                              Store 59_3(r00) 148_1
            65_3:   32_5(ptr) AccessChain 59_1 43_3
            61_3: 23_1(fvec4) Load 65_3
            81_3: 22_1(float) CompositeExtract 61_3 0
            81_4: 22_1(float) CompositeExtract 61_3 1
            80_2: 23_3(fvec2) CompositeConstruct 81_3 81_4
            65_4:   32_3(ptr) AccessChain 59_1 43_1
            61_4: 23_3(fvec2) Load 65_4
           148_2: 22_1(float) Dot 80_2 61_4
                              Store 59_4(r01) 148_2
            65_5:   32_7(ptr) AccessChain 59_1 43_4
            61_5:        24_1 Load 65_5
            81_5: 23_1(fvec4) CompositeExtract 61_5 0
            81_6: 23_1(fvec4) CompositeExtract 61_5 1
            81_7: 23_1(fvec4) CompositeExtract 61_5 2
            80_3:        24_3 CompositeConstruct 81_5 81_6 81_7
            65_6:   32_4(ptr) AccessChain 59_1 43_2
            61_6: 23_2(fvec3) Load 65_6
           145_1: 23_1(fvec4) MatrixTimesVector 80_3 61_6
                              Store 59_5(r10) 145_1
            65_7:   32_8(ptr) AccessChain 59_1 43_5
            61_7:        24_3 Load 65_7
            65_8:   32_5(ptr) AccessChain 59_1 43_3
            61_8: 23_1(fvec4) Load 65_8
            81_8: 22_1(float) CompositeExtract 61_8 0
            81_9: 22_1(float) CompositeExtract 61_8 1
           81_10: 22_1(float) CompositeExtract 61_8 2
            80_4: 23_2(fvec3) CompositeConstruct 81_8 81_9 81_10
           145_2: 23_1(fvec4) MatrixTimesVector 61_7 80_4
                              Store 59_6(r11) 145_2
            65_9:   32_4(ptr) AccessChain 59_1 43_2
            61_9: 23_2(fvec3) Load 65_9
           65_10:   32_7(ptr) AccessChain 59_1 43_4
           61_10:        24_1 Load 65_10
           81_11: 23_1(fvec4) CompositeExtract 61_10 0
            79_1: 23_2(fvec3) VectorShuffle 81_11 81_11 0 1 2
           81_12: 23_1(fvec4) CompositeExtract 61_10 1
            79_2: 23_2(fvec3) VectorShuffle 81_12 81_12 0 1 2
           81_13: 23_1(fvec4) CompositeExtract 61_10 2
            79_3: 23_2(fvec3) VectorShuffle 81_13 81_13 0 1 2
           81_14: 23_1(fvec4) CompositeExtract 61_10 3
            79_4: 23_2(fvec3) VectorShuffle 81_14 81_14 0 1 2
            80_5:        24_2 CompositeConstruct 79_1 79_2 79_3 79_4
           144_1: 23_1(fvec4) VectorTimesMatrix 61_9 80_5
                              Store 59_7(r20) 144_1
           65_11:   32_5(ptr) AccessChain 59_1 43_3
           61_11: 23_1(fvec4) Load 65_11
           81_15: 22_1(float) CompositeExtract 61_11 0
           81_16: 22_1(float) CompositeExtract 61_11 1
           81_17: 22_1(float) CompositeExtract 61_11 2
            80_6: 23_2(fvec3) CompositeConstruct 81_15 81_16 81_17
           65_12:   32_9(ptr) AccessChain 59_1 43_6
           61_12:        24_2 Load 65_12
           144_2: 23_1(fvec4) VectorTimesMatrix 80_6 61_12
                              Store 59_8(r21) 144_2
           65_13:  32_11(ptr) AccessChain 59_1 43_7
           61_13:        24_4 Load 65_13
           65_14:  32_12(ptr) AccessChain 59_1 43_8
           61_14:        24_5 Load 65_14
           81_18: 23_1(fvec4) CompositeExtract 61_14 0
            79_5: 23_2(fvec3) VectorShuffle 81_18 81_18 0 1 2
           81_19: 23_1(fvec4) CompositeExtract 61_14 1
            79_6: 23_2(fvec3) VectorShuffle 81_19 81_19 0 1 2
            80_7:        24_7 CompositeConstruct 79_5 79_6
           146_1:        24_7 MatrixTimesMatrix 61_13 80_7
                              Store 59_9(r30) 146_1
           65_15:  32_12(ptr) AccessChain 59_1 43_8
           61_15:        24_5 Load 65_15
           65_16:  32_11(ptr) AccessChain 59_1 43_7
           61_16:        24_4 Load 65_16
           81_20: 23_2(fvec3) CompositeExtract 61_16 0
            79_7: 23_3(fvec2) VectorShuffle 81_20 81_20 0 1
           81_21: 23_2(fvec3) CompositeExtract 61_16 1
            79_8: 23_3(fvec2) VectorShuffle 81_21 81_21 0 1
           81_22: 23_2(fvec3) CompositeExtract 61_16 2
            79_9: 23_3(fvec2) VectorShuffle 81_22 81_22 0 1
            80_8:        24_8 CompositeConstruct 79_7 79_8 79_9
           146_2:        24_3 MatrixTimesMatrix 61_15 80_8
                              Store 59_10(r31) 146_2
           65_17:  32_15(ptr) AccessChain 59_1 43_9
           61_17:        24_6 Load 65_17
           81_23: 23_3(fvec2) CompositeExtract 61_17 0
           81_24: 23_3(fvec2) CompositeExtract 61_17 1
           81_25: 23_3(fvec2) CompositeExtract 61_17 2
            80_9:        24_8 CompositeConstruct 81_23 81_24 81_25
           65_18:  32_11(ptr) AccessChain 59_1 43_7
           61_18:        24_4 Load 65_18
           146_3:        24_8 MatrixTimesMatrix 80_9 61_18
                              Store 59_11(r32) 146_3
           65_19:  32_11(ptr) AccessChain 59_1 43_7
           61_19:        24_4 Load 65_19
           81_26: 23_2(fvec3) CompositeExtract 61_19 0
           81_27: 23_2(fvec3) CompositeExtract 61_19 1
           80_10:        24_7 CompositeConstruct 81_26 81_27
           65_20:  32_15(ptr) AccessChain 59_1 43_9
           61_20:        24_6 Load 65_20
           146_4:        24_2 MatrixTimesMatrix 80_10 61_20
                              Store 59_12(r33) 146_4
           61_21: 23_1(fvec4) Load 59_5(r10)
           61_22: 23_1(fvec4) Load 59_6(r11)
           129_1: 23_1(fvec4) FAdd 61_21 61_22
           61_23: 23_1(fvec4) Load 59_7(r20)
           129_2: 23_1(fvec4) FAdd 129_1 61_23
           61_24: 23_1(fvec4) Load 59_8(r21)
           129_3: 23_1(fvec4) FAdd 129_2 61_24
           61_25: 22_1(float) Load 59_3(r00)
           80_11: 23_1(fvec4) CompositeConstruct 61_25 61_25 61_25 61_25
           129_4: 23_1(fvec4) FAdd 129_3 80_11
           61_26: 22_1(float) Load 59_4(r01)
           80_12: 23_1(fvec4) CompositeConstruct 61_26 61_26 61_26 61_26
           129_5: 23_1(fvec4) FAdd 129_4 80_12
           65_21:   32_1(ptr) AccessChain 59_9(r30) 43_4 uint(0)
           61_27: 22_1(float) Load 65_21
           80_13: 23_1(fvec4) CompositeConstruct 61_27 61_27 61_27 61_27
           129_6: 23_1(fvec4) FAdd 129_5 80_13
           65_22:   32_6(ptr) AccessChain 59_10(r31) 43_4
           61_28: 23_1(fvec4) Load 65_22
           129_7: 23_1(fvec4) FAdd 129_6 61_28
           65_23:   32_1(ptr) AccessChain 59_11(r32) 43_4 uint(0)
           61_29: 22_1(float) Load 65_23
           80_14: 23_1(fvec4) CompositeConstruct 61_29 61_29 61_29 61_29
           129_8: 23_1(fvec4) FAdd 129_7 80_14
           61_30:        24_2 Load 59_12(r33)
            84_1:        24_3 Transpose 61_30
           81_28: 23_1(fvec4) CompositeExtract 84_1 0
           129_9: 23_1(fvec4) FAdd 129_8 81_28
                              ReturnValue 129_9
                              FunctionEnd
