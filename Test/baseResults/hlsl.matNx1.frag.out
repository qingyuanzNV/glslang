hlsl.matNx1.frag
Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:3  Function Definition: TestMatNx1( ( temp void)
0:3    Function Parameters: 
0:?     Sequence
0:13      Sequence
0:13        move second child to first child ( temp 1X1 matrix of float)
0:13          'r00' ( temp 1X1 matrix of float)
0:13          transpose ( temp 1X1 matrix of float)
0:13            'f1x1' ( temp 1X1 matrix of float)
0:14      Sequence
0:14        move second child to first child ( temp 1X2 matrix of float)
0:14          'r01' ( temp 1X2 matrix of float)
0:14          transpose ( temp 1X2 matrix of float)
0:14            'f2x1' ( temp 2X1 matrix of float)
0:15      Sequence
0:15        move second child to first child ( temp 1X3 matrix of float)
0:15          'r02' ( temp 1X3 matrix of float)
0:15          transpose ( temp 1X3 matrix of float)
0:15            'f3x1' ( temp 3X1 matrix of float)
0:16      Sequence
0:16        move second child to first child ( temp 1X4 matrix of float)
0:16          'r03' ( temp 1X4 matrix of float)
0:16          transpose ( temp 1X4 matrix of float)
0:16            'f4x1' ( temp 4X1 matrix of float)
0:18      Sequence
0:18        move second child to first child ( temp 1X1 matrix of float)
0:18          'r10' ( temp 1X1 matrix of float)
0:18          transpose ( temp 1X1 matrix of float)
0:18            'f1x1' ( temp 1X1 matrix of float)
0:19      Sequence
0:19        move second child to first child ( temp 2X1 matrix of float)
0:19          'r11' ( temp 2X1 matrix of float)
0:19          transpose ( temp 2X1 matrix of float)
0:19            'f1x2' ( temp 1X2 matrix of float)
0:20      Sequence
0:20        move second child to first child ( temp 3X1 matrix of float)
0:20          'r12' ( temp 3X1 matrix of float)
0:20          transpose ( temp 3X1 matrix of float)
0:20            'f1x3' ( temp 1X3 matrix of float)
0:21      Sequence
0:21        move second child to first child ( temp 4X1 matrix of float)
0:21          'r13' ( temp 4X1 matrix of float)
0:21          transpose ( temp 4X1 matrix of float)
0:21            'f1x4' ( temp 1X4 matrix of float)
0:27  Function Definition: @main( ( temp structure{ temp 4-component vector of float color})
0:27    Function Parameters: 
0:?     Sequence
0:29      move second child to first child ( temp 4-component vector of float)
0:29        color: direct index for structure ( temp 4-component vector of float)
0:29          'ps_output' ( temp structure{ temp 4-component vector of float color})
0:29          Constant:
0:29            0 (const int)
0:29        Constant:
0:29          1.000000
0:29          1.000000
0:29          1.000000
0:29          1.000000
0:30      Branch: Return with expression
0:30        'ps_output' ( temp structure{ temp 4-component vector of float color})
0:27  Function Definition: main( ( temp void)
0:27    Function Parameters: 
0:?     Sequence
0:27      Sequence
0:27        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.color' (layout( location=0) out 4-component vector of float)
0:27          color: direct index for structure ( temp 4-component vector of float)
0:27            Function Call: @main( ( temp structure{ temp 4-component vector of float color})
0:27            Constant:
0:27              0 (const int)
0:?   Linker Objects
0:?     '@entryPointOutput.color' (layout( location=0) out 4-component vector of float)


Linked fragment stage:


Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:3  Function Definition: TestMatNx1( ( temp void)
0:3    Function Parameters: 
0:?     Sequence
0:13      Sequence
0:13        move second child to first child ( temp 1X1 matrix of float)
0:13          'r00' ( temp 1X1 matrix of float)
0:13          transpose ( temp 1X1 matrix of float)
0:13            'f1x1' ( temp 1X1 matrix of float)
0:14      Sequence
0:14        move second child to first child ( temp 1X2 matrix of float)
0:14          'r01' ( temp 1X2 matrix of float)
0:14          transpose ( temp 1X2 matrix of float)
0:14            'f2x1' ( temp 2X1 matrix of float)
0:15      Sequence
0:15        move second child to first child ( temp 1X3 matrix of float)
0:15          'r02' ( temp 1X3 matrix of float)
0:15          transpose ( temp 1X3 matrix of float)
0:15            'f3x1' ( temp 3X1 matrix of float)
0:16      Sequence
0:16        move second child to first child ( temp 1X4 matrix of float)
0:16          'r03' ( temp 1X4 matrix of float)
0:16          transpose ( temp 1X4 matrix of float)
0:16            'f4x1' ( temp 4X1 matrix of float)
0:18      Sequence
0:18        move second child to first child ( temp 1X1 matrix of float)
0:18          'r10' ( temp 1X1 matrix of float)
0:18          transpose ( temp 1X1 matrix of float)
0:18            'f1x1' ( temp 1X1 matrix of float)
0:19      Sequence
0:19        move second child to first child ( temp 2X1 matrix of float)
0:19          'r11' ( temp 2X1 matrix of float)
0:19          transpose ( temp 2X1 matrix of float)
0:19            'f1x2' ( temp 1X2 matrix of float)
0:20      Sequence
0:20        move second child to first child ( temp 3X1 matrix of float)
0:20          'r12' ( temp 3X1 matrix of float)
0:20          transpose ( temp 3X1 matrix of float)
0:20            'f1x3' ( temp 1X3 matrix of float)
0:21      Sequence
0:21        move second child to first child ( temp 4X1 matrix of float)
0:21          'r13' ( temp 4X1 matrix of float)
0:21          transpose ( temp 4X1 matrix of float)
0:21            'f1x4' ( temp 1X4 matrix of float)
0:27  Function Definition: @main( ( temp structure{ temp 4-component vector of float color})
0:27    Function Parameters: 
0:?     Sequence
0:29      move second child to first child ( temp 4-component vector of float)
0:29        color: direct index for structure ( temp 4-component vector of float)
0:29          'ps_output' ( temp structure{ temp 4-component vector of float color})
0:29          Constant:
0:29            0 (const int)
0:29        Constant:
0:29          1.000000
0:29          1.000000
0:29          1.000000
0:29          1.000000
0:30      Branch: Return with expression
0:30        'ps_output' ( temp structure{ temp 4-component vector of float color})
0:27  Function Definition: main( ( temp void)
0:27    Function Parameters: 
0:?     Sequence
0:27      Sequence
0:27        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.color' (layout( location=0) out 4-component vector of float)
0:27          color: direct index for structure ( temp 4-component vector of float)
0:27            Function Call: @main( ( temp structure{ temp 4-component vector of float color})
0:27            Constant:
0:27              0 (const int)
0:?   Linker Objects
0:?     '@entryPointOutput.color' (layout( location=0) out 4-component vector of float)

Validation failed
// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 77

                              Capability Shader
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 54_1  "main" 59_1
                              ExecutionMode 54_1 OriginUpperLeft
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 54_2  "TestMatNx1("
                              Name 30_1  "PS_OUTPUT"
                              MemberName 30_1(PS_OUTPUT) 0  "color"
                              Name 54_3  "@main("
                              Name 59_2  "r00"
                              Name 59_3  "f1x1"
                              Name 59_4  "r01"
                              Name 59_5  "f2x1"
                              Name 59_6  "r02"
                              Name 59_7  "f3x1"
                              Name 59_8  "r03"
                              Name 59_9  "f4x1"
                              Name 59_10  "r10"
                              Name 59_11  "r11"
                              Name 59_12  "f1x2"
                              Name 59_13  "r12"
                              Name 59_14  "f1x3"
                              Name 59_15  "r13"
                              Name 59_16  "f1x4"
                              Name 59_17  "ps_output"
                              Name 59_1  "@entryPointOutput.color"
                              Decorate 59_1(@entryPointOutput.color) Location 0
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
 30_1(PS_OUTPUT):             TypeStruct 23_1(fvec4)
            33_2:             TypeFunction 30_1(PS_OUTPUT)
            23_2:             TypeVector 22_1(float) 1
            24_1:             TypeMatrix 23_2(fvec) 1
            32_1:             TypePointer Function 24_1
            23_3:             TypeVector 22_1(float) 2
            24_2:             TypeMatrix 23_3(fvec2) 1
            32_2:             TypePointer Function 24_2
            24_3:             TypeMatrix 23_2(fvec) 2
            32_3:             TypePointer Function 24_3
            23_4:             TypeVector 22_1(float) 3
            24_4:             TypeMatrix 23_4(fvec3) 1
            32_4:             TypePointer Function 24_4
            24_5:             TypeMatrix 23_2(fvec) 3
            32_5:             TypePointer Function 24_5
            24_6:             TypeMatrix 23_1(fvec4) 1
            32_6:             TypePointer Function 24_6
            24_7:             TypeMatrix 23_2(fvec) 4
            32_7:             TypePointer Function 24_7
            32_8:             TypePointer Function 30_1(PS_OUTPUT)
            21_1:             TypeInt 32 1
            43_1:   21_1(int) Constant 0
            43_2: 22_1(float) Constant 1065353216
            44_1: 23_1(fvec4) ConstantComposite 43_2 43_2 43_2 43_2
            32_9:             TypePointer Function 23_1(fvec4)
           32_10:             TypePointer Output 23_1(fvec4)
59_1(@entryPointOutput.color):  32_10(ptr) Variable Output
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
            57_1:30_1(PS_OUTPUT) FunctionCall 54_3(@main()
            81_1: 23_1(fvec4) CompositeExtract 57_1 0
                              Store 59_1(@entryPointOutput.color) 81_1
                              Return
                              FunctionEnd
54_2(TestMatNx1():        19_1 Function None 33_1
           248_2:             Label
       59_2(r00):   32_1(ptr) Variable Function
      59_3(f1x1):   32_1(ptr) Variable Function
       59_4(r01):   32_2(ptr) Variable Function
      59_5(f2x1):   32_3(ptr) Variable Function
       59_6(r02):   32_4(ptr) Variable Function
      59_7(f3x1):   32_5(ptr) Variable Function
       59_8(r03):   32_6(ptr) Variable Function
      59_9(f4x1):   32_7(ptr) Variable Function
      59_10(r10):   32_1(ptr) Variable Function
      59_11(r11):   32_3(ptr) Variable Function
     59_12(f1x2):   32_2(ptr) Variable Function
      59_13(r12):   32_5(ptr) Variable Function
     59_14(f1x3):   32_4(ptr) Variable Function
      59_15(r13):   32_7(ptr) Variable Function
     59_16(f1x4):   32_6(ptr) Variable Function
            61_1:        24_1 Load 59_3(f1x1)
            84_1:        24_1 Transpose 61_1
                              Store 59_2(r00) 84_1
            61_2:        24_3 Load 59_5(f2x1)
            84_2:        24_2 Transpose 61_2
                              Store 59_4(r01) 84_2
            61_3:        24_5 Load 59_7(f3x1)
            84_3:        24_4 Transpose 61_3
                              Store 59_6(r02) 84_3
            61_4:        24_7 Load 59_9(f4x1)
            84_4:        24_6 Transpose 61_4
                              Store 59_8(r03) 84_4
            61_5:        24_1 Load 59_3(f1x1)
            84_5:        24_1 Transpose 61_5
                              Store 59_10(r10) 84_5
            61_6:        24_2 Load 59_12(f1x2)
            84_6:        24_3 Transpose 61_6
                              Store 59_11(r11) 84_6
            61_7:        24_4 Load 59_14(f1x3)
            84_7:        24_5 Transpose 61_7
                              Store 59_13(r12) 84_7
            61_8:        24_6 Load 59_16(f1x4)
            84_8:        24_7 Transpose 61_8
                              Store 59_15(r13) 84_8
                              Return
                              FunctionEnd
    54_3(@main():30_1(PS_OUTPUT) Function None 33_2
           248_3:             Label
59_17(ps_output):   32_8(ptr) Variable Function
            65_1:   32_9(ptr) AccessChain 59_17(ps_output) 43_1
                              Store 65_1 44_1
            61_9:30_1(PS_OUTPUT) Load 59_17(ps_output)
                              ReturnValue 61_9
                              FunctionEnd
