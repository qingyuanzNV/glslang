hlsl.logical.unary.frag
Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:12  Function Definition: @main( ( temp structure{ temp 4-component vector of float Color})
0:12    Function Parameters: 
0:?     Sequence
0:13      Negate conditional ( temp bool)
0:13        Convert int to bool ( temp bool)
0:13          ival: direct index for structure ( uniform int)
0:13            'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:13            Constant:
0:13              0 (const uint)
0:14      Negate conditional ( temp 4-component vector of bool)
0:14        Convert int to bool ( temp 4-component vector of bool)
0:14          ival4: direct index for structure ( uniform 4-component vector of int)
0:14            'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:14            Constant:
0:14              1 (const uint)
0:16      Negate conditional ( temp bool)
0:16        Convert float to bool ( temp bool)
0:16          fval: direct index for structure ( uniform float)
0:16            'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:16            Constant:
0:16              2 (const uint)
0:17      Negate conditional ( temp 4-component vector of bool)
0:17        Convert float to bool ( temp 4-component vector of bool)
0:17          fval4: direct index for structure ( uniform 4-component vector of float)
0:17            'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:17            Constant:
0:17              3 (const uint)
0:19      Test condition and select ( temp void)
0:19        Condition
0:19        Convert int to bool ( temp bool)
0:19          ival: direct index for structure ( uniform int)
0:19            'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:19            Constant:
0:19              0 (const uint)
0:19        true case is null
0:20      Test condition and select ( temp void)
0:20        Condition
0:20        Convert float to bool ( temp bool)
0:20          fval: direct index for structure ( uniform float)
0:20            'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:20            Constant:
0:20              2 (const uint)
0:20        true case is null
0:21      Test condition and select ( temp void)
0:21        Condition
0:21        Negate conditional ( temp bool)
0:21          Convert int to bool ( temp bool)
0:21            ival: direct index for structure ( uniform int)
0:21              'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:21              Constant:
0:21                0 (const uint)
0:21        true case is null
0:22      Test condition and select ( temp void)
0:22        Condition
0:22        Negate conditional ( temp bool)
0:22          Convert float to bool ( temp bool)
0:22            fval: direct index for structure ( uniform float)
0:22              'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:22              Constant:
0:22                2 (const uint)
0:22        true case is null
0:25      move second child to first child ( temp 4-component vector of float)
0:25        Color: direct index for structure ( temp 4-component vector of float)
0:25          'psout' ( temp structure{ temp 4-component vector of float Color})
0:25          Constant:
0:25            0 (const int)
0:25        Constant:
0:25          1.000000
0:25          1.000000
0:25          1.000000
0:25          1.000000
0:26      Branch: Return with expression
0:26        'psout' ( temp structure{ temp 4-component vector of float Color})
0:12  Function Definition: main( ( temp void)
0:12    Function Parameters: 
0:?     Sequence
0:12      Sequence
0:12        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.Color' (layout( location=0) out 4-component vector of float)
0:12          Color: direct index for structure ( temp 4-component vector of float)
0:12            Function Call: @main( ( temp structure{ temp 4-component vector of float Color})
0:12            Constant:
0:12              0 (const int)
0:?   Linker Objects
0:?     'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:?     '@entryPointOutput.Color' (layout( location=0) out 4-component vector of float)


Linked fragment stage:


Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:12  Function Definition: @main( ( temp structure{ temp 4-component vector of float Color})
0:12    Function Parameters: 
0:?     Sequence
0:13      Negate conditional ( temp bool)
0:13        Convert int to bool ( temp bool)
0:13          ival: direct index for structure ( uniform int)
0:13            'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:13            Constant:
0:13              0 (const uint)
0:14      Negate conditional ( temp 4-component vector of bool)
0:14        Convert int to bool ( temp 4-component vector of bool)
0:14          ival4: direct index for structure ( uniform 4-component vector of int)
0:14            'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:14            Constant:
0:14              1 (const uint)
0:16      Negate conditional ( temp bool)
0:16        Convert float to bool ( temp bool)
0:16          fval: direct index for structure ( uniform float)
0:16            'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:16            Constant:
0:16              2 (const uint)
0:17      Negate conditional ( temp 4-component vector of bool)
0:17        Convert float to bool ( temp 4-component vector of bool)
0:17          fval4: direct index for structure ( uniform 4-component vector of float)
0:17            'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:17            Constant:
0:17              3 (const uint)
0:19      Test condition and select ( temp void)
0:19        Condition
0:19        Convert int to bool ( temp bool)
0:19          ival: direct index for structure ( uniform int)
0:19            'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:19            Constant:
0:19              0 (const uint)
0:19        true case is null
0:20      Test condition and select ( temp void)
0:20        Condition
0:20        Convert float to bool ( temp bool)
0:20          fval: direct index for structure ( uniform float)
0:20            'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:20            Constant:
0:20              2 (const uint)
0:20        true case is null
0:21      Test condition and select ( temp void)
0:21        Condition
0:21        Negate conditional ( temp bool)
0:21          Convert int to bool ( temp bool)
0:21            ival: direct index for structure ( uniform int)
0:21              'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:21              Constant:
0:21                0 (const uint)
0:21        true case is null
0:22      Test condition and select ( temp void)
0:22        Condition
0:22        Negate conditional ( temp bool)
0:22          Convert float to bool ( temp bool)
0:22            fval: direct index for structure ( uniform float)
0:22              'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:22              Constant:
0:22                2 (const uint)
0:22        true case is null
0:25      move second child to first child ( temp 4-component vector of float)
0:25        Color: direct index for structure ( temp 4-component vector of float)
0:25          'psout' ( temp structure{ temp 4-component vector of float Color})
0:25          Constant:
0:25            0 (const int)
0:25        Constant:
0:25          1.000000
0:25          1.000000
0:25          1.000000
0:25          1.000000
0:26      Branch: Return with expression
0:26        'psout' ( temp structure{ temp 4-component vector of float Color})
0:12  Function Definition: main( ( temp void)
0:12    Function Parameters: 
0:?     Sequence
0:12      Sequence
0:12        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.Color' (layout( location=0) out 4-component vector of float)
0:12          Color: direct index for structure ( temp 4-component vector of float)
0:12            Function Call: @main( ( temp structure{ temp 4-component vector of float Color})
0:12            Constant:
0:12              0 (const int)
0:?   Linker Objects
0:?     'anon@0' (layout( row_major std140) uniform block{ uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:?     '@entryPointOutput.Color' (layout( location=0) out 4-component vector of float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 84

                              Capability Shader
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 54_1  "main" 59_2
                              ExecutionMode 54_1 OriginUpperLeft
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 30_1  "PS_OUTPUT"
                              MemberName 30_1(PS_OUTPUT) 0  "Color"
                              Name 54_2  "@main("
                              Name 30_2  "$Global"
                              MemberName 30_2($Global) 0  "ival"
                              MemberName 30_2($Global) 1  "ival4"
                              MemberName 30_2($Global) 2  "fval"
                              MemberName 30_2($Global) 3  "fval4"
                              Name 59_1  ""
                              Name 59_3  "psout"
                              Name 59_2  "@entryPointOutput.Color"
                              Decorate 30_2($Global) Block
                              MemberDecorate 30_2($Global) 0 Offset 0
                              MemberDecorate 30_2($Global) 1 Offset 16
                              MemberDecorate 30_2($Global) 2 Offset 32
                              MemberDecorate 30_2($Global) 3 Offset 48
                              Decorate 59_1 Binding 0
                              Decorate 59_1 DescriptorSet 0
                              Decorate 59_2(@entryPointOutput.Color) Location 0
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
 30_1(PS_OUTPUT):             TypeStruct 23_1(fvec4)
            33_2:             TypeFunction 30_1(PS_OUTPUT)
            21_1:             TypeInt 32 1
            23_2:             TypeVector 21_1(int) 4
   30_2($Global):             TypeStruct 21_1(int) 23_2(ivec4) 22_1(float) 23_1(fvec4)
            32_1:             TypePointer Uniform 30_2($Global)
            59_1:   32_1(ptr) Variable Uniform
            43_1:   21_1(int) Constant 0
            32_2:             TypePointer Uniform 21_1(int)
            20_1:             TypeBool
            21_2:             TypeInt 32 0
         uint(0):   21_2(int) Constant 0
            43_2:   21_1(int) Constant 1
            32_3:             TypePointer Uniform 23_2(ivec4)
            23_3:             TypeVector 20_1(bool) 4
            23_4:             TypeVector 21_2(int) 4
            44_1: 23_4(ivec4) ConstantComposite uint(0) uint(0) uint(0) uint(0)
            43_3:   21_1(int) Constant 2
            32_4:             TypePointer Uniform 22_1(float)
            43_4: 22_1(float) Constant 0
            43_5:   21_1(int) Constant 3
            32_5:             TypePointer Uniform 23_1(fvec4)
            44_2: 23_1(fvec4) ConstantComposite 43_4 43_4 43_4 43_4
            32_6:             TypePointer Function 30_1(PS_OUTPUT)
            43_6: 22_1(float) Constant 1065353216
            44_3: 23_1(fvec4) ConstantComposite 43_6 43_6 43_6 43_6
            32_7:             TypePointer Function 23_1(fvec4)
            32_8:             TypePointer Output 23_1(fvec4)
59_2(@entryPointOutput.Color):   32_8(ptr) Variable Output
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
            57_1:30_1(PS_OUTPUT) FunctionCall 54_2(@main()
            81_1: 23_1(fvec4) CompositeExtract 57_1 0
                              Store 59_2(@entryPointOutput.Color) 81_1
                              Return
                              FunctionEnd
    54_2(@main():30_1(PS_OUTPUT) Function None 33_2
           248_2:             Label
     59_3(psout):   32_6(ptr) Variable Function
            65_1:   32_2(ptr) AccessChain 59_1 43_1
            61_1:   21_1(int) Load 65_1
           171_1:  20_1(bool) INotEqual 61_1 uint(0)
           168_1:  20_1(bool) LogicalNot 171_1
            65_2:   32_3(ptr) AccessChain 59_1 43_2
            61_2: 23_2(ivec4) Load 65_2
           171_2: 23_3(bvec4) INotEqual 61_2 44_1
           168_2: 23_3(bvec4) LogicalNot 171_2
            65_3:   32_4(ptr) AccessChain 59_1 43_3
            61_3: 22_1(float) Load 65_3
           183_1:  20_1(bool) FUnordNotEqual 61_3 43_4
           168_3:  20_1(bool) LogicalNot 183_1
            65_4:   32_5(ptr) AccessChain 59_1 43_5
            61_4: 23_1(fvec4) Load 65_4
           183_2: 23_3(bvec4) FUnordNotEqual 61_4 44_2
           168_4: 23_3(bvec4) LogicalNot 183_2
            65_5:   32_2(ptr) AccessChain 59_1 43_1
            61_5:   21_1(int) Load 65_5
           171_3:  20_1(bool) INotEqual 61_5 uint(0)
                              SelectionMerge 248_4 None
                              BranchConditional 171_3 248_3 248_4
           248_3:               Label
                                Branch 248_4
           248_4:             Label
            65_6:   32_4(ptr) AccessChain 59_1 43_3
            61_6: 22_1(float) Load 65_6
           183_3:  20_1(bool) FUnordNotEqual 61_6 43_4
                              SelectionMerge 248_6 None
                              BranchConditional 183_3 248_5 248_6
           248_5:               Label
                                Branch 248_6
           248_6:             Label
            65_7:   32_2(ptr) AccessChain 59_1 43_1
            61_7:   21_1(int) Load 65_7
           171_4:  20_1(bool) INotEqual 61_7 uint(0)
           168_5:  20_1(bool) LogicalNot 171_4
                              SelectionMerge 248_8 None
                              BranchConditional 168_5 248_7 248_8
           248_7:               Label
                                Branch 248_8
           248_8:             Label
            65_8:   32_4(ptr) AccessChain 59_1 43_3
            61_8: 22_1(float) Load 65_8
           183_4:  20_1(bool) FUnordNotEqual 61_8 43_4
           168_6:  20_1(bool) LogicalNot 183_4
                              SelectionMerge 248_10 None
                              BranchConditional 168_6 248_9 248_10
           248_9:               Label
                                Branch 248_10
          248_10:             Label
            65_9:   32_7(ptr) AccessChain 59_3(psout) 43_1
                              Store 65_9 44_3
            61_9:30_1(PS_OUTPUT) Load 59_3(psout)
                              ReturnValue 61_9
                              FunctionEnd
