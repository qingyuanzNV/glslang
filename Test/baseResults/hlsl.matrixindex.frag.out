hlsl.matrixindex.frag
Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:10  Function Definition: @main( ( temp structure{ temp 4-component vector of float Color})
0:10    Function Parameters: 
0:?     Sequence
0:22      Sequence
0:22        move second child to first child ( temp float)
0:22          'e1_00' ( temp float)
0:22          Constant:
0:22            10.000000
0:23      Sequence
0:23        move second child to first child ( temp float)
0:23          'e1_01' ( temp float)
0:23          Constant:
0:23            11.000000
0:24      Sequence
0:24        move second child to first child ( temp float)
0:24          'e1_10' ( temp float)
0:24          Constant:
0:24            12.000000
0:25      Sequence
0:25        move second child to first child ( temp float)
0:25          'e1_11' ( temp float)
0:25          Constant:
0:25            13.000000
0:26      Sequence
0:26        move second child to first child ( temp float)
0:26          'e1_20' ( temp float)
0:26          Constant:
0:26            14.000000
0:27      Sequence
0:27        move second child to first child ( temp float)
0:27          'e1_21' ( temp float)
0:27          Constant:
0:27            15.000000
0:29      Sequence
0:29        move second child to first child ( temp float)
0:29          'e2_00' ( temp float)
0:29          Constant:
0:29            20.000000
0:30      Sequence
0:30        move second child to first child ( temp float)
0:30          'e2_01' ( temp float)
0:30          Constant:
0:30            21.000000
0:31      Sequence
0:31        move second child to first child ( temp float)
0:31          'e2_10' ( temp float)
0:31          Constant:
0:31            22.000000
0:32      Sequence
0:32        move second child to first child ( temp float)
0:32          'e2_11' ( temp float)
0:32          Constant:
0:32            23.000000
0:33      Sequence
0:33        move second child to first child ( temp float)
0:33          'e2_20' ( temp float)
0:33          Constant:
0:33            24.000000
0:34      Sequence
0:34        move second child to first child ( temp float)
0:34          'e2_21' ( temp float)
0:34          Constant:
0:34            25.000000
0:39      Sequence
0:39        move second child to first child ( temp 2-component vector of float)
0:39          'r0a' ( temp 2-component vector of float)
0:39          Constant:
0:39            10.000000
0:39            11.000000
0:40      Sequence
0:40        move second child to first child ( temp 2-component vector of float)
0:40          'r1a' ( temp 2-component vector of float)
0:40          Constant:
0:40            12.000000
0:40            13.000000
0:41      Sequence
0:41        move second child to first child ( temp 2-component vector of float)
0:41          'r2a' ( temp 2-component vector of float)
0:41          Constant:
0:41            14.000000
0:41            15.000000
0:43      Sequence
0:43        move second child to first child ( temp 2-component vector of float)
0:43          'r0b' ( temp 2-component vector of float)
0:43          indirect index ( temp 2-component vector of float)
0:43            Constant:
0:43              20.000000
0:43              21.000000
0:43              22.000000
0:43              23.000000
0:43              24.000000
0:43              25.000000
0:43            idx: direct index for structure ( uniform int)
0:43              'anon@0' (layout( row_major std140) uniform block{ uniform int idx,  uniform 3X2 matrix of float um})
0:43              Constant:
0:43                0 (const uint)
0:44      Sequence
0:44        move second child to first child ( temp 2-component vector of float)
0:44          'r0c' ( temp 2-component vector of float)
0:44          indirect index ( temp 2-component vector of float)
0:44            um: direct index for structure ( uniform 3X2 matrix of float)
0:44              'anon@0' (layout( row_major std140) uniform block{ uniform int idx,  uniform 3X2 matrix of float um})
0:44              Constant:
0:44                1 (const uint)
0:44            idx: direct index for structure ( uniform int)
0:44              'anon@0' (layout( row_major std140) uniform block{ uniform int idx,  uniform 3X2 matrix of float um})
0:44              Constant:
0:44                0 (const uint)
0:47      move second child to first child ( temp 4-component vector of float)
0:47        Color: direct index for structure ( temp 4-component vector of float)
0:47          'psout' ( temp structure{ temp 4-component vector of float Color})
0:47          Constant:
0:47            0 (const int)
0:47        Construct vec4 ( temp 4-component vector of float)
0:47          'e2_11' ( temp float)
0:48      Branch: Return with expression
0:48        'psout' ( temp structure{ temp 4-component vector of float Color})
0:10  Function Definition: main( ( temp void)
0:10    Function Parameters: 
0:?     Sequence
0:10      Sequence
0:10        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.Color' (layout( location=0) out 4-component vector of float)
0:10          Color: direct index for structure ( temp 4-component vector of float)
0:10            Function Call: @main( ( temp structure{ temp 4-component vector of float Color})
0:10            Constant:
0:10              0 (const int)
0:?   Linker Objects
0:?     'anon@0' (layout( row_major std140) uniform block{ uniform int idx,  uniform 3X2 matrix of float um})
0:?     '@entryPointOutput.Color' (layout( location=0) out 4-component vector of float)


Linked fragment stage:


Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:10  Function Definition: @main( ( temp structure{ temp 4-component vector of float Color})
0:10    Function Parameters: 
0:?     Sequence
0:22      Sequence
0:22        move second child to first child ( temp float)
0:22          'e1_00' ( temp float)
0:22          Constant:
0:22            10.000000
0:23      Sequence
0:23        move second child to first child ( temp float)
0:23          'e1_01' ( temp float)
0:23          Constant:
0:23            11.000000
0:24      Sequence
0:24        move second child to first child ( temp float)
0:24          'e1_10' ( temp float)
0:24          Constant:
0:24            12.000000
0:25      Sequence
0:25        move second child to first child ( temp float)
0:25          'e1_11' ( temp float)
0:25          Constant:
0:25            13.000000
0:26      Sequence
0:26        move second child to first child ( temp float)
0:26          'e1_20' ( temp float)
0:26          Constant:
0:26            14.000000
0:27      Sequence
0:27        move second child to first child ( temp float)
0:27          'e1_21' ( temp float)
0:27          Constant:
0:27            15.000000
0:29      Sequence
0:29        move second child to first child ( temp float)
0:29          'e2_00' ( temp float)
0:29          Constant:
0:29            20.000000
0:30      Sequence
0:30        move second child to first child ( temp float)
0:30          'e2_01' ( temp float)
0:30          Constant:
0:30            21.000000
0:31      Sequence
0:31        move second child to first child ( temp float)
0:31          'e2_10' ( temp float)
0:31          Constant:
0:31            22.000000
0:32      Sequence
0:32        move second child to first child ( temp float)
0:32          'e2_11' ( temp float)
0:32          Constant:
0:32            23.000000
0:33      Sequence
0:33        move second child to first child ( temp float)
0:33          'e2_20' ( temp float)
0:33          Constant:
0:33            24.000000
0:34      Sequence
0:34        move second child to first child ( temp float)
0:34          'e2_21' ( temp float)
0:34          Constant:
0:34            25.000000
0:39      Sequence
0:39        move second child to first child ( temp 2-component vector of float)
0:39          'r0a' ( temp 2-component vector of float)
0:39          Constant:
0:39            10.000000
0:39            11.000000
0:40      Sequence
0:40        move second child to first child ( temp 2-component vector of float)
0:40          'r1a' ( temp 2-component vector of float)
0:40          Constant:
0:40            12.000000
0:40            13.000000
0:41      Sequence
0:41        move second child to first child ( temp 2-component vector of float)
0:41          'r2a' ( temp 2-component vector of float)
0:41          Constant:
0:41            14.000000
0:41            15.000000
0:43      Sequence
0:43        move second child to first child ( temp 2-component vector of float)
0:43          'r0b' ( temp 2-component vector of float)
0:43          indirect index ( temp 2-component vector of float)
0:43            Constant:
0:43              20.000000
0:43              21.000000
0:43              22.000000
0:43              23.000000
0:43              24.000000
0:43              25.000000
0:43            idx: direct index for structure ( uniform int)
0:43              'anon@0' (layout( row_major std140) uniform block{ uniform int idx,  uniform 3X2 matrix of float um})
0:43              Constant:
0:43                0 (const uint)
0:44      Sequence
0:44        move second child to first child ( temp 2-component vector of float)
0:44          'r0c' ( temp 2-component vector of float)
0:44          indirect index ( temp 2-component vector of float)
0:44            um: direct index for structure ( uniform 3X2 matrix of float)
0:44              'anon@0' (layout( row_major std140) uniform block{ uniform int idx,  uniform 3X2 matrix of float um})
0:44              Constant:
0:44                1 (const uint)
0:44            idx: direct index for structure ( uniform int)
0:44              'anon@0' (layout( row_major std140) uniform block{ uniform int idx,  uniform 3X2 matrix of float um})
0:44              Constant:
0:44                0 (const uint)
0:47      move second child to first child ( temp 4-component vector of float)
0:47        Color: direct index for structure ( temp 4-component vector of float)
0:47          'psout' ( temp structure{ temp 4-component vector of float Color})
0:47          Constant:
0:47            0 (const int)
0:47        Construct vec4 ( temp 4-component vector of float)
0:47          'e2_11' ( temp float)
0:48      Branch: Return with expression
0:48        'psout' ( temp structure{ temp 4-component vector of float Color})
0:10  Function Definition: main( ( temp void)
0:10    Function Parameters: 
0:?     Sequence
0:10      Sequence
0:10        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.Color' (layout( location=0) out 4-component vector of float)
0:10          Color: direct index for structure ( temp 4-component vector of float)
0:10            Function Call: @main( ( temp structure{ temp 4-component vector of float Color})
0:10            Constant:
0:10              0 (const int)
0:?   Linker Objects
0:?     'anon@0' (layout( row_major std140) uniform block{ uniform int idx,  uniform 3X2 matrix of float um})
0:?     '@entryPointOutput.Color' (layout( location=0) out 4-component vector of float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 83

                              Capability Shader
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 54_1  "main" 59_2
                              ExecutionMode 54_1 OriginUpperLeft
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 30_1  "PS_OUTPUT"
                              MemberName 30_1(PS_OUTPUT) 0  "Color"
                              Name 54_2  "@main("
                              Name 59_3  "e1_00"
                              Name 59_4  "e1_01"
                              Name 59_5  "e1_10"
                              Name 59_6  "e1_11"
                              Name 59_7  "e1_20"
                              Name 59_8  "e1_21"
                              Name 59_9  "e2_00"
                              Name 59_10  "e2_01"
                              Name 59_11  "e2_10"
                              Name 59_12  "e2_11"
                              Name 59_13  "e2_20"
                              Name 59_14  "e2_21"
                              Name 59_15  "r0a"
                              Name 59_16  "r1a"
                              Name 59_17  "r2a"
                              Name 59_18  "r0b"
                              Name 30_2  "$Global"
                              MemberName 30_2($Global) 0  "idx"
                              MemberName 30_2($Global) 1  "um"
                              Name 59_1  ""
                              Name 59_19  "indexable"
                              Name 59_20  "r0c"
                              Name 59_21  "psout"
                              Name 59_2  "@entryPointOutput.Color"
                              Decorate 30_2($Global) Block
                              MemberDecorate 30_2($Global) 0 Offset 0
                              MemberDecorate 30_2($Global) 1 RowMajor
                              MemberDecorate 30_2($Global) 1 MatrixStride 16
                              MemberDecorate 30_2($Global) 1 Offset 16
                              Decorate 59_1 Binding 0
                              Decorate 59_1 DescriptorSet 0
                              Decorate 59_2(@entryPointOutput.Color) Location 0
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
 30_1(PS_OUTPUT):             TypeStruct 23_1(fvec4)
            33_2:             TypeFunction 30_1(PS_OUTPUT)
            32_1:             TypePointer Function 22_1(float)
            43_1: 22_1(float) Constant 1092616192
            43_2: 22_1(float) Constant 1093664768
            43_3: 22_1(float) Constant 1094713344
            43_4: 22_1(float) Constant 1095761920
            43_5: 22_1(float) Constant 1096810496
            43_6: 22_1(float) Constant 1097859072
            43_7: 22_1(float) Constant 1101004800
            43_8: 22_1(float) Constant 1101529088
            43_9: 22_1(float) Constant 1102053376
           43_10: 22_1(float) Constant 1102577664
           43_11: 22_1(float) Constant 1103101952
           43_12: 22_1(float) Constant 1103626240
            23_2:             TypeVector 22_1(float) 2
            32_2:             TypePointer Function 23_2(fvec2)
            44_1: 23_2(fvec2) ConstantComposite 43_1 43_2
            44_2: 23_2(fvec2) ConstantComposite 43_3 43_4
            44_3: 23_2(fvec2) ConstantComposite 43_5 43_6
            24_1:             TypeMatrix 23_2(fvec2) 3
            44_4: 23_2(fvec2) ConstantComposite 43_7 43_8
            44_5: 23_2(fvec2) ConstantComposite 43_9 43_10
            44_6: 23_2(fvec2) ConstantComposite 43_11 43_12
            44_7:        24_1 ConstantComposite 44_4 44_5 44_6
            21_1:             TypeInt 32 1
   30_2($Global):             TypeStruct 21_1(int) 24_1
            32_3:             TypePointer Uniform 30_2($Global)
            59_1:   32_3(ptr) Variable Uniform
           43_13:   21_1(int) Constant 0
            32_4:             TypePointer Uniform 21_1(int)
            32_5:             TypePointer Function 24_1
           43_14:   21_1(int) Constant 1
            32_6:             TypePointer Uniform 23_2(fvec2)
            32_7:             TypePointer Function 30_1(PS_OUTPUT)
            32_8:             TypePointer Function 23_1(fvec4)
            32_9:             TypePointer Output 23_1(fvec4)
59_2(@entryPointOutput.Color):   32_9(ptr) Variable Output
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
            57_1:30_1(PS_OUTPUT) FunctionCall 54_2(@main()
            81_1: 23_1(fvec4) CompositeExtract 57_1 0
                              Store 59_2(@entryPointOutput.Color) 81_1
                              Return
                              FunctionEnd
    54_2(@main():30_1(PS_OUTPUT) Function None 33_2
           248_2:             Label
     59_3(e1_00):   32_1(ptr) Variable Function
     59_4(e1_01):   32_1(ptr) Variable Function
     59_5(e1_10):   32_1(ptr) Variable Function
     59_6(e1_11):   32_1(ptr) Variable Function
     59_7(e1_20):   32_1(ptr) Variable Function
     59_8(e1_21):   32_1(ptr) Variable Function
     59_9(e2_00):   32_1(ptr) Variable Function
    59_10(e2_01):   32_1(ptr) Variable Function
    59_11(e2_10):   32_1(ptr) Variable Function
    59_12(e2_11):   32_1(ptr) Variable Function
    59_13(e2_20):   32_1(ptr) Variable Function
    59_14(e2_21):   32_1(ptr) Variable Function
      59_15(r0a):   32_2(ptr) Variable Function
      59_16(r1a):   32_2(ptr) Variable Function
      59_17(r2a):   32_2(ptr) Variable Function
      59_18(r0b):   32_2(ptr) Variable Function
59_19(indexable):   32_5(ptr) Variable Function
      59_20(r0c):   32_2(ptr) Variable Function
    59_21(psout):   32_7(ptr) Variable Function
                              Store 59_3(e1_00) 43_1
                              Store 59_4(e1_01) 43_2
                              Store 59_5(e1_10) 43_3
                              Store 59_6(e1_11) 43_4
                              Store 59_7(e1_20) 43_5
                              Store 59_8(e1_21) 43_6
                              Store 59_9(e2_00) 43_7
                              Store 59_10(e2_01) 43_8
                              Store 59_11(e2_10) 43_9
                              Store 59_12(e2_11) 43_10
                              Store 59_13(e2_20) 43_11
                              Store 59_14(e2_21) 43_12
                              Store 59_15(r0a) 44_1
                              Store 59_16(r1a) 44_2
                              Store 59_17(r2a) 44_3
            65_1:   32_4(ptr) AccessChain 59_1 43_13
            61_1:   21_1(int) Load 65_1
                              Store 59_19(indexable) 44_7
            65_2:   32_2(ptr) AccessChain 59_19(indexable) 61_1
            61_2: 23_2(fvec2) Load 65_2
                              Store 59_18(r0b) 61_2
            65_3:   32_4(ptr) AccessChain 59_1 43_13
            61_3:   21_1(int) Load 65_3
            65_4:   32_6(ptr) AccessChain 59_1 43_14 61_3
            61_4: 23_2(fvec2) Load 65_4
                              Store 59_20(r0c) 61_4
            61_5: 22_1(float) Load 59_12(e2_11)
            80_1: 23_1(fvec4) CompositeConstruct 61_5 61_5 61_5 61_5
            65_5:   32_8(ptr) AccessChain 59_21(psout) 43_13
                              Store 65_5 80_1
            61_6:30_1(PS_OUTPUT) Load 59_21(psout)
                              ReturnValue 61_6
                              FunctionEnd
