hlsl.hull.void.tesc
Shader version: 500
vertices = 3
vertex spacing = fractional_even_spacing
triangle order = ccw
0:? Sequence
0:26  Function Definition: @main(struct-VS_OUT-vf31[3]; ( temp structure{ temp 3-component vector of float cpoint})
0:26    Function Parameters: 
0:26      'ip' ( in 3-element array of structure{ temp 3-component vector of float cpoint})
0:?     Sequence
0:28      move second child to first child ( temp 3-component vector of float)
0:28        cpoint: direct index for structure ( temp 3-component vector of float)
0:28          'output' ( temp structure{ temp 3-component vector of float cpoint})
0:28          Constant:
0:28            0 (const int)
0:28        cpoint: direct index for structure ( temp 3-component vector of float)
0:28          direct index ( temp structure{ temp 3-component vector of float cpoint})
0:28            'ip' ( in 3-element array of structure{ temp 3-component vector of float cpoint})
0:28            Constant:
0:28              0 (const int)
0:28          Constant:
0:28            0 (const int)
0:29      Branch: Return with expression
0:29        'output' ( temp structure{ temp 3-component vector of float cpoint})
0:26  Function Definition: main( ( temp void)
0:26    Function Parameters: 
0:?     Sequence
0:26      Sequence
0:26        move second child to first child ( temp 3-component vector of float)
0:26          cpoint: direct index for structure ( temp 3-component vector of float)
0:26            direct index ( temp structure{ temp 3-component vector of float cpoint})
0:?               'ip' ( temp 3-element array of structure{ temp 3-component vector of float cpoint})
0:26              Constant:
0:26                0 (const int)
0:26            Constant:
0:26              0 (const int)
0:26          direct index (layout( location=0) in 3-component vector of float)
0:?             'ip.cpoint' (layout( location=0) in 3-element array of 3-component vector of float)
0:26            Constant:
0:26              0 (const int)
0:26        move second child to first child ( temp 3-component vector of float)
0:26          cpoint: direct index for structure ( temp 3-component vector of float)
0:26            direct index ( temp structure{ temp 3-component vector of float cpoint})
0:?               'ip' ( temp 3-element array of structure{ temp 3-component vector of float cpoint})
0:26              Constant:
0:26                1 (const int)
0:26            Constant:
0:26              0 (const int)
0:26          direct index (layout( location=0) in 3-component vector of float)
0:?             'ip.cpoint' (layout( location=0) in 3-element array of 3-component vector of float)
0:26            Constant:
0:26              1 (const int)
0:26        move second child to first child ( temp 3-component vector of float)
0:26          cpoint: direct index for structure ( temp 3-component vector of float)
0:26            direct index ( temp structure{ temp 3-component vector of float cpoint})
0:?               'ip' ( temp 3-element array of structure{ temp 3-component vector of float cpoint})
0:26              Constant:
0:26                2 (const int)
0:26            Constant:
0:26              0 (const int)
0:26          direct index (layout( location=0) in 3-component vector of float)
0:?             'ip.cpoint' (layout( location=0) in 3-element array of 3-component vector of float)
0:26            Constant:
0:26              2 (const int)
0:26      Sequence
0:26        move second child to first child ( temp 3-component vector of float)
0:26          indirect index (layout( location=0) out 3-component vector of float)
0:?             '@entryPointOutput.cpoint' (layout( location=0) out 3-element array of 3-component vector of float)
0:?             'InvocationId' ( in uint InvocationID)
0:26          cpoint: direct index for structure ( temp 3-component vector of float)
0:26            Function Call: @main(struct-VS_OUT-vf31[3]; ( temp structure{ temp 3-component vector of float cpoint})
0:?               'ip' ( temp 3-element array of structure{ temp 3-component vector of float cpoint})
0:26            Constant:
0:26              0 (const int)
0:?       Barrier ( temp void)
0:?       Test condition and select ( temp void)
0:?         Condition
0:?         Compare Equal ( temp bool)
0:?           'InvocationId' ( in uint InvocationID)
0:?           Constant:
0:?             0 (const int)
0:?         true case
0:?         Sequence
0:?           Function Call: PCF( ( temp void)
0:33  Function Definition: PCF( ( temp void)
0:33    Function Parameters: 
0:?   Linker Objects
0:?     '@entryPointOutput.cpoint' (layout( location=0) out 3-element array of 3-component vector of float)
0:?     'ip.cpoint' (layout( location=0) in 3-element array of 3-component vector of float)
0:?     'InvocationId' ( in uint InvocationID)


Linked tessellation control stage:


Shader version: 500
vertices = 3
vertex spacing = fractional_even_spacing
triangle order = ccw
0:? Sequence
0:26  Function Definition: @main(struct-VS_OUT-vf31[3]; ( temp structure{ temp 3-component vector of float cpoint})
0:26    Function Parameters: 
0:26      'ip' ( in 3-element array of structure{ temp 3-component vector of float cpoint})
0:?     Sequence
0:28      move second child to first child ( temp 3-component vector of float)
0:28        cpoint: direct index for structure ( temp 3-component vector of float)
0:28          'output' ( temp structure{ temp 3-component vector of float cpoint})
0:28          Constant:
0:28            0 (const int)
0:28        cpoint: direct index for structure ( temp 3-component vector of float)
0:28          direct index ( temp structure{ temp 3-component vector of float cpoint})
0:28            'ip' ( in 3-element array of structure{ temp 3-component vector of float cpoint})
0:28            Constant:
0:28              0 (const int)
0:28          Constant:
0:28            0 (const int)
0:29      Branch: Return with expression
0:29        'output' ( temp structure{ temp 3-component vector of float cpoint})
0:26  Function Definition: main( ( temp void)
0:26    Function Parameters: 
0:?     Sequence
0:26      Sequence
0:26        move second child to first child ( temp 3-component vector of float)
0:26          cpoint: direct index for structure ( temp 3-component vector of float)
0:26            direct index ( temp structure{ temp 3-component vector of float cpoint})
0:?               'ip' ( temp 3-element array of structure{ temp 3-component vector of float cpoint})
0:26              Constant:
0:26                0 (const int)
0:26            Constant:
0:26              0 (const int)
0:26          direct index (layout( location=0) in 3-component vector of float)
0:?             'ip.cpoint' (layout( location=0) in 3-element array of 3-component vector of float)
0:26            Constant:
0:26              0 (const int)
0:26        move second child to first child ( temp 3-component vector of float)
0:26          cpoint: direct index for structure ( temp 3-component vector of float)
0:26            direct index ( temp structure{ temp 3-component vector of float cpoint})
0:?               'ip' ( temp 3-element array of structure{ temp 3-component vector of float cpoint})
0:26              Constant:
0:26                1 (const int)
0:26            Constant:
0:26              0 (const int)
0:26          direct index (layout( location=0) in 3-component vector of float)
0:?             'ip.cpoint' (layout( location=0) in 3-element array of 3-component vector of float)
0:26            Constant:
0:26              1 (const int)
0:26        move second child to first child ( temp 3-component vector of float)
0:26          cpoint: direct index for structure ( temp 3-component vector of float)
0:26            direct index ( temp structure{ temp 3-component vector of float cpoint})
0:?               'ip' ( temp 3-element array of structure{ temp 3-component vector of float cpoint})
0:26              Constant:
0:26                2 (const int)
0:26            Constant:
0:26              0 (const int)
0:26          direct index (layout( location=0) in 3-component vector of float)
0:?             'ip.cpoint' (layout( location=0) in 3-element array of 3-component vector of float)
0:26            Constant:
0:26              2 (const int)
0:26      Sequence
0:26        move second child to first child ( temp 3-component vector of float)
0:26          indirect index (layout( location=0) out 3-component vector of float)
0:?             '@entryPointOutput.cpoint' (layout( location=0) out 3-element array of 3-component vector of float)
0:?             'InvocationId' ( in uint InvocationID)
0:26          cpoint: direct index for structure ( temp 3-component vector of float)
0:26            Function Call: @main(struct-VS_OUT-vf31[3]; ( temp structure{ temp 3-component vector of float cpoint})
0:?               'ip' ( temp 3-element array of structure{ temp 3-component vector of float cpoint})
0:26            Constant:
0:26              0 (const int)
0:?       Barrier ( temp void)
0:?       Test condition and select ( temp void)
0:?         Condition
0:?         Compare Equal ( temp bool)
0:?           'InvocationId' ( in uint InvocationID)
0:?           Constant:
0:?             0 (const int)
0:?         true case
0:?         Sequence
0:?           Function Call: PCF( ( temp void)
0:33  Function Definition: PCF( ( temp void)
0:33    Function Parameters: 
0:?   Linker Objects
0:?     '@entryPointOutput.cpoint' (layout( location=0) out 3-element array of 3-component vector of float)
0:?     'ip.cpoint' (layout( location=0) in 3-element array of 3-component vector of float)
0:?     'InvocationId' ( in uint InvocationID)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 67

                              Capability Tessellation
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint TessellationControl 54_1  "main" 59_1 59_2 59_3
                              ExecutionMode 54_1 OutputVertices 3
                              ExecutionMode 54_1 Triangles
                              ExecutionMode 54_1 SpacingFractionalEven
                              ExecutionMode 54_1 VertexOrderCcw
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 30_1  "VS_OUT"
                              MemberName 30_1(VS_OUT) 0  "cpoint"
                              Name 30_2  "HS_OUT"
                              MemberName 30_2(HS_OUT) 0  "cpoint"
                              Name 54_2  "@main(struct-VS_OUT-vf31[3];"
                              Name 55_1  "ip"
                              Name 54_3  "PCF("
                              Name 59_6  "output"
                              Name 59_4  "ip"
                              Name 59_1  "ip.cpoint"
                              Name 59_2  "@entryPointOutput.cpoint"
                              Name 59_3  "InvocationId"
                              Name 59_5  "param"
                              Decorate 59_1(ip.cpoint) Location 0
                              Decorate 59_2(@entryPointOutput.cpoint) Location 0
                              Decorate 59_3(InvocationId) BuiltIn InvocationId
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 3
    30_1(VS_OUT):             TypeStruct 23_1(fvec3)
            21_1:             TypeInt 32 0
         uint(3):   21_1(int) Constant 3
            28_1:             TypeArray 30_1(VS_OUT) uint(3)
            32_1:             TypePointer Function 28_1
    30_2(HS_OUT):             TypeStruct 23_1(fvec3)
            33_2:             TypeFunction 30_2(HS_OUT) 32_1(ptr)
            32_2:             TypePointer Function 30_2(HS_OUT)
            21_2:             TypeInt 32 1
            43_1:   21_2(int) Constant 0
            32_3:             TypePointer Function 23_1(fvec3)
            28_2:             TypeArray 23_1(fvec3) uint(3)
            32_4:             TypePointer Input 28_2
 59_1(ip.cpoint):   32_4(ptr) Variable Input
            32_5:             TypePointer Input 23_1(fvec3)
            43_2:   21_2(int) Constant 1
            43_3:   21_2(int) Constant 2
            32_6:             TypePointer Output 28_2
59_2(@entryPointOutput.cpoint):   32_6(ptr) Variable Output
            32_7:             TypePointer Input 21_1(int)
59_3(InvocationId):   32_7(ptr) Variable Input
            32_8:             TypePointer Output 23_1(fvec3)
         uint(2):   21_1(int) Constant 2
         uint(4):   21_1(int) Constant 4
         uint(0):   21_1(int) Constant 0
            20_1:             TypeBool
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
        59_4(ip):   32_1(ptr) Variable Function
     59_5(param):   32_1(ptr) Variable Function
            65_1:   32_5(ptr) AccessChain 59_1(ip.cpoint) 43_1
            61_1: 23_1(fvec3) Load 65_1
            65_2:   32_3(ptr) AccessChain 59_4(ip) 43_1 43_1
                              Store 65_2 61_1
            65_3:   32_5(ptr) AccessChain 59_1(ip.cpoint) 43_2
            61_2: 23_1(fvec3) Load 65_3
            65_4:   32_3(ptr) AccessChain 59_4(ip) 43_2 43_1
                              Store 65_4 61_2
            65_5:   32_5(ptr) AccessChain 59_1(ip.cpoint) 43_3
            61_3: 23_1(fvec3) Load 65_5
            65_6:   32_3(ptr) AccessChain 59_4(ip) 43_3 43_1
                              Store 65_6 61_3
            61_4:   21_1(int) Load 59_3(InvocationId)
            61_5:        28_1 Load 59_4(ip)
                              Store 59_5(param) 61_5
            57_1:30_2(HS_OUT) FunctionCall 54_2(@main(struct-VS_OUT-vf31[3];) 59_5(param)
            81_1: 23_1(fvec3) CompositeExtract 57_1 0
            65_7:   32_8(ptr) AccessChain 59_2(@entryPointOutput.cpoint) 61_4
                              Store 65_7 81_1
                              ControlBarrier uint(2) uint(4) uint(0)
            61_6:   21_1(int) Load 59_3(InvocationId)
           170_1:  20_1(bool) IEqual 61_6 43_1
                              SelectionMerge 248_3 None
                              BranchConditional 170_1 248_2 248_3
           248_2:               Label
            57_2:        19_1   FunctionCall 54_3(PCF()
                                Branch 248_3
           248_3:             Label
                              Return
                              FunctionEnd
54_2(@main(struct-VS_OUT-vf31[3];):30_2(HS_OUT) Function None 33_2
        55_1(ip):   32_1(ptr) FunctionParameter
           248_4:             Label
    59_6(output):   32_2(ptr) Variable Function
            65_8:   32_3(ptr) AccessChain 55_1(ip) 43_1 43_1
            61_7: 23_1(fvec3) Load 65_8
            65_9:   32_3(ptr) AccessChain 59_6(output) 43_1
                              Store 65_9 61_7
            61_8:30_2(HS_OUT) Load 59_6(output)
                              ReturnValue 61_8
                              FunctionEnd
      54_3(PCF():        19_1 Function None 33_1
           248_5:             Label
                              Return
                              FunctionEnd
