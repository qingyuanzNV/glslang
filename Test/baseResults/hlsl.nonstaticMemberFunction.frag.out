hlsl.nonstaticMemberFunction.frag
Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:1  Sequence
0:1    move second child to first child ( temp 2-component vector of float)
0:1      'i' ( global 2-component vector of float)
0:1      Constant:
0:1        1.000000
0:1        2.000000
0:5  Function Definition: type1::setmem(vf4; ( temp void)
0:5    Function Parameters: 
0:5      '@this' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:5      'm' ( in 4-component vector of float)
0:?     Sequence
0:5      move second child to first child ( temp 4-component vector of float)
0:5        memVar: direct index for structure ( temp 4-component vector of float)
0:5          '@this' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:5          Constant:
0:5            0 (const uint)
0:5        'm' ( in 4-component vector of float)
0:6  Function Definition: type1::seti(i1; ( temp void)
0:6    Function Parameters: 
0:6      '@this' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:6      'si' ( in int)
0:?     Sequence
0:6      move second child to first child ( temp int)
0:6        i: direct index for structure ( temp int)
0:6          '@this' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:6          Constant:
0:6            1 (const uint)
0:6        'si' ( in int)
0:9  Function Definition: type1::memFun(vf4; ( temp 4-component vector of float)
0:9    Function Parameters: 
0:9      '@this' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:9      'a' ( in 4-component vector of float)
0:?     Sequence
0:10      Branch: Return with expression
0:10        add ( temp 4-component vector of float)
0:10          vector-scale ( temp 4-component vector of float)
0:10            Convert int to float ( temp float)
0:10              i: direct index for structure ( temp int)
0:10                '@this' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:10                Constant:
0:10                  1 (const uint)
0:10            'a' ( in 4-component vector of float)
0:10          memVar: direct index for structure ( temp 4-component vector of float)
0:10            '@this' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:10            Constant:
0:10              0 (const uint)
0:13  Function Definition: type1::memFun(i1; ( temp int)
0:13    Function Parameters: 
0:13      '@this' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:13      'a' ( in int)
0:?     Sequence
0:14      Branch: Return with expression
0:14        Convert float to int ( temp int)
0:14          subtract ( temp float)
0:14            Convert int to float ( temp float)
0:14              add ( temp int)
0:14                i: direct index for structure ( temp int)
0:14                  '@this' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:14                  Constant:
0:14                    1 (const uint)
0:14                'a' ( in int)
0:14            direct index ( temp float)
0:14              memVar: direct index for structure ( temp 4-component vector of float)
0:14                '@this' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:14                Constant:
0:14                  0 (const uint)
0:14              Constant:
0:14                2 (const int)
0:19  Sequence
0:19    move second child to first child ( temp 2-component vector of float)
0:19      'j' ( global 2-component vector of float)
0:19      'i' ( global 2-component vector of float)
0:23  Function Definition: type2::memFun( ( temp 2-component vector of float)
0:23    Function Parameters: 
0:23      '@this' ( temp structure{})
0:?     Sequence
0:23      Branch: Return with expression
0:23        'i' ( global 2-component vector of float)
0:27  Function Definition: @main( ( temp 4-component vector of float)
0:27    Function Parameters: 
0:?     Sequence
0:29      Function Call: type1::setmem(vf4; ( temp void)
0:29        'test' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:29        Constant:
0:29          2.000000
0:29          2.000000
0:29          2.000000
0:29          2.000000
0:30      Function Call: type1::seti(i1; ( temp void)
0:30        'test' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:30        Constant:
0:30          17 (const int)
0:31      Sequence
0:31        move second child to first child ( temp 4-component vector of float)
0:31          'f4' ( temp 4-component vector of float)
0:31          Constant:
0:31            1.000000
0:31            1.000000
0:31            1.000000
0:31            1.000000
0:32      add second child into first child ( temp 4-component vector of float)
0:32        'f4' ( temp 4-component vector of float)
0:32        Function Call: type1::memFun(vf4; ( temp 4-component vector of float)
0:32          'test' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:32          Constant:
0:32            5.000000
0:32            5.000000
0:32            5.000000
0:32            5.000000
0:33      add second child into first child ( temp 4-component vector of float)
0:33        'f4' ( temp 4-component vector of float)
0:33        Convert int to float ( temp float)
0:33          Function Call: type1::memFun(i1; ( temp int)
0:33            'test' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:33            Constant:
0:33              7 (const int)
0:34      Branch: Return with expression
0:34        'f4' ( temp 4-component vector of float)
0:27  Function Definition: main( ( temp void)
0:27    Function Parameters: 
0:?     Sequence
0:27      move second child to first child ( temp 4-component vector of float)
0:?         '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:27        Function Call: @main( ( temp 4-component vector of float)
0:?   Linker Objects
0:?     'i' ( global 2-component vector of float)
0:?     'j' ( global 2-component vector of float)
0:?     '@entryPointOutput' (layout( location=0) out 4-component vector of float)


Linked fragment stage:


Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:1  Sequence
0:1    move second child to first child ( temp 2-component vector of float)
0:1      'i' ( global 2-component vector of float)
0:1      Constant:
0:1        1.000000
0:1        2.000000
0:5  Function Definition: type1::setmem(vf4; ( temp void)
0:5    Function Parameters: 
0:5      '@this' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:5      'm' ( in 4-component vector of float)
0:?     Sequence
0:5      move second child to first child ( temp 4-component vector of float)
0:5        memVar: direct index for structure ( temp 4-component vector of float)
0:5          '@this' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:5          Constant:
0:5            0 (const uint)
0:5        'm' ( in 4-component vector of float)
0:6  Function Definition: type1::seti(i1; ( temp void)
0:6    Function Parameters: 
0:6      '@this' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:6      'si' ( in int)
0:?     Sequence
0:6      move second child to first child ( temp int)
0:6        i: direct index for structure ( temp int)
0:6          '@this' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:6          Constant:
0:6            1 (const uint)
0:6        'si' ( in int)
0:9  Function Definition: type1::memFun(vf4; ( temp 4-component vector of float)
0:9    Function Parameters: 
0:9      '@this' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:9      'a' ( in 4-component vector of float)
0:?     Sequence
0:10      Branch: Return with expression
0:10        add ( temp 4-component vector of float)
0:10          vector-scale ( temp 4-component vector of float)
0:10            Convert int to float ( temp float)
0:10              i: direct index for structure ( temp int)
0:10                '@this' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:10                Constant:
0:10                  1 (const uint)
0:10            'a' ( in 4-component vector of float)
0:10          memVar: direct index for structure ( temp 4-component vector of float)
0:10            '@this' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:10            Constant:
0:10              0 (const uint)
0:13  Function Definition: type1::memFun(i1; ( temp int)
0:13    Function Parameters: 
0:13      '@this' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:13      'a' ( in int)
0:?     Sequence
0:14      Branch: Return with expression
0:14        Convert float to int ( temp int)
0:14          subtract ( temp float)
0:14            Convert int to float ( temp float)
0:14              add ( temp int)
0:14                i: direct index for structure ( temp int)
0:14                  '@this' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:14                  Constant:
0:14                    1 (const uint)
0:14                'a' ( in int)
0:14            direct index ( temp float)
0:14              memVar: direct index for structure ( temp 4-component vector of float)
0:14                '@this' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:14                Constant:
0:14                  0 (const uint)
0:14              Constant:
0:14                2 (const int)
0:19  Sequence
0:19    move second child to first child ( temp 2-component vector of float)
0:19      'j' ( global 2-component vector of float)
0:19      'i' ( global 2-component vector of float)
0:23  Function Definition: type2::memFun( ( temp 2-component vector of float)
0:23    Function Parameters: 
0:23      '@this' ( temp structure{})
0:?     Sequence
0:23      Branch: Return with expression
0:23        'i' ( global 2-component vector of float)
0:27  Function Definition: @main( ( temp 4-component vector of float)
0:27    Function Parameters: 
0:?     Sequence
0:29      Function Call: type1::setmem(vf4; ( temp void)
0:29        'test' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:29        Constant:
0:29          2.000000
0:29          2.000000
0:29          2.000000
0:29          2.000000
0:30      Function Call: type1::seti(i1; ( temp void)
0:30        'test' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:30        Constant:
0:30          17 (const int)
0:31      Sequence
0:31        move second child to first child ( temp 4-component vector of float)
0:31          'f4' ( temp 4-component vector of float)
0:31          Constant:
0:31            1.000000
0:31            1.000000
0:31            1.000000
0:31            1.000000
0:32      add second child into first child ( temp 4-component vector of float)
0:32        'f4' ( temp 4-component vector of float)
0:32        Function Call: type1::memFun(vf4; ( temp 4-component vector of float)
0:32          'test' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:32          Constant:
0:32            5.000000
0:32            5.000000
0:32            5.000000
0:32            5.000000
0:33      add second child into first child ( temp 4-component vector of float)
0:33        'f4' ( temp 4-component vector of float)
0:33        Convert int to float ( temp float)
0:33          Function Call: type1::memFun(i1; ( temp int)
0:33            'test' ( temp structure{ temp 4-component vector of float memVar,  temp int i})
0:33            Constant:
0:33              7 (const int)
0:34      Branch: Return with expression
0:34        'f4' ( temp 4-component vector of float)
0:27  Function Definition: main( ( temp void)
0:27    Function Parameters: 
0:?     Sequence
0:27      move second child to first child ( temp 4-component vector of float)
0:?         '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:27        Function Call: @main( ( temp 4-component vector of float)
0:?   Linker Objects
0:?     'i' ( global 2-component vector of float)
0:?     'j' ( global 2-component vector of float)
0:?     '@entryPointOutput' (layout( location=0) out 4-component vector of float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 111

                              Capability Shader
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 54_1  "main" 59_3
                              ExecutionMode 54_1 OriginUpperLeft
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 30_1  "type1"
                              MemberName 30_1(type1) 0  "memVar"
                              MemberName 30_1(type1) 1  "i"
                              Name 54_2  "type1::setmem(vf4;"
                              Name 55_1  "@this"
                              Name 55_2  "m"
                              Name 54_3  "type1::seti(i1;"
                              Name 55_3  "@this"
                              Name 55_4  "si"
                              Name 54_4  "type1::memFun(vf4;"
                              Name 55_5  "@this"
                              Name 55_6  "a"
                              Name 54_5  "type1::memFun(i1;"
                              Name 55_7  "@this"
                              Name 55_8  "a"
                              Name 30_2  "type2"
                              Name 54_6  "type2::memFun("
                              Name 55_9  "@this"
                              Name 54_7  "@main("
                              Name 59_1  "i"
                              Name 59_2  "j"
                              Name 59_4  "test"
                              Name 59_5  "param"
                              Name 59_6  "param"
                              Name 59_7  "f4"
                              Name 59_8  "param"
                              Name 59_9  "param"
                              Name 59_3  "@entryPointOutput"
                              Decorate 59_3(@entryPointOutput) Location 0
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
            21_1:             TypeInt 32 1
     30_1(type1):             TypeStruct 23_1(fvec4) 21_1(int)
            32_1:             TypePointer Function 30_1(type1)
            32_2:             TypePointer Function 23_1(fvec4)
            33_2:             TypeFunction 19_1 32_1(ptr) 32_2(ptr)
            32_3:             TypePointer Function 21_1(int)
            33_3:             TypeFunction 19_1 32_1(ptr) 32_3(ptr)
            33_4:             TypeFunction 23_1(fvec4) 32_1(ptr) 32_2(ptr)
            33_5:             TypeFunction 21_1(int) 32_1(ptr) 32_3(ptr)
     30_2(type2):             TypeStruct
            32_4:             TypePointer Function 30_2(type2)
            23_2:             TypeVector 22_1(float) 2
            33_6:             TypeFunction 23_2(fvec2) 32_4(ptr)
            33_7:             TypeFunction 23_1(fvec4)
            32_5:             TypePointer Private 23_2(fvec2)
         59_1(i):   32_5(ptr) Variable Private
            43_1: 22_1(float) Constant 1065353216
            43_2: 22_1(float) Constant 1073741824
            44_1: 23_2(fvec2) ConstantComposite 43_1 43_2
         59_2(j):   32_5(ptr) Variable Private
            43_3:   21_1(int) Constant 0
            43_4:   21_1(int) Constant 1
            21_2:             TypeInt 32 0
         uint(2):   21_2(int) Constant 2
            32_6:             TypePointer Function 22_1(float)
            44_2: 23_1(fvec4) ConstantComposite 43_2 43_2 43_2 43_2
            43_5:   21_1(int) Constant 17
            44_3: 23_1(fvec4) ConstantComposite 43_1 43_1 43_1 43_1
            43_6: 22_1(float) Constant 1084227584
            44_4: 23_1(fvec4) ConstantComposite 43_6 43_6 43_6 43_6
            43_7:   21_1(int) Constant 7
            32_7:             TypePointer Output 23_1(fvec4)
59_3(@entryPointOutput):   32_7(ptr) Variable Output
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
                              Store 59_1(i) 44_1
            61_1: 23_2(fvec2) Load 59_1(i)
                              Store 59_2(j) 61_1
            57_1: 23_1(fvec4) FunctionCall 54_7(@main()
                              Store 59_3(@entryPointOutput) 57_1
                              Return
                              FunctionEnd
54_2(type1::setmem(vf4;):        19_1 Function None 33_2
     55_1(@this):   32_1(ptr) FunctionParameter
         55_2(m):   32_2(ptr) FunctionParameter
           248_2:             Label
            61_2: 23_1(fvec4) Load 55_2(m)
            65_1:   32_2(ptr) AccessChain 55_1(@this) 43_3
                              Store 65_1 61_2
                              Return
                              FunctionEnd
54_3(type1::seti(i1;):        19_1 Function None 33_3
     55_3(@this):   32_1(ptr) FunctionParameter
        55_4(si):   32_3(ptr) FunctionParameter
           248_3:             Label
            61_3:   21_1(int) Load 55_4(si)
            65_2:   32_3(ptr) AccessChain 55_3(@this) 43_4
                              Store 65_2 61_3
                              Return
                              FunctionEnd
54_4(type1::memFun(vf4;): 23_1(fvec4) Function None 33_4
     55_5(@this):   32_1(ptr) FunctionParameter
         55_6(a):   32_2(ptr) FunctionParameter
           248_4:             Label
            65_3:   32_3(ptr) AccessChain 55_5(@this) 43_4
            61_4:   21_1(int) Load 65_3
           111_1: 22_1(float) ConvertSToF 61_4
            61_5: 23_1(fvec4) Load 55_6(a)
           142_1: 23_1(fvec4) VectorTimesScalar 61_5 111_1
            65_4:   32_2(ptr) AccessChain 55_5(@this) 43_3
            61_6: 23_1(fvec4) Load 65_4
           129_1: 23_1(fvec4) FAdd 142_1 61_6
                              ReturnValue 129_1
                              FunctionEnd
54_5(type1::memFun(i1;):   21_1(int) Function None 33_5
     55_7(@this):   32_1(ptr) FunctionParameter
         55_8(a):   32_3(ptr) FunctionParameter
           248_5:             Label
            65_5:   32_3(ptr) AccessChain 55_7(@this) 43_4
            61_7:   21_1(int) Load 65_5
            61_8:   21_1(int) Load 55_8(a)
           128_1:   21_1(int) IAdd 61_7 61_8
           111_2: 22_1(float) ConvertSToF 128_1
            65_6:   32_6(ptr) AccessChain 55_7(@this) 43_3 uint(2)
            61_9: 22_1(float) Load 65_6
           131_1: 22_1(float) FSub 111_2 61_9
           110_1:   21_1(int) ConvertFToS 131_1
                              ReturnValue 110_1
                              FunctionEnd
54_6(type2::memFun(): 23_2(fvec2) Function None 33_6
     55_9(@this):   32_4(ptr) FunctionParameter
           248_6:             Label
           61_10: 23_2(fvec2) Load 59_1(i)
                              ReturnValue 61_10
                              FunctionEnd
    54_7(@main(): 23_1(fvec4) Function None 33_7
           248_7:             Label
      59_4(test):   32_1(ptr) Variable Function
     59_5(param):   32_2(ptr) Variable Function
     59_6(param):   32_3(ptr) Variable Function
        59_7(f4):   32_2(ptr) Variable Function
     59_8(param):   32_2(ptr) Variable Function
     59_9(param):   32_3(ptr) Variable Function
                              Store 59_5(param) 44_2
            57_2:        19_1 FunctionCall 54_2(type1::setmem(vf4;) 59_4(test) 59_5(param)
                              Store 59_6(param) 43_5
            57_3:        19_1 FunctionCall 54_3(type1::seti(i1;) 59_4(test) 59_6(param)
                              Store 59_7(f4) 44_3
                              Store 59_8(param) 44_4
            57_4: 23_1(fvec4) FunctionCall 54_4(type1::memFun(vf4;) 59_4(test) 59_8(param)
           61_11: 23_1(fvec4) Load 59_7(f4)
           129_2: 23_1(fvec4) FAdd 61_11 57_4
                              Store 59_7(f4) 129_2
                              Store 59_9(param) 43_7
            57_5:   21_1(int) FunctionCall 54_5(type1::memFun(i1;) 59_4(test) 59_9(param)
           111_3: 22_1(float) ConvertSToF 57_5
           61_12: 23_1(fvec4) Load 59_7(f4)
            80_1: 23_1(fvec4) CompositeConstruct 111_3 111_3 111_3 111_3
           129_3: 23_1(fvec4) FAdd 61_12 80_1
                              Store 59_7(f4) 129_3
           61_13: 23_1(fvec4) Load 59_7(f4)
                              ReturnValue 61_13
                              FunctionEnd
