hlsl.cbuffer-identifier.vert
WARNING: 0:29: '' : mul() matrix size mismatch 

Shader version: 500
0:? Sequence
0:22  Function Definition: @main(struct-VS_INPUT-vf4-vf31; ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:22    Function Parameters: 
0:22      'input' ( in structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:?     Sequence
0:23      Sequence
0:23        move second child to first child ( temp int)
0:23          'ConstantBuffer' ( temp int)
0:23          Constant:
0:23            42 (const int)
0:25      Sequence
0:25        move second child to first child ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:25          'output' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:25          Constant:
0:25            0.000000
0:25            0.000000
0:25            0.000000
0:25            0.000000
0:25            0.000000
0:25            0.000000
0:25            0.000000
0:26      move second child to first child ( temp 4-component vector of float)
0:26        Pos: direct index for structure ( temp 4-component vector of float)
0:26          'output' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:26          Constant:
0:26            0 (const int)
0:26        matrix-times-vector ( temp 4-component vector of float)
0:26          World: direct index for structure (layout( row_major std140) uniform 4X4 matrix of float)
0:26            'anon@0' (layout( binding=0 row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float World, layout( row_major std140) uniform 4X4 matrix of float View, layout( row_major std140) uniform 4X4 matrix of float Projection})
0:26            Constant:
0:26              0 (const uint)
0:26          Pos: direct index for structure ( temp 4-component vector of float)
0:26            'input' ( in structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:26            Constant:
0:26              0 (const int)
0:27      move second child to first child ( temp 4-component vector of float)
0:27        Pos: direct index for structure ( temp 4-component vector of float)
0:27          'output' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:27          Constant:
0:27            0 (const int)
0:27        matrix-times-vector ( temp 4-component vector of float)
0:27          View: direct index for structure (layout( row_major std140) uniform 4X4 matrix of float)
0:27            'anon@0' (layout( binding=0 row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float World, layout( row_major std140) uniform 4X4 matrix of float View, layout( row_major std140) uniform 4X4 matrix of float Projection})
0:27            Constant:
0:27              1 (const uint)
0:27          Pos: direct index for structure ( temp 4-component vector of float)
0:27            'output' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:27            Constant:
0:27              0 (const int)
0:28      move second child to first child ( temp 4-component vector of float)
0:28        Pos: direct index for structure ( temp 4-component vector of float)
0:28          'output' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:28          Constant:
0:28            0 (const int)
0:28        matrix-times-vector ( temp 4-component vector of float)
0:28          Projection: direct index for structure (layout( row_major std140) uniform 4X4 matrix of float)
0:28            'anon@0' (layout( binding=0 row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float World, layout( row_major std140) uniform 4X4 matrix of float View, layout( row_major std140) uniform 4X4 matrix of float Projection})
0:28            Constant:
0:28              2 (const uint)
0:28          Pos: direct index for structure ( temp 4-component vector of float)
0:28            'output' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:28            Constant:
0:28              0 (const int)
0:29      move second child to first child ( temp 3-component vector of float)
0:29        Norm: direct index for structure ( temp 3-component vector of float)
0:29          'output' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:29          Constant:
0:29            1 (const int)
0:29        Construct vec3 ( temp 3-component vector of float)
0:29          matrix-times-vector ( temp 4-component vector of float)
0:29            Construct mat3x4 ( uniform 3X4 matrix of float)
0:29              World: direct index for structure (layout( row_major std140) uniform 4X4 matrix of float)
0:29                'anon@0' (layout( binding=0 row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float World, layout( row_major std140) uniform 4X4 matrix of float View, layout( row_major std140) uniform 4X4 matrix of float Projection})
0:29                Constant:
0:29                  0 (const uint)
0:29            Norm: direct index for structure ( temp 3-component vector of float)
0:29              'input' ( in structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:29              Constant:
0:29                1 (const int)
0:31      Branch: Return with expression
0:31        'output' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:22  Function Definition: main( ( temp void)
0:22    Function Parameters: 
0:?     Sequence
0:22      Sequence
0:22        move second child to first child ( temp 4-component vector of float)
0:22          Pos: direct index for structure ( temp 4-component vector of float)
0:?             'input' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:22            Constant:
0:22              0 (const int)
0:?           'input.Pos' (layout( location=0) in 4-component vector of float)
0:22        move second child to first child ( temp 3-component vector of float)
0:22          Norm: direct index for structure ( temp 3-component vector of float)
0:?             'input' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:22            Constant:
0:22              1 (const int)
0:?           'input.Norm' (layout( location=1) in 3-component vector of float)
0:22      Sequence
0:22        move second child to first child ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:22          'flattenTemp' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:22          Function Call: @main(struct-VS_INPUT-vf4-vf31; ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:?             'input' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:22        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.Pos' ( out 4-component vector of float Position)
0:22          Pos: direct index for structure ( temp 4-component vector of float)
0:22            'flattenTemp' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:22            Constant:
0:22              0 (const int)
0:22        move second child to first child ( temp 3-component vector of float)
0:?           '@entryPointOutput.Norm' (layout( location=0) out 3-component vector of float)
0:22          Norm: direct index for structure ( temp 3-component vector of float)
0:22            'flattenTemp' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:22            Constant:
0:22              1 (const int)
0:?   Linker Objects
0:?     'anon@0' (layout( binding=0 row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float World, layout( row_major std140) uniform 4X4 matrix of float View, layout( row_major std140) uniform 4X4 matrix of float Projection})
0:?     '@entryPointOutput.Pos' ( out 4-component vector of float Position)
0:?     '@entryPointOutput.Norm' (layout( location=0) out 3-component vector of float)
0:?     'input.Pos' (layout( location=0) in 4-component vector of float)
0:?     'input.Norm' (layout( location=1) in 3-component vector of float)


Linked vertex stage:


Shader version: 500
0:? Sequence
0:22  Function Definition: @main(struct-VS_INPUT-vf4-vf31; ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:22    Function Parameters: 
0:22      'input' ( in structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:?     Sequence
0:23      Sequence
0:23        move second child to first child ( temp int)
0:23          'ConstantBuffer' ( temp int)
0:23          Constant:
0:23            42 (const int)
0:25      Sequence
0:25        move second child to first child ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:25          'output' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:25          Constant:
0:25            0.000000
0:25            0.000000
0:25            0.000000
0:25            0.000000
0:25            0.000000
0:25            0.000000
0:25            0.000000
0:26      move second child to first child ( temp 4-component vector of float)
0:26        Pos: direct index for structure ( temp 4-component vector of float)
0:26          'output' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:26          Constant:
0:26            0 (const int)
0:26        matrix-times-vector ( temp 4-component vector of float)
0:26          World: direct index for structure (layout( row_major std140) uniform 4X4 matrix of float)
0:26            'anon@0' (layout( binding=0 row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float World, layout( row_major std140) uniform 4X4 matrix of float View, layout( row_major std140) uniform 4X4 matrix of float Projection})
0:26            Constant:
0:26              0 (const uint)
0:26          Pos: direct index for structure ( temp 4-component vector of float)
0:26            'input' ( in structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:26            Constant:
0:26              0 (const int)
0:27      move second child to first child ( temp 4-component vector of float)
0:27        Pos: direct index for structure ( temp 4-component vector of float)
0:27          'output' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:27          Constant:
0:27            0 (const int)
0:27        matrix-times-vector ( temp 4-component vector of float)
0:27          View: direct index for structure (layout( row_major std140) uniform 4X4 matrix of float)
0:27            'anon@0' (layout( binding=0 row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float World, layout( row_major std140) uniform 4X4 matrix of float View, layout( row_major std140) uniform 4X4 matrix of float Projection})
0:27            Constant:
0:27              1 (const uint)
0:27          Pos: direct index for structure ( temp 4-component vector of float)
0:27            'output' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:27            Constant:
0:27              0 (const int)
0:28      move second child to first child ( temp 4-component vector of float)
0:28        Pos: direct index for structure ( temp 4-component vector of float)
0:28          'output' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:28          Constant:
0:28            0 (const int)
0:28        matrix-times-vector ( temp 4-component vector of float)
0:28          Projection: direct index for structure (layout( row_major std140) uniform 4X4 matrix of float)
0:28            'anon@0' (layout( binding=0 row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float World, layout( row_major std140) uniform 4X4 matrix of float View, layout( row_major std140) uniform 4X4 matrix of float Projection})
0:28            Constant:
0:28              2 (const uint)
0:28          Pos: direct index for structure ( temp 4-component vector of float)
0:28            'output' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:28            Constant:
0:28              0 (const int)
0:29      move second child to first child ( temp 3-component vector of float)
0:29        Norm: direct index for structure ( temp 3-component vector of float)
0:29          'output' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:29          Constant:
0:29            1 (const int)
0:29        Construct vec3 ( temp 3-component vector of float)
0:29          matrix-times-vector ( temp 4-component vector of float)
0:29            Construct mat3x4 ( uniform 3X4 matrix of float)
0:29              World: direct index for structure (layout( row_major std140) uniform 4X4 matrix of float)
0:29                'anon@0' (layout( binding=0 row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float World, layout( row_major std140) uniform 4X4 matrix of float View, layout( row_major std140) uniform 4X4 matrix of float Projection})
0:29                Constant:
0:29                  0 (const uint)
0:29            Norm: direct index for structure ( temp 3-component vector of float)
0:29              'input' ( in structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:29              Constant:
0:29                1 (const int)
0:31      Branch: Return with expression
0:31        'output' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:22  Function Definition: main( ( temp void)
0:22    Function Parameters: 
0:?     Sequence
0:22      Sequence
0:22        move second child to first child ( temp 4-component vector of float)
0:22          Pos: direct index for structure ( temp 4-component vector of float)
0:?             'input' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:22            Constant:
0:22              0 (const int)
0:?           'input.Pos' (layout( location=0) in 4-component vector of float)
0:22        move second child to first child ( temp 3-component vector of float)
0:22          Norm: direct index for structure ( temp 3-component vector of float)
0:?             'input' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:22            Constant:
0:22              1 (const int)
0:?           'input.Norm' (layout( location=1) in 3-component vector of float)
0:22      Sequence
0:22        move second child to first child ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:22          'flattenTemp' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:22          Function Call: @main(struct-VS_INPUT-vf4-vf31; ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:?             'input' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:22        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.Pos' ( out 4-component vector of float Position)
0:22          Pos: direct index for structure ( temp 4-component vector of float)
0:22            'flattenTemp' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:22            Constant:
0:22              0 (const int)
0:22        move second child to first child ( temp 3-component vector of float)
0:?           '@entryPointOutput.Norm' (layout( location=0) out 3-component vector of float)
0:22          Norm: direct index for structure ( temp 3-component vector of float)
0:22            'flattenTemp' ( temp structure{ temp 4-component vector of float Pos,  temp 3-component vector of float Norm})
0:22            Constant:
0:22              1 (const int)
0:?   Linker Objects
0:?     'anon@0' (layout( binding=0 row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float World, layout( row_major std140) uniform 4X4 matrix of float View, layout( row_major std140) uniform 4X4 matrix of float Projection})
0:?     '@entryPointOutput.Pos' ( out 4-component vector of float Position)
0:?     '@entryPointOutput.Norm' (layout( location=0) out 3-component vector of float)
0:?     'input.Pos' (layout( location=0) in 4-component vector of float)
0:?     'input.Norm' (layout( location=1) in 3-component vector of float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 93

                              Capability Shader
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Vertex 54_1  "main" 59_2 59_3 59_4 59_5
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 30_1  "VS_INPUT"
                              MemberName 30_1(VS_INPUT) 0  "Pos"
                              MemberName 30_1(VS_INPUT) 1  "Norm"
                              Name 30_2  "PS_INPUT"
                              MemberName 30_2(PS_INPUT) 0  "Pos"
                              MemberName 30_2(PS_INPUT) 1  "Norm"
                              Name 54_2  "@main(struct-VS_INPUT-vf4-vf31;"
                              Name 55_1  "input"
                              Name 59_9  "ConstantBuffer"
                              Name 59_10  "output"
                              Name 30_3  "C"
                              MemberName 30_3(C) 0  "World"
                              MemberName 30_3(C) 1  "View"
                              MemberName 30_3(C) 2  "Projection"
                              Name 59_1  ""
                              Name 59_6  "input"
                              Name 59_2  "input.Pos"
                              Name 59_3  "input.Norm"
                              Name 59_7  "flattenTemp"
                              Name 59_8  "param"
                              Name 59_4  "@entryPointOutput.Pos"
                              Name 59_5  "@entryPointOutput.Norm"
                              Decorate 30_3(C) Block
                              MemberDecorate 30_3(C) 0 RowMajor
                              MemberDecorate 30_3(C) 0 MatrixStride 16
                              MemberDecorate 30_3(C) 0 Offset 0
                              MemberDecorate 30_3(C) 1 RowMajor
                              MemberDecorate 30_3(C) 1 MatrixStride 16
                              MemberDecorate 30_3(C) 1 Offset 64
                              MemberDecorate 30_3(C) 2 RowMajor
                              MemberDecorate 30_3(C) 2 MatrixStride 16
                              MemberDecorate 30_3(C) 2 Offset 128
                              Decorate 59_1 Binding 0
                              Decorate 59_1 DescriptorSet 0
                              Decorate 59_2(input.Pos) Location 0
                              Decorate 59_3(input.Norm) Location 1
                              Decorate 59_4(@entryPointOutput.Pos) BuiltIn Position
                              Decorate 59_5(@entryPointOutput.Norm) Location 0
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
            23_2:             TypeVector 22_1(float) 3
  30_1(VS_INPUT):             TypeStruct 23_1(fvec4) 23_2(fvec3)
            32_1:             TypePointer Function 30_1(VS_INPUT)
  30_2(PS_INPUT):             TypeStruct 23_1(fvec4) 23_2(fvec3)
            33_2:             TypeFunction 30_2(PS_INPUT) 32_1(ptr)
            21_1:             TypeInt 32 1
            32_2:             TypePointer Function 21_1(int)
            43_1:   21_1(int) Constant 42
            32_3:             TypePointer Function 30_2(PS_INPUT)
            43_2: 22_1(float) Constant 0
            44_1: 23_1(fvec4) ConstantComposite 43_2 43_2 43_2 43_2
            44_2: 23_2(fvec3) ConstantComposite 43_2 43_2 43_2
            44_3:30_2(PS_INPUT) ConstantComposite 44_1 44_2
            43_3:   21_1(int) Constant 0
            24_1:             TypeMatrix 23_1(fvec4) 4
         30_3(C):             TypeStruct 24_1 24_1 24_1
            32_4:             TypePointer Uniform 30_3(C)
            59_1:   32_4(ptr) Variable Uniform
            32_5:             TypePointer Uniform 24_1
            32_6:             TypePointer Function 23_1(fvec4)
            43_4:   21_1(int) Constant 1
            43_5:   21_1(int) Constant 2
            24_2:             TypeMatrix 23_1(fvec4) 3
            32_7:             TypePointer Function 23_2(fvec3)
            32_8:             TypePointer Input 23_1(fvec4)
 59_2(input.Pos):   32_8(ptr) Variable Input
            32_9:             TypePointer Input 23_2(fvec3)
59_3(input.Norm):   32_9(ptr) Variable Input
           32_10:             TypePointer Output 23_1(fvec4)
59_4(@entryPointOutput.Pos):  32_10(ptr) Variable Output
           32_11:             TypePointer Output 23_2(fvec3)
59_5(@entryPointOutput.Norm):  32_11(ptr) Variable Output
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
     59_6(input):   32_1(ptr) Variable Function
59_7(flattenTemp):   32_3(ptr) Variable Function
     59_8(param):   32_1(ptr) Variable Function
            61_1: 23_1(fvec4) Load 59_2(input.Pos)
            65_1:   32_6(ptr) AccessChain 59_6(input) 43_3
                              Store 65_1 61_1
            61_2: 23_2(fvec3) Load 59_3(input.Norm)
            65_2:   32_7(ptr) AccessChain 59_6(input) 43_4
                              Store 65_2 61_2
            61_3:30_1(VS_INPUT) Load 59_6(input)
                              Store 59_8(param) 61_3
            57_1:30_2(PS_INPUT) FunctionCall 54_2(@main(struct-VS_INPUT-vf4-vf31;) 59_8(param)
                              Store 59_7(flattenTemp) 57_1
            65_3:   32_6(ptr) AccessChain 59_7(flattenTemp) 43_3
            61_4: 23_1(fvec4) Load 65_3
                              Store 59_4(@entryPointOutput.Pos) 61_4
            65_4:   32_7(ptr) AccessChain 59_7(flattenTemp) 43_4
            61_5: 23_2(fvec3) Load 65_4
                              Store 59_5(@entryPointOutput.Norm) 61_5
                              Return
                              FunctionEnd
54_2(@main(struct-VS_INPUT-vf4-vf31;):30_2(PS_INPUT) Function None 33_2
     55_1(input):   32_1(ptr) FunctionParameter
           248_2:             Label
59_9(ConstantBuffer):   32_2(ptr) Variable Function
   59_10(output):   32_3(ptr) Variable Function
                              Store 59_9(ConstantBuffer) 43_1
                              Store 59_10(output) 44_3
            65_5:   32_5(ptr) AccessChain 59_1 43_3
            61_6:        24_1 Load 65_5
            65_6:   32_6(ptr) AccessChain 55_1(input) 43_3
            61_7: 23_1(fvec4) Load 65_6
           145_1: 23_1(fvec4) MatrixTimesVector 61_6 61_7
            65_7:   32_6(ptr) AccessChain 59_10(output) 43_3
                              Store 65_7 145_1
            65_8:   32_5(ptr) AccessChain 59_1 43_4
            61_8:        24_1 Load 65_8
            65_9:   32_6(ptr) AccessChain 59_10(output) 43_3
            61_9: 23_1(fvec4) Load 65_9
           145_2: 23_1(fvec4) MatrixTimesVector 61_8 61_9
           65_10:   32_6(ptr) AccessChain 59_10(output) 43_3
                              Store 65_10 145_2
           65_11:   32_5(ptr) AccessChain 59_1 43_5
           61_10:        24_1 Load 65_11
           65_12:   32_6(ptr) AccessChain 59_10(output) 43_3
           61_11: 23_1(fvec4) Load 65_12
           145_3: 23_1(fvec4) MatrixTimesVector 61_10 61_11
           65_13:   32_6(ptr) AccessChain 59_10(output) 43_3
                              Store 65_13 145_3
           65_14:   32_5(ptr) AccessChain 59_1 43_3
           61_12:        24_1 Load 65_14
            81_1: 23_1(fvec4) CompositeExtract 61_12 0
            81_2: 23_1(fvec4) CompositeExtract 61_12 1
            81_3: 23_1(fvec4) CompositeExtract 61_12 2
            80_1:        24_2 CompositeConstruct 81_1 81_2 81_3
           65_15:   32_7(ptr) AccessChain 55_1(input) 43_4
           61_13: 23_2(fvec3) Load 65_15
           145_4: 23_1(fvec4) MatrixTimesVector 80_1 61_13
            81_4: 22_1(float) CompositeExtract 145_4 0
            81_5: 22_1(float) CompositeExtract 145_4 1
            81_6: 22_1(float) CompositeExtract 145_4 2
            80_2: 23_2(fvec3) CompositeConstruct 81_4 81_5 81_6
           65_16:   32_7(ptr) AccessChain 59_10(output) 43_4
                              Store 65_16 80_2
           61_14:30_2(PS_INPUT) Load 59_10(output)
                              ReturnValue 61_14
                              FunctionEnd
