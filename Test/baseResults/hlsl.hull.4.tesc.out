hlsl.hull.4.tesc
Shader version: 500
vertices = 3
vertex spacing = fractional_odd_spacing
triangle order = cw
0:? Sequence
0:25  Function Definition: HS_ConstFunc(struct-HS_Input-vf4-vf41[3]; ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:25    Function Parameters: 
0:25      'I' ( in 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:?     Sequence
0:26      Sequence
0:26        move second child to first child ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:26          'O' ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:26          Constant:
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:28      move second child to first child ( temp float)
0:28        fInsideTessFactor: direct index for structure ( temp float)
0:28          'O' ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:28          Constant:
0:28            1 (const int)
0:28        add ( temp float)
0:28          direct index ( temp float)
0:28            m_Position: direct index for structure ( temp 4-component vector of float)
0:28              direct index ( temp structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:28                'I' ( in 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:28                Constant:
0:28                  0 (const int)
0:28              Constant:
0:28                0 (const int)
0:28            Constant:
0:28              3 (const int)
0:28          direct index ( temp float)
0:28            m_Normal: direct index for structure ( temp 4-component vector of float)
0:28              direct index ( temp structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:28                'I' ( in 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:28                Constant:
0:28                  0 (const int)
0:28              Constant:
0:28                1 (const int)
0:28            Constant:
0:28              3 (const int)
0:30      Branch: Return with expression
0:30        'O' ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:39  Function Definition: @main(struct-HS_Input-vf4-vf41[3];u1; ( temp structure{ temp 4-component vector of float m_Position})
0:39    Function Parameters: 
0:39      'I' ( in 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:39      'cpid' ( in uint)
0:?     Sequence
0:40      Sequence
0:40        move second child to first child ( temp structure{ temp 4-component vector of float m_Position})
0:40          'output' ( temp structure{ temp 4-component vector of float m_Position})
0:40          Constant:
0:40            0.000000
0:40            0.000000
0:40            0.000000
0:40            0.000000
0:41      move second child to first child ( temp 4-component vector of float)
0:41        m_Position: direct index for structure ( temp 4-component vector of float)
0:41          'output' ( temp structure{ temp 4-component vector of float m_Position})
0:41          Constant:
0:41            0 (const int)
0:41        Constant:
0:41          0.000000
0:41          0.000000
0:41          0.000000
0:41          0.000000
0:42      Branch: Return with expression
0:42        'output' ( temp structure{ temp 4-component vector of float m_Position})
0:39  Function Definition: main( ( temp void)
0:39    Function Parameters: 
0:?     Sequence
0:39      Sequence
0:39        move second child to first child ( temp 4-component vector of float)
0:39          m_Position: direct index for structure ( temp 4-component vector of float)
0:39            direct index ( temp structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:?               'I' ( temp 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:39              Constant:
0:39                0 (const int)
0:39            Constant:
0:39              0 (const int)
0:39          direct index ( in 4-component vector of float Position)
0:?             'I.m_Position' ( in 3-element array of 4-component vector of float Position)
0:39            Constant:
0:39              0 (const int)
0:39        move second child to first child ( temp 4-component vector of float)
0:39          m_Normal: direct index for structure ( temp 4-component vector of float)
0:39            direct index ( temp structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:?               'I' ( temp 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:39              Constant:
0:39                0 (const int)
0:39            Constant:
0:39              1 (const int)
0:39          direct index (layout( location=0) in 4-component vector of float)
0:?             'I.m_Normal' (layout( location=0) in 3-element array of 4-component vector of float)
0:39            Constant:
0:39              0 (const int)
0:39        move second child to first child ( temp 4-component vector of float)
0:39          m_Position: direct index for structure ( temp 4-component vector of float)
0:39            direct index ( temp structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:?               'I' ( temp 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:39              Constant:
0:39                1 (const int)
0:39            Constant:
0:39              0 (const int)
0:39          direct index ( in 4-component vector of float Position)
0:?             'I.m_Position' ( in 3-element array of 4-component vector of float Position)
0:39            Constant:
0:39              1 (const int)
0:39        move second child to first child ( temp 4-component vector of float)
0:39          m_Normal: direct index for structure ( temp 4-component vector of float)
0:39            direct index ( temp structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:?               'I' ( temp 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:39              Constant:
0:39                1 (const int)
0:39            Constant:
0:39              1 (const int)
0:39          direct index (layout( location=0) in 4-component vector of float)
0:?             'I.m_Normal' (layout( location=0) in 3-element array of 4-component vector of float)
0:39            Constant:
0:39              1 (const int)
0:39        move second child to first child ( temp 4-component vector of float)
0:39          m_Position: direct index for structure ( temp 4-component vector of float)
0:39            direct index ( temp structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:?               'I' ( temp 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:39              Constant:
0:39                2 (const int)
0:39            Constant:
0:39              0 (const int)
0:39          direct index ( in 4-component vector of float Position)
0:?             'I.m_Position' ( in 3-element array of 4-component vector of float Position)
0:39            Constant:
0:39              2 (const int)
0:39        move second child to first child ( temp 4-component vector of float)
0:39          m_Normal: direct index for structure ( temp 4-component vector of float)
0:39            direct index ( temp structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:?               'I' ( temp 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:39              Constant:
0:39                2 (const int)
0:39            Constant:
0:39              1 (const int)
0:39          direct index (layout( location=0) in 4-component vector of float)
0:?             'I.m_Normal' (layout( location=0) in 3-element array of 4-component vector of float)
0:39            Constant:
0:39              2 (const int)
0:39      move second child to first child ( temp uint)
0:?         'cpid' ( temp uint)
0:?         'cpid' ( in uint InvocationID)
0:39      Sequence
0:39        move second child to first child ( temp 4-component vector of float)
0:39          indirect index ( out 4-component vector of float Position)
0:?             '@entryPointOutput.m_Position' ( out 3-element array of 4-component vector of float Position)
0:?             'cpid' ( in uint InvocationID)
0:39          m_Position: direct index for structure ( temp 4-component vector of float)
0:39            Function Call: @main(struct-HS_Input-vf4-vf41[3];u1; ( temp structure{ temp 4-component vector of float m_Position})
0:?               'I' ( temp 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:?               'cpid' ( temp uint)
0:39            Constant:
0:39              0 (const int)
0:?       Barrier ( temp void)
0:?       Test condition and select ( temp void)
0:?         Condition
0:?         Compare Equal ( temp bool)
0:?           'cpid' ( in uint InvocationID)
0:?           Constant:
0:?             0 (const int)
0:?         true case
0:?         Sequence
0:?           move second child to first child ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:?             '@patchConstantResult' ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:?             Function Call: HS_ConstFunc(struct-HS_Input-vf4-vf41[3]; ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:?               'I' ( temp 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:?           Sequence
0:?             move second child to first child ( temp float)
0:?               direct index ( patch out float TessLevelOuter)
0:?                 '@patchConstantOutput.fTessFactor' ( patch out 4-element array of float TessLevelOuter)
0:?                 Constant:
0:?                   0 (const int)
0:?               direct index ( temp float)
0:?                 fTessFactor: direct index for structure ( temp 3-element array of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:?                   Constant:
0:?                     0 (const int)
0:?                 Constant:
0:?                   0 (const int)
0:?             move second child to first child ( temp float)
0:?               direct index ( patch out float TessLevelOuter)
0:?                 '@patchConstantOutput.fTessFactor' ( patch out 4-element array of float TessLevelOuter)
0:?                 Constant:
0:?                   1 (const int)
0:?               direct index ( temp float)
0:?                 fTessFactor: direct index for structure ( temp 3-element array of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:?                   Constant:
0:?                     0 (const int)
0:?                 Constant:
0:?                   1 (const int)
0:?             move second child to first child ( temp float)
0:?               direct index ( patch out float TessLevelOuter)
0:?                 '@patchConstantOutput.fTessFactor' ( patch out 4-element array of float TessLevelOuter)
0:?                 Constant:
0:?                   2 (const int)
0:?               direct index ( temp float)
0:?                 fTessFactor: direct index for structure ( temp 3-element array of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:?                   Constant:
0:?                     0 (const int)
0:?                 Constant:
0:?                   2 (const int)
0:?             move second child to first child ( temp float)
0:?               direct index ( patch out float TessLevelInner)
0:?                 '@patchConstantOutput.fInsideTessFactor' ( patch out 2-element array of float TessLevelInner)
0:?                 Constant:
0:?                   0 (const int)
0:?               fInsideTessFactor: direct index for structure ( temp float)
0:?                 '@patchConstantResult' ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:?                 Constant:
0:?                   1 (const int)
0:?   Linker Objects
0:?     '@entryPointOutput.m_Position' ( out 3-element array of 4-component vector of float Position)
0:?     'I.m_Position' ( in 3-element array of 4-component vector of float Position)
0:?     'I.m_Normal' (layout( location=0) in 3-element array of 4-component vector of float)
0:?     'cpid' ( in uint InvocationID)
0:?     '@patchConstantOutput.fTessFactor' ( patch out 4-element array of float TessLevelOuter)
0:?     '@patchConstantOutput.fInsideTessFactor' ( patch out 2-element array of float TessLevelInner)


Linked tessellation control stage:


Shader version: 500
vertices = 3
vertex spacing = fractional_odd_spacing
triangle order = cw
0:? Sequence
0:25  Function Definition: HS_ConstFunc(struct-HS_Input-vf4-vf41[3]; ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:25    Function Parameters: 
0:25      'I' ( in 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:?     Sequence
0:26      Sequence
0:26        move second child to first child ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:26          'O' ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:26          Constant:
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:26            0.000000
0:28      move second child to first child ( temp float)
0:28        fInsideTessFactor: direct index for structure ( temp float)
0:28          'O' ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:28          Constant:
0:28            1 (const int)
0:28        add ( temp float)
0:28          direct index ( temp float)
0:28            m_Position: direct index for structure ( temp 4-component vector of float)
0:28              direct index ( temp structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:28                'I' ( in 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:28                Constant:
0:28                  0 (const int)
0:28              Constant:
0:28                0 (const int)
0:28            Constant:
0:28              3 (const int)
0:28          direct index ( temp float)
0:28            m_Normal: direct index for structure ( temp 4-component vector of float)
0:28              direct index ( temp structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:28                'I' ( in 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:28                Constant:
0:28                  0 (const int)
0:28              Constant:
0:28                1 (const int)
0:28            Constant:
0:28              3 (const int)
0:30      Branch: Return with expression
0:30        'O' ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:39  Function Definition: @main(struct-HS_Input-vf4-vf41[3];u1; ( temp structure{ temp 4-component vector of float m_Position})
0:39    Function Parameters: 
0:39      'I' ( in 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:39      'cpid' ( in uint)
0:?     Sequence
0:40      Sequence
0:40        move second child to first child ( temp structure{ temp 4-component vector of float m_Position})
0:40          'output' ( temp structure{ temp 4-component vector of float m_Position})
0:40          Constant:
0:40            0.000000
0:40            0.000000
0:40            0.000000
0:40            0.000000
0:41      move second child to first child ( temp 4-component vector of float)
0:41        m_Position: direct index for structure ( temp 4-component vector of float)
0:41          'output' ( temp structure{ temp 4-component vector of float m_Position})
0:41          Constant:
0:41            0 (const int)
0:41        Constant:
0:41          0.000000
0:41          0.000000
0:41          0.000000
0:41          0.000000
0:42      Branch: Return with expression
0:42        'output' ( temp structure{ temp 4-component vector of float m_Position})
0:39  Function Definition: main( ( temp void)
0:39    Function Parameters: 
0:?     Sequence
0:39      Sequence
0:39        move second child to first child ( temp 4-component vector of float)
0:39          m_Position: direct index for structure ( temp 4-component vector of float)
0:39            direct index ( temp structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:?               'I' ( temp 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:39              Constant:
0:39                0 (const int)
0:39            Constant:
0:39              0 (const int)
0:39          direct index ( in 4-component vector of float Position)
0:?             'I.m_Position' ( in 3-element array of 4-component vector of float Position)
0:39            Constant:
0:39              0 (const int)
0:39        move second child to first child ( temp 4-component vector of float)
0:39          m_Normal: direct index for structure ( temp 4-component vector of float)
0:39            direct index ( temp structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:?               'I' ( temp 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:39              Constant:
0:39                0 (const int)
0:39            Constant:
0:39              1 (const int)
0:39          direct index (layout( location=0) in 4-component vector of float)
0:?             'I.m_Normal' (layout( location=0) in 3-element array of 4-component vector of float)
0:39            Constant:
0:39              0 (const int)
0:39        move second child to first child ( temp 4-component vector of float)
0:39          m_Position: direct index for structure ( temp 4-component vector of float)
0:39            direct index ( temp structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:?               'I' ( temp 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:39              Constant:
0:39                1 (const int)
0:39            Constant:
0:39              0 (const int)
0:39          direct index ( in 4-component vector of float Position)
0:?             'I.m_Position' ( in 3-element array of 4-component vector of float Position)
0:39            Constant:
0:39              1 (const int)
0:39        move second child to first child ( temp 4-component vector of float)
0:39          m_Normal: direct index for structure ( temp 4-component vector of float)
0:39            direct index ( temp structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:?               'I' ( temp 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:39              Constant:
0:39                1 (const int)
0:39            Constant:
0:39              1 (const int)
0:39          direct index (layout( location=0) in 4-component vector of float)
0:?             'I.m_Normal' (layout( location=0) in 3-element array of 4-component vector of float)
0:39            Constant:
0:39              1 (const int)
0:39        move second child to first child ( temp 4-component vector of float)
0:39          m_Position: direct index for structure ( temp 4-component vector of float)
0:39            direct index ( temp structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:?               'I' ( temp 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:39              Constant:
0:39                2 (const int)
0:39            Constant:
0:39              0 (const int)
0:39          direct index ( in 4-component vector of float Position)
0:?             'I.m_Position' ( in 3-element array of 4-component vector of float Position)
0:39            Constant:
0:39              2 (const int)
0:39        move second child to first child ( temp 4-component vector of float)
0:39          m_Normal: direct index for structure ( temp 4-component vector of float)
0:39            direct index ( temp structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:?               'I' ( temp 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:39              Constant:
0:39                2 (const int)
0:39            Constant:
0:39              1 (const int)
0:39          direct index (layout( location=0) in 4-component vector of float)
0:?             'I.m_Normal' (layout( location=0) in 3-element array of 4-component vector of float)
0:39            Constant:
0:39              2 (const int)
0:39      move second child to first child ( temp uint)
0:?         'cpid' ( temp uint)
0:?         'cpid' ( in uint InvocationID)
0:39      Sequence
0:39        move second child to first child ( temp 4-component vector of float)
0:39          indirect index ( out 4-component vector of float Position)
0:?             '@entryPointOutput.m_Position' ( out 3-element array of 4-component vector of float Position)
0:?             'cpid' ( in uint InvocationID)
0:39          m_Position: direct index for structure ( temp 4-component vector of float)
0:39            Function Call: @main(struct-HS_Input-vf4-vf41[3];u1; ( temp structure{ temp 4-component vector of float m_Position})
0:?               'I' ( temp 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:?               'cpid' ( temp uint)
0:39            Constant:
0:39              0 (const int)
0:?       Barrier ( temp void)
0:?       Test condition and select ( temp void)
0:?         Condition
0:?         Compare Equal ( temp bool)
0:?           'cpid' ( in uint InvocationID)
0:?           Constant:
0:?             0 (const int)
0:?         true case
0:?         Sequence
0:?           move second child to first child ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:?             '@patchConstantResult' ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:?             Function Call: HS_ConstFunc(struct-HS_Input-vf4-vf41[3]; ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:?               'I' ( temp 3-element array of structure{ temp 4-component vector of float m_Position,  temp 4-component vector of float m_Normal})
0:?           Sequence
0:?             move second child to first child ( temp float)
0:?               direct index ( patch out float TessLevelOuter)
0:?                 '@patchConstantOutput.fTessFactor' ( patch out 4-element array of float TessLevelOuter)
0:?                 Constant:
0:?                   0 (const int)
0:?               direct index ( temp float)
0:?                 fTessFactor: direct index for structure ( temp 3-element array of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:?                   Constant:
0:?                     0 (const int)
0:?                 Constant:
0:?                   0 (const int)
0:?             move second child to first child ( temp float)
0:?               direct index ( patch out float TessLevelOuter)
0:?                 '@patchConstantOutput.fTessFactor' ( patch out 4-element array of float TessLevelOuter)
0:?                 Constant:
0:?                   1 (const int)
0:?               direct index ( temp float)
0:?                 fTessFactor: direct index for structure ( temp 3-element array of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:?                   Constant:
0:?                     0 (const int)
0:?                 Constant:
0:?                   1 (const int)
0:?             move second child to first child ( temp float)
0:?               direct index ( patch out float TessLevelOuter)
0:?                 '@patchConstantOutput.fTessFactor' ( patch out 4-element array of float TessLevelOuter)
0:?                 Constant:
0:?                   2 (const int)
0:?               direct index ( temp float)
0:?                 fTessFactor: direct index for structure ( temp 3-element array of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:?                   Constant:
0:?                     0 (const int)
0:?                 Constant:
0:?                   2 (const int)
0:?             move second child to first child ( temp float)
0:?               direct index ( patch out float TessLevelInner)
0:?                 '@patchConstantOutput.fInsideTessFactor' ( patch out 2-element array of float TessLevelInner)
0:?                 Constant:
0:?                   0 (const int)
0:?               fInsideTessFactor: direct index for structure ( temp float)
0:?                 '@patchConstantResult' ( temp structure{ temp 3-element array of float fTessFactor,  temp float fInsideTessFactor})
0:?                 Constant:
0:?                   1 (const int)
0:?   Linker Objects
0:?     '@entryPointOutput.m_Position' ( out 3-element array of 4-component vector of float Position)
0:?     'I.m_Position' ( in 3-element array of 4-component vector of float Position)
0:?     'I.m_Normal' (layout( location=0) in 3-element array of 4-component vector of float)
0:?     'cpid' ( in uint InvocationID)
0:?     '@patchConstantOutput.fTessFactor' ( patch out 4-element array of float TessLevelOuter)
0:?     '@patchConstantOutput.fInsideTessFactor' ( patch out 2-element array of float TessLevelInner)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 124

                              Capability Tessellation
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint TessellationControl 54_1  "main" 59_1 59_2 59_3 59_4 59_5 59_6
                              ExecutionMode 54_1 OutputVertices 3
                              ExecutionMode 54_1 Triangles
                              ExecutionMode 54_1 SpacingFractionalOdd
                              ExecutionMode 54_1 VertexOrderCw
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 30_1  "HS_Input"
                              MemberName 30_1(HS_Input) 0  "m_Position"
                              MemberName 30_1(HS_Input) 1  "m_Normal"
                              Name 30_2  "HS_Output"
                              MemberName 30_2(HS_Output) 0  "fTessFactor"
                              MemberName 30_2(HS_Output) 1  "fInsideTessFactor"
                              Name 54_2  "HS_ConstFunc(struct-HS_Input-vf4-vf41[3];"
                              Name 55_1  "I"
                              Name 30_3  "HS_Main_Output"
                              MemberName 30_3(HS_Main_Output) 0  "m_Position"
                              Name 54_3  "@main(struct-HS_Input-vf4-vf41[3];u1;"
                              Name 55_2  "I"
                              Name 55_3  "cpid"
                              Name 59_13  "O"
                              Name 59_14  "output"
                              Name 59_7  "I"
                              Name 59_1  "I.m_Position"
                              Name 59_2  "I.m_Normal"
                              Name 59_8  "cpid"
                              Name 59_3  "cpid"
                              Name 59_4  "@entryPointOutput.m_Position"
                              Name 59_9  "param"
                              Name 59_10  "param"
                              Name 59_11  "@patchConstantResult"
                              Name 59_12  "param"
                              Name 59_5  "@patchConstantOutput.fTessFactor"
                              Name 59_6  "@patchConstantOutput.fInsideTessFactor"
                              Decorate 59_1(I.m_Position) BuiltIn Position
                              Decorate 59_2(I.m_Normal) Location 0
                              Decorate 59_3(cpid) BuiltIn InvocationId
                              Decorate 59_4(@entryPointOutput.m_Position) BuiltIn Position
                              Decorate 59_5(@patchConstantOutput.fTessFactor) BuiltIn TessLevelOuter
                              Decorate 59_5(@patchConstantOutput.fTessFactor) Patch
                              Decorate 59_6(@patchConstantOutput.fInsideTessFactor) BuiltIn TessLevelInner
                              Decorate 59_6(@patchConstantOutput.fInsideTessFactor) Patch
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
  30_1(HS_Input):             TypeStruct 23_1(fvec4) 23_1(fvec4)
            21_1:             TypeInt 32 0
         uint(3):   21_1(int) Constant 3
            28_1:             TypeArray 30_1(HS_Input) uint(3)
            32_1:             TypePointer Function 28_1
            28_2:             TypeArray 22_1(float) uint(3)
 30_2(HS_Output):             TypeStruct 28_2 22_1(float)
            33_2:             TypeFunction 30_2(HS_Output) 32_1(ptr)
            32_2:             TypePointer Function 21_1(int)
30_3(HS_Main_Output):             TypeStruct 23_1(fvec4)
            33_3:             TypeFunction 30_3(HS_Main_Output) 32_1(ptr) 32_2(ptr)
            32_3:             TypePointer Function 30_2(HS_Output)
            43_1: 22_1(float) Constant 0
            44_1:        28_2 ConstantComposite 43_1 43_1 43_1
            44_2:30_2(HS_Output) ConstantComposite 44_1 43_1
            21_2:             TypeInt 32 1
            43_2:   21_2(int) Constant 1
            43_3:   21_2(int) Constant 0
            32_4:             TypePointer Function 22_1(float)
            32_5:             TypePointer Function 30_3(HS_Main_Output)
            44_3: 23_1(fvec4) ConstantComposite 43_1 43_1 43_1 43_1
            44_4:30_3(HS_Main_Output) ConstantComposite 44_3
            32_6:             TypePointer Function 23_1(fvec4)
            28_3:             TypeArray 23_1(fvec4) uint(3)
            32_7:             TypePointer Input 28_3
59_1(I.m_Position):   32_7(ptr) Variable Input
            32_8:             TypePointer Input 23_1(fvec4)
59_2(I.m_Normal):   32_7(ptr) Variable Input
            43_4:   21_2(int) Constant 2
            32_9:             TypePointer Input 21_1(int)
      59_3(cpid):   32_9(ptr) Variable Input
           32_10:             TypePointer Output 28_3
59_4(@entryPointOutput.m_Position):  32_10(ptr) Variable Output
           32_11:             TypePointer Output 23_1(fvec4)
         uint(2):   21_1(int) Constant 2
         uint(4):   21_1(int) Constant 4
         uint(0):   21_1(int) Constant 0
            20_1:             TypeBool
            28_4:             TypeArray 22_1(float) uint(4)
           32_12:             TypePointer Output 28_4
59_5(@patchConstantOutput.fTessFactor):  32_12(ptr) Variable Output
           32_13:             TypePointer Output 22_1(float)
            28_5:             TypeArray 22_1(float) uint(2)
           32_14:             TypePointer Output 28_5
59_6(@patchConstantOutput.fInsideTessFactor):  32_14(ptr) Variable Output
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
         59_7(I):   32_1(ptr) Variable Function
      59_8(cpid):   32_2(ptr) Variable Function
     59_9(param):   32_1(ptr) Variable Function
    59_10(param):   32_2(ptr) Variable Function
59_11(@patchConstantResult):   32_3(ptr) Variable Function
    59_12(param):   32_1(ptr) Variable Function
            65_1:   32_8(ptr) AccessChain 59_1(I.m_Position) 43_3
            61_1: 23_1(fvec4) Load 65_1
            65_2:   32_6(ptr) AccessChain 59_7(I) 43_3 43_3
                              Store 65_2 61_1
            65_3:   32_8(ptr) AccessChain 59_2(I.m_Normal) 43_3
            61_2: 23_1(fvec4) Load 65_3
            65_4:   32_6(ptr) AccessChain 59_7(I) 43_3 43_2
                              Store 65_4 61_2
            65_5:   32_8(ptr) AccessChain 59_1(I.m_Position) 43_2
            61_3: 23_1(fvec4) Load 65_5
            65_6:   32_6(ptr) AccessChain 59_7(I) 43_2 43_3
                              Store 65_6 61_3
            65_7:   32_8(ptr) AccessChain 59_2(I.m_Normal) 43_2
            61_4: 23_1(fvec4) Load 65_7
            65_8:   32_6(ptr) AccessChain 59_7(I) 43_2 43_2
                              Store 65_8 61_4
            65_9:   32_8(ptr) AccessChain 59_1(I.m_Position) 43_4
            61_5: 23_1(fvec4) Load 65_9
           65_10:   32_6(ptr) AccessChain 59_7(I) 43_4 43_3
                              Store 65_10 61_5
           65_11:   32_8(ptr) AccessChain 59_2(I.m_Normal) 43_4
            61_6: 23_1(fvec4) Load 65_11
           65_12:   32_6(ptr) AccessChain 59_7(I) 43_4 43_2
                              Store 65_12 61_6
            61_7:   21_1(int) Load 59_3(cpid)
                              Store 59_8(cpid) 61_7
            61_8:   21_1(int) Load 59_3(cpid)
            61_9:        28_1 Load 59_7(I)
                              Store 59_9(param) 61_9
           61_10:   21_1(int) Load 59_8(cpid)
                              Store 59_10(param) 61_10
            57_1:30_3(HS_Main_Output) FunctionCall 54_3(@main(struct-HS_Input-vf4-vf41[3];u1;) 59_9(param) 59_10(param)
            81_1: 23_1(fvec4) CompositeExtract 57_1 0
           65_13:  32_11(ptr) AccessChain 59_4(@entryPointOutput.m_Position) 61_8
                              Store 65_13 81_1
                              ControlBarrier uint(2) uint(4) uint(0)
           61_11:   21_1(int) Load 59_3(cpid)
           170_1:  20_1(bool) IEqual 61_11 43_3
                              SelectionMerge 248_3 None
                              BranchConditional 170_1 248_2 248_3
           248_2:               Label
           61_12:        28_1   Load 59_7(I)
                                Store 59_12(param) 61_12
            57_2:30_2(HS_Output)   FunctionCall 54_2(HS_ConstFunc(struct-HS_Input-vf4-vf41[3];) 59_12(param)
                                Store 59_11(@patchConstantResult) 57_2
           65_14:   32_4(ptr)   AccessChain 59_11(@patchConstantResult) 43_3 43_3
           61_13: 22_1(float)   Load 65_14
           65_15:  32_13(ptr)   AccessChain 59_5(@patchConstantOutput.fTessFactor) 43_3
                                Store 65_15 61_13
           65_16:   32_4(ptr)   AccessChain 59_11(@patchConstantResult) 43_3 43_2
           61_14: 22_1(float)   Load 65_16
           65_17:  32_13(ptr)   AccessChain 59_5(@patchConstantOutput.fTessFactor) 43_2
                                Store 65_17 61_14
           65_18:   32_4(ptr)   AccessChain 59_11(@patchConstantResult) 43_3 43_4
           61_15: 22_1(float)   Load 65_18
           65_19:  32_13(ptr)   AccessChain 59_5(@patchConstantOutput.fTessFactor) 43_4
                                Store 65_19 61_15
           65_20:   32_4(ptr)   AccessChain 59_11(@patchConstantResult) 43_2
           61_16: 22_1(float)   Load 65_20
           65_21:  32_13(ptr)   AccessChain 59_6(@patchConstantOutput.fInsideTessFactor) 43_3
                                Store 65_21 61_16
                                Branch 248_3
           248_3:             Label
                              Return
                              FunctionEnd
54_2(HS_ConstFunc(struct-HS_Input-vf4-vf41[3];):30_2(HS_Output) Function None 33_2
         55_1(I):   32_1(ptr) FunctionParameter
           248_4:             Label
        59_13(O):   32_3(ptr) Variable Function
                              Store 59_13(O) 44_2
           65_22:   32_4(ptr) AccessChain 55_1(I) 43_3 43_3 uint(3)
           61_17: 22_1(float) Load 65_22
           65_23:   32_4(ptr) AccessChain 55_1(I) 43_3 43_2 uint(3)
           61_18: 22_1(float) Load 65_23
           129_1: 22_1(float) FAdd 61_17 61_18
           65_24:   32_4(ptr) AccessChain 59_13(O) 43_2
                              Store 65_24 129_1
           61_19:30_2(HS_Output) Load 59_13(O)
                              ReturnValue 61_19
                              FunctionEnd
54_3(@main(struct-HS_Input-vf4-vf41[3];u1;):30_3(HS_Main_Output) Function None 33_3
         55_2(I):   32_1(ptr) FunctionParameter
      55_3(cpid):   32_2(ptr) FunctionParameter
           248_5:             Label
   59_14(output):   32_5(ptr) Variable Function
                              Store 59_14(output) 44_4
           65_25:   32_6(ptr) AccessChain 59_14(output) 43_3
                              Store 65_25 44_3
           61_20:30_3(HS_Main_Output) Load 59_14(output)
                              ReturnValue 61_20
                              FunctionEnd
