hlsl.structin.vert
Shader version: 500
0:? Sequence
0:8  Function Definition: @main(vf4;struct-VI-vf4[2]-vf4-vf41;vf4; ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8    Function Parameters: 
0:8      'd' ( in 4-component vector of float)
0:8      'vi' ( in structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8      'e' ( in 4-component vector of float)
0:?     Sequence
0:11      move second child to first child ( temp 4-component vector of float)
0:11        b: direct index for structure ( temp 4-component vector of float)
0:11          'local' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:11          Constant:
0:11            2 (const int)
0:11        add ( temp 4-component vector of float)
0:11          add ( temp 4-component vector of float)
0:11            add ( temp 4-component vector of float)
0:11              add ( temp 4-component vector of float)
0:11                direct index ( temp 4-component vector of float)
0:11                  m: direct index for structure ( temp 2-element array of 4-component vector of float)
0:11                    'vi' ( in structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:11                    Constant:
0:11                      0 (const int)
0:11                  Constant:
0:11                    1 (const int)
0:11                direct index ( temp 4-component vector of float)
0:11                  m: direct index for structure ( temp 2-element array of 4-component vector of float)
0:11                    'vi' ( in structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:11                    Constant:
0:11                      0 (const int)
0:11                  Constant:
0:11                    0 (const int)
0:11              Construct vec4 ( temp 4-component vector of float)
0:11                direct index ( temp float)
0:11                  coord: direct index for structure ( temp 4-component vector of float)
0:11                    'vi' ( in structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:11                    Constant:
0:11                      1 (const int)
0:11                  Constant:
0:11                    0 (const int)
0:11            'd' ( in 4-component vector of float)
0:11          'e' ( in 4-component vector of float)
0:12      move second child to first child ( temp 4-component vector of float)
0:12        coord: direct index for structure ( temp 4-component vector of float)
0:12          'local' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:12          Constant:
0:12            1 (const int)
0:12        Constant:
0:12          1.000000
0:12          1.000000
0:12          1.000000
0:12          1.000000
0:13      move second child to first child ( temp 4-component vector of float)
0:13        direct index ( temp 4-component vector of float)
0:13          m: direct index for structure ( temp 2-element array of 4-component vector of float)
0:13            'local' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:13            Constant:
0:13              0 (const int)
0:13          Constant:
0:13            0 (const int)
0:13        Constant:
0:13          2.000000
0:13          2.000000
0:13          2.000000
0:13          2.000000
0:14      move second child to first child ( temp 4-component vector of float)
0:14        direct index ( temp 4-component vector of float)
0:14          m: direct index for structure ( temp 2-element array of 4-component vector of float)
0:14            'local' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:14            Constant:
0:14              0 (const int)
0:14          Constant:
0:14            1 (const int)
0:14        Constant:
0:14          3.000000
0:14          3.000000
0:14          3.000000
0:14          3.000000
0:16      Branch: Return with expression
0:16        'local' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8  Function Definition: main( ( temp void)
0:8    Function Parameters: 
0:?     Sequence
0:8      move second child to first child ( temp 4-component vector of float)
0:?         'd' ( temp 4-component vector of float)
0:?         'd' (layout( location=0) in 4-component vector of float)
0:8      Sequence
0:8        move second child to first child ( temp 4-component vector of float)
0:8          direct index ( temp 4-component vector of float)
0:8            m: direct index for structure ( temp 2-element array of 4-component vector of float)
0:?               'vi' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8              Constant:
0:8                0 (const int)
0:8            Constant:
0:8              0 (const int)
0:?           'vi.m[0]' (layout( location=1) in 4-component vector of float)
0:8        move second child to first child ( temp 4-component vector of float)
0:8          direct index ( temp 4-component vector of float)
0:8            m: direct index for structure ( temp 2-element array of 4-component vector of float)
0:?               'vi' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8              Constant:
0:8                0 (const int)
0:8            Constant:
0:8              1 (const int)
0:?           'vi.m[1]' (layout( location=2) in 4-component vector of float)
0:8        move second child to first child ( temp 4-component vector of float)
0:8          coord: direct index for structure ( temp 4-component vector of float)
0:?             'vi' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8            Constant:
0:8              1 (const int)
0:?           'vi.coord' (layout( location=3) in 4-component vector of float)
0:8        move second child to first child ( temp 4-component vector of float)
0:8          b: direct index for structure ( temp 4-component vector of float)
0:?             'vi' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8            Constant:
0:8              2 (const int)
0:?           'vi.b' (layout( location=4) in 4-component vector of float)
0:8      move second child to first child ( temp 4-component vector of float)
0:?         'e' ( temp 4-component vector of float)
0:?         'e' (layout( location=5) in 4-component vector of float)
0:8      Sequence
0:8        move second child to first child ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8          'flattenTemp' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8          Function Call: @main(vf4;struct-VI-vf4[2]-vf4-vf41;vf4; ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:?             'd' ( temp 4-component vector of float)
0:?             'vi' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:?             'e' ( temp 4-component vector of float)
0:8        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.m[0]' (layout( location=0) out 4-component vector of float)
0:8          direct index ( temp 4-component vector of float)
0:8            m: direct index for structure ( temp 2-element array of 4-component vector of float)
0:8              'flattenTemp' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8              Constant:
0:8                0 (const int)
0:8            Constant:
0:8              0 (const int)
0:8        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.m[1]' (layout( location=1) out 4-component vector of float)
0:8          direct index ( temp 4-component vector of float)
0:8            m: direct index for structure ( temp 2-element array of 4-component vector of float)
0:8              'flattenTemp' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8              Constant:
0:8                0 (const int)
0:8            Constant:
0:8              1 (const int)
0:8        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.coord' ( out 4-component vector of float Position)
0:8          coord: direct index for structure ( temp 4-component vector of float)
0:8            'flattenTemp' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8            Constant:
0:8              1 (const int)
0:8        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.b' (layout( location=2) smooth out 4-component vector of float)
0:8          b: direct index for structure ( temp 4-component vector of float)
0:8            'flattenTemp' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8            Constant:
0:8              2 (const int)
0:?   Linker Objects
0:?     '@entryPointOutput.coord' ( out 4-component vector of float Position)
0:?     '@entryPointOutput.m[0]' (layout( location=0) out 4-component vector of float)
0:?     '@entryPointOutput.m[1]' (layout( location=1) out 4-component vector of float)
0:?     '@entryPointOutput.b' (layout( location=2) smooth out 4-component vector of float)
0:?     'd' (layout( location=0) in 4-component vector of float)
0:?     'vi.m[0]' (layout( location=1) in 4-component vector of float)
0:?     'vi.m[1]' (layout( location=2) in 4-component vector of float)
0:?     'vi.coord' (layout( location=3) in 4-component vector of float)
0:?     'vi.b' (layout( location=4) in 4-component vector of float)
0:?     'e' (layout( location=5) in 4-component vector of float)


Linked vertex stage:


Shader version: 500
0:? Sequence
0:8  Function Definition: @main(vf4;struct-VI-vf4[2]-vf4-vf41;vf4; ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8    Function Parameters: 
0:8      'd' ( in 4-component vector of float)
0:8      'vi' ( in structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8      'e' ( in 4-component vector of float)
0:?     Sequence
0:11      move second child to first child ( temp 4-component vector of float)
0:11        b: direct index for structure ( temp 4-component vector of float)
0:11          'local' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:11          Constant:
0:11            2 (const int)
0:11        add ( temp 4-component vector of float)
0:11          add ( temp 4-component vector of float)
0:11            add ( temp 4-component vector of float)
0:11              add ( temp 4-component vector of float)
0:11                direct index ( temp 4-component vector of float)
0:11                  m: direct index for structure ( temp 2-element array of 4-component vector of float)
0:11                    'vi' ( in structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:11                    Constant:
0:11                      0 (const int)
0:11                  Constant:
0:11                    1 (const int)
0:11                direct index ( temp 4-component vector of float)
0:11                  m: direct index for structure ( temp 2-element array of 4-component vector of float)
0:11                    'vi' ( in structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:11                    Constant:
0:11                      0 (const int)
0:11                  Constant:
0:11                    0 (const int)
0:11              Construct vec4 ( temp 4-component vector of float)
0:11                direct index ( temp float)
0:11                  coord: direct index for structure ( temp 4-component vector of float)
0:11                    'vi' ( in structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:11                    Constant:
0:11                      1 (const int)
0:11                  Constant:
0:11                    0 (const int)
0:11            'd' ( in 4-component vector of float)
0:11          'e' ( in 4-component vector of float)
0:12      move second child to first child ( temp 4-component vector of float)
0:12        coord: direct index for structure ( temp 4-component vector of float)
0:12          'local' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:12          Constant:
0:12            1 (const int)
0:12        Constant:
0:12          1.000000
0:12          1.000000
0:12          1.000000
0:12          1.000000
0:13      move second child to first child ( temp 4-component vector of float)
0:13        direct index ( temp 4-component vector of float)
0:13          m: direct index for structure ( temp 2-element array of 4-component vector of float)
0:13            'local' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:13            Constant:
0:13              0 (const int)
0:13          Constant:
0:13            0 (const int)
0:13        Constant:
0:13          2.000000
0:13          2.000000
0:13          2.000000
0:13          2.000000
0:14      move second child to first child ( temp 4-component vector of float)
0:14        direct index ( temp 4-component vector of float)
0:14          m: direct index for structure ( temp 2-element array of 4-component vector of float)
0:14            'local' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:14            Constant:
0:14              0 (const int)
0:14          Constant:
0:14            1 (const int)
0:14        Constant:
0:14          3.000000
0:14          3.000000
0:14          3.000000
0:14          3.000000
0:16      Branch: Return with expression
0:16        'local' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8  Function Definition: main( ( temp void)
0:8    Function Parameters: 
0:?     Sequence
0:8      move second child to first child ( temp 4-component vector of float)
0:?         'd' ( temp 4-component vector of float)
0:?         'd' (layout( location=0) in 4-component vector of float)
0:8      Sequence
0:8        move second child to first child ( temp 4-component vector of float)
0:8          direct index ( temp 4-component vector of float)
0:8            m: direct index for structure ( temp 2-element array of 4-component vector of float)
0:?               'vi' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8              Constant:
0:8                0 (const int)
0:8            Constant:
0:8              0 (const int)
0:?           'vi.m[0]' (layout( location=1) in 4-component vector of float)
0:8        move second child to first child ( temp 4-component vector of float)
0:8          direct index ( temp 4-component vector of float)
0:8            m: direct index for structure ( temp 2-element array of 4-component vector of float)
0:?               'vi' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8              Constant:
0:8                0 (const int)
0:8            Constant:
0:8              1 (const int)
0:?           'vi.m[1]' (layout( location=2) in 4-component vector of float)
0:8        move second child to first child ( temp 4-component vector of float)
0:8          coord: direct index for structure ( temp 4-component vector of float)
0:?             'vi' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8            Constant:
0:8              1 (const int)
0:?           'vi.coord' (layout( location=3) in 4-component vector of float)
0:8        move second child to first child ( temp 4-component vector of float)
0:8          b: direct index for structure ( temp 4-component vector of float)
0:?             'vi' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8            Constant:
0:8              2 (const int)
0:?           'vi.b' (layout( location=4) in 4-component vector of float)
0:8      move second child to first child ( temp 4-component vector of float)
0:?         'e' ( temp 4-component vector of float)
0:?         'e' (layout( location=5) in 4-component vector of float)
0:8      Sequence
0:8        move second child to first child ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8          'flattenTemp' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8          Function Call: @main(vf4;struct-VI-vf4[2]-vf4-vf41;vf4; ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:?             'd' ( temp 4-component vector of float)
0:?             'vi' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:?             'e' ( temp 4-component vector of float)
0:8        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.m[0]' (layout( location=0) out 4-component vector of float)
0:8          direct index ( temp 4-component vector of float)
0:8            m: direct index for structure ( temp 2-element array of 4-component vector of float)
0:8              'flattenTemp' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8              Constant:
0:8                0 (const int)
0:8            Constant:
0:8              0 (const int)
0:8        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.m[1]' (layout( location=1) out 4-component vector of float)
0:8          direct index ( temp 4-component vector of float)
0:8            m: direct index for structure ( temp 2-element array of 4-component vector of float)
0:8              'flattenTemp' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8              Constant:
0:8                0 (const int)
0:8            Constant:
0:8              1 (const int)
0:8        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.coord' ( out 4-component vector of float Position)
0:8          coord: direct index for structure ( temp 4-component vector of float)
0:8            'flattenTemp' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8            Constant:
0:8              1 (const int)
0:8        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.b' (layout( location=2) smooth out 4-component vector of float)
0:8          b: direct index for structure ( temp 4-component vector of float)
0:8            'flattenTemp' ( temp structure{ temp 2-element array of 4-component vector of float m,  temp 4-component vector of float coord,  temp 4-component vector of float b})
0:8            Constant:
0:8              2 (const int)
0:?   Linker Objects
0:?     '@entryPointOutput.coord' ( out 4-component vector of float Position)
0:?     '@entryPointOutput.m[0]' (layout( location=0) out 4-component vector of float)
0:?     '@entryPointOutput.m[1]' (layout( location=1) out 4-component vector of float)
0:?     '@entryPointOutput.b' (layout( location=2) smooth out 4-component vector of float)
0:?     'd' (layout( location=0) in 4-component vector of float)
0:?     'vi.m[0]' (layout( location=1) in 4-component vector of float)
0:?     'vi.m[1]' (layout( location=2) in 4-component vector of float)
0:?     'vi.coord' (layout( location=3) in 4-component vector of float)
0:?     'vi.b' (layout( location=4) in 4-component vector of float)
0:?     'e' (layout( location=5) in 4-component vector of float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 94

                              Capability Shader
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Vertex 54_1  "main" 59_1 59_2 59_3 59_4 59_5 59_6 59_7 59_8 59_9 59_10
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 30_1  "VI"
                              MemberName 30_1(VI) 0  "m"
                              MemberName 30_1(VI) 1  "coord"
                              MemberName 30_1(VI) 2  "b"
                              Name 54_2  "@main(vf4;struct-VI-vf4[2]-vf4-vf41;vf4;"
                              Name 55_1  "d"
                              Name 55_2  "vi"
                              Name 55_3  "e"
                              Name 59_18  "local"
                              Name 59_11  "d"
                              Name 59_1  "d"
                              Name 59_12  "vi"
                              Name 59_2  "vi.m[0]"
                              Name 59_3  "vi.m[1]"
                              Name 59_4  "vi.coord"
                              Name 59_5  "vi.b"
                              Name 59_13  "e"
                              Name 59_6  "e"
                              Name 59_14  "flattenTemp"
                              Name 59_15  "param"
                              Name 59_16  "param"
                              Name 59_17  "param"
                              Name 59_7  "@entryPointOutput.m[0]"
                              Name 59_8  "@entryPointOutput.m[1]"
                              Name 59_9  "@entryPointOutput.coord"
                              Name 59_10  "@entryPointOutput.b"
                              Decorate 59_1(d) Location 0
                              Decorate 59_2(vi.m[0]) Location 1
                              Decorate 59_3(vi.m[1]) Location 2
                              Decorate 59_4(vi.coord) Location 3
                              Decorate 59_5(vi.b) Location 4
                              Decorate 59_6(e) Location 5
                              Decorate 59_7(@entryPointOutput.m[0]) Location 0
                              Decorate 59_8(@entryPointOutput.m[1]) Location 1
                              Decorate 59_9(@entryPointOutput.coord) BuiltIn Position
                              Decorate 59_10(@entryPointOutput.b) Location 2
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
            32_1:             TypePointer Function 23_1(fvec4)
            21_1:             TypeInt 32 0
         uint(2):   21_1(int) Constant 2
            28_1:             TypeArray 23_1(fvec4) uint(2)
        30_1(VI):             TypeStruct 28_1 23_1(fvec4) 23_1(fvec4)
            32_2:             TypePointer Function 30_1(VI)
            33_2:             TypeFunction 30_1(VI) 32_1(ptr) 32_2(ptr) 32_1(ptr)
            21_2:             TypeInt 32 1
            43_1:   21_2(int) Constant 2
            43_2:   21_2(int) Constant 0
            43_3:   21_2(int) Constant 1
         uint(0):   21_1(int) Constant 0
            32_3:             TypePointer Function 22_1(float)
            43_4: 22_1(float) Constant 1065353216
            44_1: 23_1(fvec4) ConstantComposite 43_4 43_4 43_4 43_4
            43_5: 22_1(float) Constant 1073741824
            44_2: 23_1(fvec4) ConstantComposite 43_5 43_5 43_5 43_5
            43_6: 22_1(float) Constant 1077936128
            44_3: 23_1(fvec4) ConstantComposite 43_6 43_6 43_6 43_6
            32_4:             TypePointer Input 23_1(fvec4)
         59_1(d):   32_4(ptr) Variable Input
   59_2(vi.m[0]):   32_4(ptr) Variable Input
   59_3(vi.m[1]):   32_4(ptr) Variable Input
  59_4(vi.coord):   32_4(ptr) Variable Input
      59_5(vi.b):   32_4(ptr) Variable Input
         59_6(e):   32_4(ptr) Variable Input
            32_5:             TypePointer Output 23_1(fvec4)
59_7(@entryPointOutput.m[0]):   32_5(ptr) Variable Output
59_8(@entryPointOutput.m[1]):   32_5(ptr) Variable Output
59_9(@entryPointOutput.coord):   32_5(ptr) Variable Output
59_10(@entryPointOutput.b):   32_5(ptr) Variable Output
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
        59_11(d):   32_1(ptr) Variable Function
       59_12(vi):   32_2(ptr) Variable Function
        59_13(e):   32_1(ptr) Variable Function
59_14(flattenTemp):   32_2(ptr) Variable Function
    59_15(param):   32_1(ptr) Variable Function
    59_16(param):   32_2(ptr) Variable Function
    59_17(param):   32_1(ptr) Variable Function
            61_1: 23_1(fvec4) Load 59_1(d)
                              Store 59_11(d) 61_1
            61_2: 23_1(fvec4) Load 59_2(vi.m[0])
            65_1:   32_1(ptr) AccessChain 59_12(vi) 43_2 43_2
                              Store 65_1 61_2
            61_3: 23_1(fvec4) Load 59_3(vi.m[1])
            65_2:   32_1(ptr) AccessChain 59_12(vi) 43_2 43_3
                              Store 65_2 61_3
            61_4: 23_1(fvec4) Load 59_4(vi.coord)
            65_3:   32_1(ptr) AccessChain 59_12(vi) 43_3
                              Store 65_3 61_4
            61_5: 23_1(fvec4) Load 59_5(vi.b)
            65_4:   32_1(ptr) AccessChain 59_12(vi) 43_1
                              Store 65_4 61_5
            61_6: 23_1(fvec4) Load 59_6(e)
                              Store 59_13(e) 61_6
            61_7: 23_1(fvec4) Load 59_11(d)
                              Store 59_15(param) 61_7
            61_8:    30_1(VI) Load 59_12(vi)
                              Store 59_16(param) 61_8
            61_9: 23_1(fvec4) Load 59_13(e)
                              Store 59_17(param) 61_9
            57_1:    30_1(VI) FunctionCall 54_2(@main(vf4;struct-VI-vf4[2]-vf4-vf41;vf4;) 59_15(param) 59_16(param) 59_17(param)
                              Store 59_14(flattenTemp) 57_1
            65_5:   32_1(ptr) AccessChain 59_14(flattenTemp) 43_2 43_2
           61_10: 23_1(fvec4) Load 65_5
                              Store 59_7(@entryPointOutput.m[0]) 61_10
            65_6:   32_1(ptr) AccessChain 59_14(flattenTemp) 43_2 43_3
           61_11: 23_1(fvec4) Load 65_6
                              Store 59_8(@entryPointOutput.m[1]) 61_11
            65_7:   32_1(ptr) AccessChain 59_14(flattenTemp) 43_3
           61_12: 23_1(fvec4) Load 65_7
                              Store 59_9(@entryPointOutput.coord) 61_12
            65_8:   32_1(ptr) AccessChain 59_14(flattenTemp) 43_1
           61_13: 23_1(fvec4) Load 65_8
                              Store 59_10(@entryPointOutput.b) 61_13
                              Return
                              FunctionEnd
54_2(@main(vf4;struct-VI-vf4[2]-vf4-vf41;vf4;):    30_1(VI) Function None 33_2
         55_1(d):   32_1(ptr) FunctionParameter
        55_2(vi):   32_2(ptr) FunctionParameter
         55_3(e):   32_1(ptr) FunctionParameter
           248_2:             Label
    59_18(local):   32_2(ptr) Variable Function
            65_9:   32_1(ptr) AccessChain 55_2(vi) 43_2 43_3
           61_14: 23_1(fvec4) Load 65_9
           65_10:   32_1(ptr) AccessChain 55_2(vi) 43_2 43_2
           61_15: 23_1(fvec4) Load 65_10
           129_1: 23_1(fvec4) FAdd 61_14 61_15
           65_11:   32_3(ptr) AccessChain 55_2(vi) 43_3 uint(0)
           61_16: 22_1(float) Load 65_11
            80_1: 23_1(fvec4) CompositeConstruct 61_16 61_16 61_16 61_16
           129_2: 23_1(fvec4) FAdd 129_1 80_1
           61_17: 23_1(fvec4) Load 55_1(d)
           129_3: 23_1(fvec4) FAdd 129_2 61_17
           61_18: 23_1(fvec4) Load 55_3(e)
           129_4: 23_1(fvec4) FAdd 129_3 61_18
           65_12:   32_1(ptr) AccessChain 59_18(local) 43_1
                              Store 65_12 129_4
           65_13:   32_1(ptr) AccessChain 59_18(local) 43_3
                              Store 65_13 44_1
           65_14:   32_1(ptr) AccessChain 59_18(local) 43_2 43_2
                              Store 65_14 44_2
           65_15:   32_1(ptr) AccessChain 59_18(local) 43_2 43_3
                              Store 65_15 44_3
           61_19:    30_1(VI) Load 59_18(local)
                              ReturnValue 61_19
                              FunctionEnd
