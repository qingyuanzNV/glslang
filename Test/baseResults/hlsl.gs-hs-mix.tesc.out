hlsl.gs-hs-mix.tesc
Shader version: 500
vertices = 3
vertex spacing = fractional_odd_spacing
triangle order = ccw
0:? Sequence
0:31  Function Definition: HSPatchConstant(struct-HSInput-vf3-vf31[3]; ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:31    Function Parameters: 
0:31      'patch' ( in 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:?     Sequence
0:32      Sequence
0:32        move second child to first child ( temp 3-component vector of float)
0:32          'roundedEdgeTessFactor' ( temp 3-component vector of float)
0:32          tess_factor: direct index for structure (layout( row_major std140) uniform 3-component vector of float)
0:32            'anon@0' (layout( binding=0 row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float model_view_matrix, layout( row_major std140) uniform 4X4 matrix of float proj_matrix, layout( row_major std140) uniform 4X4 matrix of float model_view_proj_matrix, layout( row_major std140) uniform 3X3 matrix of float normal_matrix, layout( row_major std140) uniform 3-component vector of float color, layout( row_major std140) uniform 3-component vector of float view_dir, layout( row_major std140) uniform 3-component vector of float tess_factor})
0:32            Constant:
0:32              6 (const uint)
0:33      Sequence
0:33        move second child to first child ( temp float)
0:33          'roundedInsideTessFactor' ( temp float)
0:33          Constant:
0:33            3.000000
0:34      Sequence
0:34        move second child to first child ( temp float)
0:34          'insideTessFactor' ( temp float)
0:34          Constant:
0:34            1.000000
0:39      move second child to first child ( temp float)
0:39        direct index ( temp float)
0:39          EdgeTessFactor: direct index for structure ( temp 3-element array of float)
0:39            'result' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:39            Constant:
0:39              0 (const int)
0:39          Constant:
0:39            0 (const int)
0:39        direct index ( temp float)
0:39          'roundedEdgeTessFactor' ( temp 3-component vector of float)
0:39          Constant:
0:39            0 (const int)
0:40      move second child to first child ( temp float)
0:40        direct index ( temp float)
0:40          EdgeTessFactor: direct index for structure ( temp 3-element array of float)
0:40            'result' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:40            Constant:
0:40              0 (const int)
0:40          Constant:
0:40            1 (const int)
0:40        direct index ( temp float)
0:40          'roundedEdgeTessFactor' ( temp 3-component vector of float)
0:40          Constant:
0:40            1 (const int)
0:41      move second child to first child ( temp float)
0:41        direct index ( temp float)
0:41          EdgeTessFactor: direct index for structure ( temp 3-element array of float)
0:41            'result' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:41            Constant:
0:41              0 (const int)
0:41          Constant:
0:41            2 (const int)
0:41        direct index ( temp float)
0:41          'roundedEdgeTessFactor' ( temp 3-component vector of float)
0:41          Constant:
0:41            2 (const int)
0:42      move second child to first child ( temp float)
0:42        InsideTessFactor: direct index for structure ( temp float)
0:42          'result' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:42          Constant:
0:42            1 (const int)
0:42        'roundedInsideTessFactor' ( temp float)
0:45      move second child to first child ( temp 3-component vector of float)
0:45        direct index ( temp 3-component vector of float)
0:45          NormalWS: direct index for structure ( temp 3-element array of 3-component vector of float)
0:45            'result' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:45            Constant:
0:45              2 (const int)
0:45          Constant:
0:45            0 (const int)
0:45        NormalWS: direct index for structure ( temp 3-component vector of float)
0:45          direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:45            'patch' ( in 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:45            Constant:
0:45              0 (const int)
0:45          Constant:
0:45            1 (const int)
0:46      move second child to first child ( temp 3-component vector of float)
0:46        direct index ( temp 3-component vector of float)
0:46          NormalWS: direct index for structure ( temp 3-element array of 3-component vector of float)
0:46            'result' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:46            Constant:
0:46              2 (const int)
0:46          Constant:
0:46            1 (const int)
0:46        NormalWS: direct index for structure ( temp 3-component vector of float)
0:46          direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:46            'patch' ( in 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:46            Constant:
0:46              1 (const int)
0:46          Constant:
0:46            1 (const int)
0:47      move second child to first child ( temp 3-component vector of float)
0:47        direct index ( temp 3-component vector of float)
0:47          NormalWS: direct index for structure ( temp 3-element array of 3-component vector of float)
0:47            'result' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:47            Constant:
0:47              2 (const int)
0:47          Constant:
0:47            2 (const int)
0:47        NormalWS: direct index for structure ( temp 3-component vector of float)
0:47          direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:47            'patch' ( in 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:47            Constant:
0:47              2 (const int)
0:47          Constant:
0:47            1 (const int)
0:49      Branch: Return with expression
0:49        'result' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:61  Function Definition: @HSMain(struct-HSInput-vf3-vf31[3];u1; ( temp structure{ temp 3-component vector of float PositionWS})
0:61    Function Parameters: 
0:61      'patch' ( in 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:61      'id' ( in uint)
0:?     Sequence
0:63      move second child to first child ( temp 3-component vector of float)
0:63        PositionWS: direct index for structure ( temp 3-component vector of float)
0:63          'output' ( temp structure{ temp 3-component vector of float PositionWS})
0:63          Constant:
0:63            0 (const int)
0:63        PositionWS: direct index for structure ( temp 3-component vector of float)
0:63          indirect index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:63            'patch' ( in 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:63            'id' ( in uint)
0:63          Constant:
0:63            0 (const int)
0:64      Branch: Return with expression
0:64        'output' ( temp structure{ temp 3-component vector of float PositionWS})
0:61  Function Definition: HSMain( ( temp void)
0:61    Function Parameters: 
0:?     Sequence
0:61      Sequence
0:61        move second child to first child ( temp 3-component vector of float)
0:61          PositionWS: direct index for structure ( temp 3-component vector of float)
0:61            direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:?               'patch' ( temp 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:61              Constant:
0:61                0 (const int)
0:61            Constant:
0:61              0 (const int)
0:61          direct index (layout( location=0) in 3-component vector of float)
0:?             'patch.PositionWS' (layout( location=0) in 3-element array of 3-component vector of float)
0:61            Constant:
0:61              0 (const int)
0:61        move second child to first child ( temp 3-component vector of float)
0:61          NormalWS: direct index for structure ( temp 3-component vector of float)
0:61            direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:?               'patch' ( temp 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:61              Constant:
0:61                0 (const int)
0:61            Constant:
0:61              1 (const int)
0:61          direct index (layout( location=1) in 3-component vector of float)
0:?             'patch.NormalWS' (layout( location=1) in 3-element array of 3-component vector of float)
0:61            Constant:
0:61              0 (const int)
0:61        move second child to first child ( temp 3-component vector of float)
0:61          PositionWS: direct index for structure ( temp 3-component vector of float)
0:61            direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:?               'patch' ( temp 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:61              Constant:
0:61                1 (const int)
0:61            Constant:
0:61              0 (const int)
0:61          direct index (layout( location=0) in 3-component vector of float)
0:?             'patch.PositionWS' (layout( location=0) in 3-element array of 3-component vector of float)
0:61            Constant:
0:61              1 (const int)
0:61        move second child to first child ( temp 3-component vector of float)
0:61          NormalWS: direct index for structure ( temp 3-component vector of float)
0:61            direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:?               'patch' ( temp 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:61              Constant:
0:61                1 (const int)
0:61            Constant:
0:61              1 (const int)
0:61          direct index (layout( location=1) in 3-component vector of float)
0:?             'patch.NormalWS' (layout( location=1) in 3-element array of 3-component vector of float)
0:61            Constant:
0:61              1 (const int)
0:61        move second child to first child ( temp 3-component vector of float)
0:61          PositionWS: direct index for structure ( temp 3-component vector of float)
0:61            direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:?               'patch' ( temp 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:61              Constant:
0:61                2 (const int)
0:61            Constant:
0:61              0 (const int)
0:61          direct index (layout( location=0) in 3-component vector of float)
0:?             'patch.PositionWS' (layout( location=0) in 3-element array of 3-component vector of float)
0:61            Constant:
0:61              2 (const int)
0:61        move second child to first child ( temp 3-component vector of float)
0:61          NormalWS: direct index for structure ( temp 3-component vector of float)
0:61            direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:?               'patch' ( temp 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:61              Constant:
0:61                2 (const int)
0:61            Constant:
0:61              1 (const int)
0:61          direct index (layout( location=1) in 3-component vector of float)
0:?             'patch.NormalWS' (layout( location=1) in 3-element array of 3-component vector of float)
0:61            Constant:
0:61              2 (const int)
0:61      move second child to first child ( temp uint)
0:?         'id' ( temp uint)
0:?         'id' ( in uint InvocationID)
0:61      Sequence
0:61        move second child to first child ( temp 3-component vector of float)
0:61          indirect index (layout( location=0) out 3-component vector of float)
0:?             '@entryPointOutput.PositionWS' (layout( location=0) out 3-element array of 3-component vector of float)
0:?             'id' ( in uint InvocationID)
0:61          PositionWS: direct index for structure ( temp 3-component vector of float)
0:61            Function Call: @HSMain(struct-HSInput-vf3-vf31[3];u1; ( temp structure{ temp 3-component vector of float PositionWS})
0:?               'patch' ( temp 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:?               'id' ( temp uint)
0:61            Constant:
0:61              0 (const int)
0:?       Barrier ( temp void)
0:?       Test condition and select ( temp void)
0:?         Condition
0:?         Compare Equal ( temp bool)
0:?           'id' ( in uint InvocationID)
0:?           Constant:
0:?             0 (const int)
0:?         true case
0:?         Sequence
0:?           move second child to first child ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:?             '@patchConstantResult' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:?             Function Call: HSPatchConstant(struct-HSInput-vf3-vf31[3]; ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:?               'patch' ( temp 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:?           Sequence
0:?             move second child to first child ( temp float)
0:?               direct index ( patch out float TessLevelOuter)
0:?                 '@patchConstantOutput.EdgeTessFactor' ( patch out 4-element array of float TessLevelOuter)
0:?                 Constant:
0:?                   0 (const int)
0:?               direct index ( temp float)
0:?                 EdgeTessFactor: direct index for structure ( temp 3-element array of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:?                   Constant:
0:?                     0 (const int)
0:?                 Constant:
0:?                   0 (const int)
0:?             move second child to first child ( temp float)
0:?               direct index ( patch out float TessLevelOuter)
0:?                 '@patchConstantOutput.EdgeTessFactor' ( patch out 4-element array of float TessLevelOuter)
0:?                 Constant:
0:?                   1 (const int)
0:?               direct index ( temp float)
0:?                 EdgeTessFactor: direct index for structure ( temp 3-element array of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:?                   Constant:
0:?                     0 (const int)
0:?                 Constant:
0:?                   1 (const int)
0:?             move second child to first child ( temp float)
0:?               direct index ( patch out float TessLevelOuter)
0:?                 '@patchConstantOutput.EdgeTessFactor' ( patch out 4-element array of float TessLevelOuter)
0:?                 Constant:
0:?                   2 (const int)
0:?               direct index ( temp float)
0:?                 EdgeTessFactor: direct index for structure ( temp 3-element array of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:?                   Constant:
0:?                     0 (const int)
0:?                 Constant:
0:?                   2 (const int)
0:?             move second child to first child ( temp float)
0:?               direct index ( patch out float TessLevelInner)
0:?                 '@patchConstantOutput.InsideTessFactor' ( patch out 2-element array of float TessLevelInner)
0:?                 Constant:
0:?                   0 (const int)
0:?               InsideTessFactor: direct index for structure ( temp float)
0:?                 '@patchConstantResult' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:?                 Constant:
0:?                   1 (const int)
0:?             move second child to first child ( temp 3-component vector of float)
0:?               '@patchConstantOutput.NormalWS[0]' (layout( location=1) patch out 3-component vector of float)
0:?               direct index ( temp 3-component vector of float)
0:?                 NormalWS: direct index for structure ( temp 3-element array of 3-component vector of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:?                   Constant:
0:?                     2 (const int)
0:?                 Constant:
0:?                   0 (const int)
0:?             move second child to first child ( temp 3-component vector of float)
0:?               '@patchConstantOutput.NormalWS[1]' (layout( location=2) patch out 3-component vector of float)
0:?               direct index ( temp 3-component vector of float)
0:?                 NormalWS: direct index for structure ( temp 3-element array of 3-component vector of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:?                   Constant:
0:?                     2 (const int)
0:?                 Constant:
0:?                   1 (const int)
0:?             move second child to first child ( temp 3-component vector of float)
0:?               '@patchConstantOutput.NormalWS[2]' (layout( location=3) patch out 3-component vector of float)
0:?               direct index ( temp 3-component vector of float)
0:?                 NormalWS: direct index for structure ( temp 3-element array of 3-component vector of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:?                   Constant:
0:?                     2 (const int)
0:?                 Constant:
0:?                   2 (const int)
0:84  Function Definition: GSMain(struct-GSVertexInput-vf3-vf31[3];struct-GSVertexOutput-vf41; ( temp void)
0:84    Function Parameters: 
0:84      'input' ( in 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:84      'output' ( out structure{ temp 4-component vector of float PositionCS})
0:?     Sequence
0:86      Sequence
0:86        move second child to first child ( temp 3-component vector of float)
0:86          'P0' ( temp 3-component vector of float)
0:86          vector swizzle ( temp 3-component vector of float)
0:86            PositionWS: direct index for structure ( temp 3-component vector of float)
0:86              direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:86                'input' ( in 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:86                Constant:
0:86                  0 (const int)
0:86              Constant:
0:86                0 (const int)
0:86            Sequence
0:86              Constant:
0:86                0 (const int)
0:86              Constant:
0:86                1 (const int)
0:86              Constant:
0:86                2 (const int)
0:87      Sequence
0:87        move second child to first child ( temp 3-component vector of float)
0:87          'P1' ( temp 3-component vector of float)
0:87          vector swizzle ( temp 3-component vector of float)
0:87            PositionWS: direct index for structure ( temp 3-component vector of float)
0:87              direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:87                'input' ( in 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:87                Constant:
0:87                  1 (const int)
0:87              Constant:
0:87                0 (const int)
0:87            Sequence
0:87              Constant:
0:87                0 (const int)
0:87              Constant:
0:87                1 (const int)
0:87              Constant:
0:87                2 (const int)
0:88      Sequence
0:88        move second child to first child ( temp 3-component vector of float)
0:88          'P2' ( temp 3-component vector of float)
0:88          vector swizzle ( temp 3-component vector of float)
0:88            PositionWS: direct index for structure ( temp 3-component vector of float)
0:88              direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:88                'input' ( in 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:88                Constant:
0:88                  2 (const int)
0:88              Constant:
0:88                0 (const int)
0:88            Sequence
0:88              Constant:
0:88                0 (const int)
0:88              Constant:
0:88                1 (const int)
0:88              Constant:
0:88                2 (const int)
0:92      add second child into first child ( temp float)
0:92        direct index ( temp float)
0:92          'P0' ( temp 3-component vector of float)
0:92          Constant:
0:92            2 (const int)
0:92        Constant:
0:92          0.001000
0:93      add second child into first child ( temp float)
0:93        direct index ( temp float)
0:93          'P1' ( temp 3-component vector of float)
0:93          Constant:
0:93            2 (const int)
0:93        Constant:
0:93          0.001000
0:94      add second child into first child ( temp float)
0:94        direct index ( temp float)
0:94          'P2' ( temp 3-component vector of float)
0:94          Constant:
0:94            2 (const int)
0:94        Constant:
0:94          0.001000
0:95      Sequence
0:95        move second child to first child ( temp 4-component vector of float)
0:95          'Q0' ( temp 4-component vector of float)
0:95          vector-times-matrix ( temp 4-component vector of float)
0:95            Construct vec4 ( temp 4-component vector of float)
0:95              'P0' ( temp 3-component vector of float)
0:95              Constant:
0:95                1.000000
0:95            proj_matrix: direct index for structure (layout( row_major std140) uniform 4X4 matrix of float)
0:95              'anon@0' (layout( binding=0 row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float model_view_matrix, layout( row_major std140) uniform 4X4 matrix of float proj_matrix, layout( row_major std140) uniform 4X4 matrix of float model_view_proj_matrix, layout( row_major std140) uniform 3X3 matrix of float normal_matrix, layout( row_major std140) uniform 3-component vector of float color, layout( row_major std140) uniform 3-component vector of float view_dir, layout( row_major std140) uniform 3-component vector of float tess_factor})
0:95              Constant:
0:95                1 (const uint)
0:96      Sequence
0:96        move second child to first child ( temp 4-component vector of float)
0:96          'Q1' ( temp 4-component vector of float)
0:96          vector-times-matrix ( temp 4-component vector of float)
0:96            Construct vec4 ( temp 4-component vector of float)
0:96              'P1' ( temp 3-component vector of float)
0:96              Constant:
0:96                1.000000
0:96            proj_matrix: direct index for structure (layout( row_major std140) uniform 4X4 matrix of float)
0:96              'anon@0' (layout( binding=0 row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float model_view_matrix, layout( row_major std140) uniform 4X4 matrix of float proj_matrix, layout( row_major std140) uniform 4X4 matrix of float model_view_proj_matrix, layout( row_major std140) uniform 3X3 matrix of float normal_matrix, layout( row_major std140) uniform 3-component vector of float color, layout( row_major std140) uniform 3-component vector of float view_dir, layout( row_major std140) uniform 3-component vector of float tess_factor})
0:96              Constant:
0:96                1 (const uint)
0:97      Sequence
0:97        move second child to first child ( temp 4-component vector of float)
0:97          'Q2' ( temp 4-component vector of float)
0:97          vector-times-matrix ( temp 4-component vector of float)
0:97            Construct vec4 ( temp 4-component vector of float)
0:97              'P2' ( temp 3-component vector of float)
0:97              Constant:
0:97                1.000000
0:97            proj_matrix: direct index for structure (layout( row_major std140) uniform 4X4 matrix of float)
0:97              'anon@0' (layout( binding=0 row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float model_view_matrix, layout( row_major std140) uniform 4X4 matrix of float proj_matrix, layout( row_major std140) uniform 4X4 matrix of float model_view_proj_matrix, layout( row_major std140) uniform 3X3 matrix of float normal_matrix, layout( row_major std140) uniform 3-component vector of float color, layout( row_major std140) uniform 3-component vector of float view_dir, layout( row_major std140) uniform 3-component vector of float tess_factor})
0:97              Constant:
0:97                1 (const uint)
0:100      move second child to first child ( temp 4-component vector of float)
0:100        PositionCS: direct index for structure ( temp 4-component vector of float)
0:100          'vertex' ( temp structure{ temp 4-component vector of float PositionCS})
0:100          Constant:
0:100            0 (const int)
0:100        'Q0' ( temp 4-component vector of float)
0:101      Constant:
0:101        0.000000
0:102      move second child to first child ( temp 4-component vector of float)
0:102        PositionCS: direct index for structure ( temp 4-component vector of float)
0:102          'vertex' ( temp structure{ temp 4-component vector of float PositionCS})
0:102          Constant:
0:102            0 (const int)
0:102        'Q1' ( temp 4-component vector of float)
0:103      Constant:
0:103        0.000000
0:104      Constant:
0:104        0.000000
0:107      move second child to first child ( temp 4-component vector of float)
0:107        PositionCS: direct index for structure ( temp 4-component vector of float)
0:107          'vertex' ( temp structure{ temp 4-component vector of float PositionCS})
0:107          Constant:
0:107            0 (const int)
0:107        'Q1' ( temp 4-component vector of float)
0:108      Constant:
0:108        0.000000
0:109      move second child to first child ( temp 4-component vector of float)
0:109        PositionCS: direct index for structure ( temp 4-component vector of float)
0:109          'vertex' ( temp structure{ temp 4-component vector of float PositionCS})
0:109          Constant:
0:109            0 (const int)
0:109        'Q2' ( temp 4-component vector of float)
0:110      Constant:
0:110        0.000000
0:111      Constant:
0:111        0.000000
0:114      move second child to first child ( temp 4-component vector of float)
0:114        PositionCS: direct index for structure ( temp 4-component vector of float)
0:114          'vertex' ( temp structure{ temp 4-component vector of float PositionCS})
0:114          Constant:
0:114            0 (const int)
0:114        'Q2' ( temp 4-component vector of float)
0:115      Constant:
0:115        0.000000
0:116      move second child to first child ( temp 4-component vector of float)
0:116        PositionCS: direct index for structure ( temp 4-component vector of float)
0:116          'vertex' ( temp structure{ temp 4-component vector of float PositionCS})
0:116          Constant:
0:116            0 (const int)
0:116        'Q0' ( temp 4-component vector of float)
0:117      Constant:
0:117        0.000000
0:118      Constant:
0:118        0.000000
0:?   Linker Objects
0:?     'anon@0' (layout( binding=0 row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float model_view_matrix, layout( row_major std140) uniform 4X4 matrix of float proj_matrix, layout( row_major std140) uniform 4X4 matrix of float model_view_proj_matrix, layout( row_major std140) uniform 3X3 matrix of float normal_matrix, layout( row_major std140) uniform 3-component vector of float color, layout( row_major std140) uniform 3-component vector of float view_dir, layout( row_major std140) uniform 3-component vector of float tess_factor})
0:?     '@entryPointOutput.PositionWS' (layout( location=0) out 3-element array of 3-component vector of float)
0:?     'patch.PositionWS' (layout( location=0) in 3-element array of 3-component vector of float)
0:?     'patch.NormalWS' (layout( location=1) in 3-element array of 3-component vector of float)
0:?     'id' ( in uint InvocationID)
0:?     '@patchConstantOutput.EdgeTessFactor' ( patch out 4-element array of float TessLevelOuter)
0:?     '@patchConstantOutput.InsideTessFactor' ( patch out 2-element array of float TessLevelInner)
0:?     '@patchConstantOutput.NormalWS[0]' (layout( location=1) patch out 3-component vector of float)
0:?     '@patchConstantOutput.NormalWS[1]' (layout( location=2) patch out 3-component vector of float)
0:?     '@patchConstantOutput.NormalWS[2]' (layout( location=3) patch out 3-component vector of float)


Linked tessellation control stage:


Shader version: 500
vertices = 3
vertex spacing = fractional_odd_spacing
triangle order = ccw
0:? Sequence
0:31  Function Definition: HSPatchConstant(struct-HSInput-vf3-vf31[3]; ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:31    Function Parameters: 
0:31      'patch' ( in 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:?     Sequence
0:32      Sequence
0:32        move second child to first child ( temp 3-component vector of float)
0:32          'roundedEdgeTessFactor' ( temp 3-component vector of float)
0:32          tess_factor: direct index for structure (layout( row_major std140) uniform 3-component vector of float)
0:32            'anon@0' (layout( binding=0 row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float model_view_matrix, layout( row_major std140) uniform 4X4 matrix of float proj_matrix, layout( row_major std140) uniform 4X4 matrix of float model_view_proj_matrix, layout( row_major std140) uniform 3X3 matrix of float normal_matrix, layout( row_major std140) uniform 3-component vector of float color, layout( row_major std140) uniform 3-component vector of float view_dir, layout( row_major std140) uniform 3-component vector of float tess_factor})
0:32            Constant:
0:32              6 (const uint)
0:33      Sequence
0:33        move second child to first child ( temp float)
0:33          'roundedInsideTessFactor' ( temp float)
0:33          Constant:
0:33            3.000000
0:34      Sequence
0:34        move second child to first child ( temp float)
0:34          'insideTessFactor' ( temp float)
0:34          Constant:
0:34            1.000000
0:39      move second child to first child ( temp float)
0:39        direct index ( temp float)
0:39          EdgeTessFactor: direct index for structure ( temp 3-element array of float)
0:39            'result' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:39            Constant:
0:39              0 (const int)
0:39          Constant:
0:39            0 (const int)
0:39        direct index ( temp float)
0:39          'roundedEdgeTessFactor' ( temp 3-component vector of float)
0:39          Constant:
0:39            0 (const int)
0:40      move second child to first child ( temp float)
0:40        direct index ( temp float)
0:40          EdgeTessFactor: direct index for structure ( temp 3-element array of float)
0:40            'result' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:40            Constant:
0:40              0 (const int)
0:40          Constant:
0:40            1 (const int)
0:40        direct index ( temp float)
0:40          'roundedEdgeTessFactor' ( temp 3-component vector of float)
0:40          Constant:
0:40            1 (const int)
0:41      move second child to first child ( temp float)
0:41        direct index ( temp float)
0:41          EdgeTessFactor: direct index for structure ( temp 3-element array of float)
0:41            'result' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:41            Constant:
0:41              0 (const int)
0:41          Constant:
0:41            2 (const int)
0:41        direct index ( temp float)
0:41          'roundedEdgeTessFactor' ( temp 3-component vector of float)
0:41          Constant:
0:41            2 (const int)
0:42      move second child to first child ( temp float)
0:42        InsideTessFactor: direct index for structure ( temp float)
0:42          'result' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:42          Constant:
0:42            1 (const int)
0:42        'roundedInsideTessFactor' ( temp float)
0:45      move second child to first child ( temp 3-component vector of float)
0:45        direct index ( temp 3-component vector of float)
0:45          NormalWS: direct index for structure ( temp 3-element array of 3-component vector of float)
0:45            'result' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:45            Constant:
0:45              2 (const int)
0:45          Constant:
0:45            0 (const int)
0:45        NormalWS: direct index for structure ( temp 3-component vector of float)
0:45          direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:45            'patch' ( in 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:45            Constant:
0:45              0 (const int)
0:45          Constant:
0:45            1 (const int)
0:46      move second child to first child ( temp 3-component vector of float)
0:46        direct index ( temp 3-component vector of float)
0:46          NormalWS: direct index for structure ( temp 3-element array of 3-component vector of float)
0:46            'result' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:46            Constant:
0:46              2 (const int)
0:46          Constant:
0:46            1 (const int)
0:46        NormalWS: direct index for structure ( temp 3-component vector of float)
0:46          direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:46            'patch' ( in 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:46            Constant:
0:46              1 (const int)
0:46          Constant:
0:46            1 (const int)
0:47      move second child to first child ( temp 3-component vector of float)
0:47        direct index ( temp 3-component vector of float)
0:47          NormalWS: direct index for structure ( temp 3-element array of 3-component vector of float)
0:47            'result' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:47            Constant:
0:47              2 (const int)
0:47          Constant:
0:47            2 (const int)
0:47        NormalWS: direct index for structure ( temp 3-component vector of float)
0:47          direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:47            'patch' ( in 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:47            Constant:
0:47              2 (const int)
0:47          Constant:
0:47            1 (const int)
0:49      Branch: Return with expression
0:49        'result' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:61  Function Definition: @HSMain(struct-HSInput-vf3-vf31[3];u1; ( temp structure{ temp 3-component vector of float PositionWS})
0:61    Function Parameters: 
0:61      'patch' ( in 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:61      'id' ( in uint)
0:?     Sequence
0:63      move second child to first child ( temp 3-component vector of float)
0:63        PositionWS: direct index for structure ( temp 3-component vector of float)
0:63          'output' ( temp structure{ temp 3-component vector of float PositionWS})
0:63          Constant:
0:63            0 (const int)
0:63        PositionWS: direct index for structure ( temp 3-component vector of float)
0:63          indirect index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:63            'patch' ( in 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:63            'id' ( in uint)
0:63          Constant:
0:63            0 (const int)
0:64      Branch: Return with expression
0:64        'output' ( temp structure{ temp 3-component vector of float PositionWS})
0:61  Function Definition: HSMain( ( temp void)
0:61    Function Parameters: 
0:?     Sequence
0:61      Sequence
0:61        move second child to first child ( temp 3-component vector of float)
0:61          PositionWS: direct index for structure ( temp 3-component vector of float)
0:61            direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:?               'patch' ( temp 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:61              Constant:
0:61                0 (const int)
0:61            Constant:
0:61              0 (const int)
0:61          direct index (layout( location=0) in 3-component vector of float)
0:?             'patch.PositionWS' (layout( location=0) in 3-element array of 3-component vector of float)
0:61            Constant:
0:61              0 (const int)
0:61        move second child to first child ( temp 3-component vector of float)
0:61          NormalWS: direct index for structure ( temp 3-component vector of float)
0:61            direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:?               'patch' ( temp 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:61              Constant:
0:61                0 (const int)
0:61            Constant:
0:61              1 (const int)
0:61          direct index (layout( location=1) in 3-component vector of float)
0:?             'patch.NormalWS' (layout( location=1) in 3-element array of 3-component vector of float)
0:61            Constant:
0:61              0 (const int)
0:61        move second child to first child ( temp 3-component vector of float)
0:61          PositionWS: direct index for structure ( temp 3-component vector of float)
0:61            direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:?               'patch' ( temp 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:61              Constant:
0:61                1 (const int)
0:61            Constant:
0:61              0 (const int)
0:61          direct index (layout( location=0) in 3-component vector of float)
0:?             'patch.PositionWS' (layout( location=0) in 3-element array of 3-component vector of float)
0:61            Constant:
0:61              1 (const int)
0:61        move second child to first child ( temp 3-component vector of float)
0:61          NormalWS: direct index for structure ( temp 3-component vector of float)
0:61            direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:?               'patch' ( temp 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:61              Constant:
0:61                1 (const int)
0:61            Constant:
0:61              1 (const int)
0:61          direct index (layout( location=1) in 3-component vector of float)
0:?             'patch.NormalWS' (layout( location=1) in 3-element array of 3-component vector of float)
0:61            Constant:
0:61              1 (const int)
0:61        move second child to first child ( temp 3-component vector of float)
0:61          PositionWS: direct index for structure ( temp 3-component vector of float)
0:61            direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:?               'patch' ( temp 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:61              Constant:
0:61                2 (const int)
0:61            Constant:
0:61              0 (const int)
0:61          direct index (layout( location=0) in 3-component vector of float)
0:?             'patch.PositionWS' (layout( location=0) in 3-element array of 3-component vector of float)
0:61            Constant:
0:61              2 (const int)
0:61        move second child to first child ( temp 3-component vector of float)
0:61          NormalWS: direct index for structure ( temp 3-component vector of float)
0:61            direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:?               'patch' ( temp 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:61              Constant:
0:61                2 (const int)
0:61            Constant:
0:61              1 (const int)
0:61          direct index (layout( location=1) in 3-component vector of float)
0:?             'patch.NormalWS' (layout( location=1) in 3-element array of 3-component vector of float)
0:61            Constant:
0:61              2 (const int)
0:61      move second child to first child ( temp uint)
0:?         'id' ( temp uint)
0:?         'id' ( in uint InvocationID)
0:61      Sequence
0:61        move second child to first child ( temp 3-component vector of float)
0:61          indirect index (layout( location=0) out 3-component vector of float)
0:?             '@entryPointOutput.PositionWS' (layout( location=0) out 3-element array of 3-component vector of float)
0:?             'id' ( in uint InvocationID)
0:61          PositionWS: direct index for structure ( temp 3-component vector of float)
0:61            Function Call: @HSMain(struct-HSInput-vf3-vf31[3];u1; ( temp structure{ temp 3-component vector of float PositionWS})
0:?               'patch' ( temp 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:?               'id' ( temp uint)
0:61            Constant:
0:61              0 (const int)
0:?       Barrier ( temp void)
0:?       Test condition and select ( temp void)
0:?         Condition
0:?         Compare Equal ( temp bool)
0:?           'id' ( in uint InvocationID)
0:?           Constant:
0:?             0 (const int)
0:?         true case
0:?         Sequence
0:?           move second child to first child ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:?             '@patchConstantResult' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:?             Function Call: HSPatchConstant(struct-HSInput-vf3-vf31[3]; ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:?               'patch' ( temp 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:?           Sequence
0:?             move second child to first child ( temp float)
0:?               direct index ( patch out float TessLevelOuter)
0:?                 '@patchConstantOutput.EdgeTessFactor' ( patch out 4-element array of float TessLevelOuter)
0:?                 Constant:
0:?                   0 (const int)
0:?               direct index ( temp float)
0:?                 EdgeTessFactor: direct index for structure ( temp 3-element array of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:?                   Constant:
0:?                     0 (const int)
0:?                 Constant:
0:?                   0 (const int)
0:?             move second child to first child ( temp float)
0:?               direct index ( patch out float TessLevelOuter)
0:?                 '@patchConstantOutput.EdgeTessFactor' ( patch out 4-element array of float TessLevelOuter)
0:?                 Constant:
0:?                   1 (const int)
0:?               direct index ( temp float)
0:?                 EdgeTessFactor: direct index for structure ( temp 3-element array of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:?                   Constant:
0:?                     0 (const int)
0:?                 Constant:
0:?                   1 (const int)
0:?             move second child to first child ( temp float)
0:?               direct index ( patch out float TessLevelOuter)
0:?                 '@patchConstantOutput.EdgeTessFactor' ( patch out 4-element array of float TessLevelOuter)
0:?                 Constant:
0:?                   2 (const int)
0:?               direct index ( temp float)
0:?                 EdgeTessFactor: direct index for structure ( temp 3-element array of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:?                   Constant:
0:?                     0 (const int)
0:?                 Constant:
0:?                   2 (const int)
0:?             move second child to first child ( temp float)
0:?               direct index ( patch out float TessLevelInner)
0:?                 '@patchConstantOutput.InsideTessFactor' ( patch out 2-element array of float TessLevelInner)
0:?                 Constant:
0:?                   0 (const int)
0:?               InsideTessFactor: direct index for structure ( temp float)
0:?                 '@patchConstantResult' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:?                 Constant:
0:?                   1 (const int)
0:?             move second child to first child ( temp 3-component vector of float)
0:?               '@patchConstantOutput.NormalWS[0]' (layout( location=1) patch out 3-component vector of float)
0:?               direct index ( temp 3-component vector of float)
0:?                 NormalWS: direct index for structure ( temp 3-element array of 3-component vector of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:?                   Constant:
0:?                     2 (const int)
0:?                 Constant:
0:?                   0 (const int)
0:?             move second child to first child ( temp 3-component vector of float)
0:?               '@patchConstantOutput.NormalWS[1]' (layout( location=2) patch out 3-component vector of float)
0:?               direct index ( temp 3-component vector of float)
0:?                 NormalWS: direct index for structure ( temp 3-element array of 3-component vector of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:?                   Constant:
0:?                     2 (const int)
0:?                 Constant:
0:?                   1 (const int)
0:?             move second child to first child ( temp 3-component vector of float)
0:?               '@patchConstantOutput.NormalWS[2]' (layout( location=3) patch out 3-component vector of float)
0:?               direct index ( temp 3-component vector of float)
0:?                 NormalWS: direct index for structure ( temp 3-element array of 3-component vector of float)
0:?                   '@patchConstantResult' ( temp structure{ temp 3-element array of float EdgeTessFactor,  temp float InsideTessFactor,  temp 3-element array of 3-component vector of float NormalWS})
0:?                   Constant:
0:?                     2 (const int)
0:?                 Constant:
0:?                   2 (const int)
0:84  Function Definition: GSMain(struct-GSVertexInput-vf3-vf31[3];struct-GSVertexOutput-vf41; ( temp void)
0:84    Function Parameters: 
0:84      'input' ( in 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:84      'output' ( out structure{ temp 4-component vector of float PositionCS})
0:?     Sequence
0:86      Sequence
0:86        move second child to first child ( temp 3-component vector of float)
0:86          'P0' ( temp 3-component vector of float)
0:86          vector swizzle ( temp 3-component vector of float)
0:86            PositionWS: direct index for structure ( temp 3-component vector of float)
0:86              direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:86                'input' ( in 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:86                Constant:
0:86                  0 (const int)
0:86              Constant:
0:86                0 (const int)
0:86            Sequence
0:86              Constant:
0:86                0 (const int)
0:86              Constant:
0:86                1 (const int)
0:86              Constant:
0:86                2 (const int)
0:87      Sequence
0:87        move second child to first child ( temp 3-component vector of float)
0:87          'P1' ( temp 3-component vector of float)
0:87          vector swizzle ( temp 3-component vector of float)
0:87            PositionWS: direct index for structure ( temp 3-component vector of float)
0:87              direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:87                'input' ( in 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:87                Constant:
0:87                  1 (const int)
0:87              Constant:
0:87                0 (const int)
0:87            Sequence
0:87              Constant:
0:87                0 (const int)
0:87              Constant:
0:87                1 (const int)
0:87              Constant:
0:87                2 (const int)
0:88      Sequence
0:88        move second child to first child ( temp 3-component vector of float)
0:88          'P2' ( temp 3-component vector of float)
0:88          vector swizzle ( temp 3-component vector of float)
0:88            PositionWS: direct index for structure ( temp 3-component vector of float)
0:88              direct index ( temp structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:88                'input' ( in 3-element array of structure{ temp 3-component vector of float PositionWS,  temp 3-component vector of float NormalWS})
0:88                Constant:
0:88                  2 (const int)
0:88              Constant:
0:88                0 (const int)
0:88            Sequence
0:88              Constant:
0:88                0 (const int)
0:88              Constant:
0:88                1 (const int)
0:88              Constant:
0:88                2 (const int)
0:92      add second child into first child ( temp float)
0:92        direct index ( temp float)
0:92          'P0' ( temp 3-component vector of float)
0:92          Constant:
0:92            2 (const int)
0:92        Constant:
0:92          0.001000
0:93      add second child into first child ( temp float)
0:93        direct index ( temp float)
0:93          'P1' ( temp 3-component vector of float)
0:93          Constant:
0:93            2 (const int)
0:93        Constant:
0:93          0.001000
0:94      add second child into first child ( temp float)
0:94        direct index ( temp float)
0:94          'P2' ( temp 3-component vector of float)
0:94          Constant:
0:94            2 (const int)
0:94        Constant:
0:94          0.001000
0:95      Sequence
0:95        move second child to first child ( temp 4-component vector of float)
0:95          'Q0' ( temp 4-component vector of float)
0:95          vector-times-matrix ( temp 4-component vector of float)
0:95            Construct vec4 ( temp 4-component vector of float)
0:95              'P0' ( temp 3-component vector of float)
0:95              Constant:
0:95                1.000000
0:95            proj_matrix: direct index for structure (layout( row_major std140) uniform 4X4 matrix of float)
0:95              'anon@0' (layout( binding=0 row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float model_view_matrix, layout( row_major std140) uniform 4X4 matrix of float proj_matrix, layout( row_major std140) uniform 4X4 matrix of float model_view_proj_matrix, layout( row_major std140) uniform 3X3 matrix of float normal_matrix, layout( row_major std140) uniform 3-component vector of float color, layout( row_major std140) uniform 3-component vector of float view_dir, layout( row_major std140) uniform 3-component vector of float tess_factor})
0:95              Constant:
0:95                1 (const uint)
0:96      Sequence
0:96        move second child to first child ( temp 4-component vector of float)
0:96          'Q1' ( temp 4-component vector of float)
0:96          vector-times-matrix ( temp 4-component vector of float)
0:96            Construct vec4 ( temp 4-component vector of float)
0:96              'P1' ( temp 3-component vector of float)
0:96              Constant:
0:96                1.000000
0:96            proj_matrix: direct index for structure (layout( row_major std140) uniform 4X4 matrix of float)
0:96              'anon@0' (layout( binding=0 row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float model_view_matrix, layout( row_major std140) uniform 4X4 matrix of float proj_matrix, layout( row_major std140) uniform 4X4 matrix of float model_view_proj_matrix, layout( row_major std140) uniform 3X3 matrix of float normal_matrix, layout( row_major std140) uniform 3-component vector of float color, layout( row_major std140) uniform 3-component vector of float view_dir, layout( row_major std140) uniform 3-component vector of float tess_factor})
0:96              Constant:
0:96                1 (const uint)
0:97      Sequence
0:97        move second child to first child ( temp 4-component vector of float)
0:97          'Q2' ( temp 4-component vector of float)
0:97          vector-times-matrix ( temp 4-component vector of float)
0:97            Construct vec4 ( temp 4-component vector of float)
0:97              'P2' ( temp 3-component vector of float)
0:97              Constant:
0:97                1.000000
0:97            proj_matrix: direct index for structure (layout( row_major std140) uniform 4X4 matrix of float)
0:97              'anon@0' (layout( binding=0 row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float model_view_matrix, layout( row_major std140) uniform 4X4 matrix of float proj_matrix, layout( row_major std140) uniform 4X4 matrix of float model_view_proj_matrix, layout( row_major std140) uniform 3X3 matrix of float normal_matrix, layout( row_major std140) uniform 3-component vector of float color, layout( row_major std140) uniform 3-component vector of float view_dir, layout( row_major std140) uniform 3-component vector of float tess_factor})
0:97              Constant:
0:97                1 (const uint)
0:100      move second child to first child ( temp 4-component vector of float)
0:100        PositionCS: direct index for structure ( temp 4-component vector of float)
0:100          'vertex' ( temp structure{ temp 4-component vector of float PositionCS})
0:100          Constant:
0:100            0 (const int)
0:100        'Q0' ( temp 4-component vector of float)
0:101      Constant:
0:101        0.000000
0:102      move second child to first child ( temp 4-component vector of float)
0:102        PositionCS: direct index for structure ( temp 4-component vector of float)
0:102          'vertex' ( temp structure{ temp 4-component vector of float PositionCS})
0:102          Constant:
0:102            0 (const int)
0:102        'Q1' ( temp 4-component vector of float)
0:103      Constant:
0:103        0.000000
0:104      Constant:
0:104        0.000000
0:107      move second child to first child ( temp 4-component vector of float)
0:107        PositionCS: direct index for structure ( temp 4-component vector of float)
0:107          'vertex' ( temp structure{ temp 4-component vector of float PositionCS})
0:107          Constant:
0:107            0 (const int)
0:107        'Q1' ( temp 4-component vector of float)
0:108      Constant:
0:108        0.000000
0:109      move second child to first child ( temp 4-component vector of float)
0:109        PositionCS: direct index for structure ( temp 4-component vector of float)
0:109          'vertex' ( temp structure{ temp 4-component vector of float PositionCS})
0:109          Constant:
0:109            0 (const int)
0:109        'Q2' ( temp 4-component vector of float)
0:110      Constant:
0:110        0.000000
0:111      Constant:
0:111        0.000000
0:114      move second child to first child ( temp 4-component vector of float)
0:114        PositionCS: direct index for structure ( temp 4-component vector of float)
0:114          'vertex' ( temp structure{ temp 4-component vector of float PositionCS})
0:114          Constant:
0:114            0 (const int)
0:114        'Q2' ( temp 4-component vector of float)
0:115      Constant:
0:115        0.000000
0:116      move second child to first child ( temp 4-component vector of float)
0:116        PositionCS: direct index for structure ( temp 4-component vector of float)
0:116          'vertex' ( temp structure{ temp 4-component vector of float PositionCS})
0:116          Constant:
0:116            0 (const int)
0:116        'Q0' ( temp 4-component vector of float)
0:117      Constant:
0:117        0.000000
0:118      Constant:
0:118        0.000000
0:?   Linker Objects
0:?     'anon@0' (layout( binding=0 row_major std140) uniform block{layout( row_major std140) uniform 4X4 matrix of float model_view_matrix, layout( row_major std140) uniform 4X4 matrix of float proj_matrix, layout( row_major std140) uniform 4X4 matrix of float model_view_proj_matrix, layout( row_major std140) uniform 3X3 matrix of float normal_matrix, layout( row_major std140) uniform 3-component vector of float color, layout( row_major std140) uniform 3-component vector of float view_dir, layout( row_major std140) uniform 3-component vector of float tess_factor})
0:?     '@entryPointOutput.PositionWS' (layout( location=0) out 3-element array of 3-component vector of float)
0:?     'patch.PositionWS' (layout( location=0) in 3-element array of 3-component vector of float)
0:?     'patch.NormalWS' (layout( location=1) in 3-element array of 3-component vector of float)
0:?     'id' ( in uint InvocationID)
0:?     '@patchConstantOutput.EdgeTessFactor' ( patch out 4-element array of float TessLevelOuter)
0:?     '@patchConstantOutput.InsideTessFactor' ( patch out 2-element array of float TessLevelInner)
0:?     '@patchConstantOutput.NormalWS[0]' (layout( location=1) patch out 3-component vector of float)
0:?     '@patchConstantOutput.NormalWS[1]' (layout( location=2) patch out 3-component vector of float)
0:?     '@patchConstantOutput.NormalWS[2]' (layout( location=3) patch out 3-component vector of float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 236

                              Capability Tessellation
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint TessellationControl 54_1  "HSMain" 59_2 59_3 59_4 59_5 59_6 59_7 59_8 59_9 59_10
                              ExecutionMode 54_1 OutputVertices 3
                              ExecutionMode 54_1 Triangles
                              ExecutionMode 54_1 SpacingFractionalOdd
                              ExecutionMode 54_1 VertexOrderCcw
                              Source HLSL 500
                              Name 54_1  "HSMain"
                              Name 30_1  "HSInput"
                              MemberName 30_1(HSInput) 0  "PositionWS"
                              MemberName 30_1(HSInput) 1  "NormalWS"
                              Name 30_2  "HSTrianglePatchConstant"
                              MemberName 30_2(HSTrianglePatchConstant) 0  "EdgeTessFactor"
                              MemberName 30_2(HSTrianglePatchConstant) 1  "InsideTessFactor"
                              MemberName 30_2(HSTrianglePatchConstant) 2  "NormalWS"
                              Name 54_2  "HSPatchConstant(struct-HSInput-vf3-vf31[3];"
                              Name 55_1  "patch"
                              Name 30_3  "HSOutput"
                              MemberName 30_3(HSOutput) 0  "PositionWS"
                              Name 54_3  "@HSMain(struct-HSInput-vf3-vf31[3];u1;"
                              Name 55_2  "patch"
                              Name 55_3  "id"
                              Name 30_4  "GSVertexInput"
                              MemberName 30_4(GSVertexInput) 0  "PositionWS"
                              MemberName 30_4(GSVertexInput) 1  "NormalWS"
                              Name 30_5  "GSVertexOutput"
                              MemberName 30_5(GSVertexOutput) 0  "PositionCS"
                              Name 54_4  "GSMain(struct-GSVertexInput-vf3-vf31[3];struct-GSVertexOutput-vf41;"
                              Name 55_4  "input"
                              Name 55_5  "output"
                              Name 59_17  "roundedEdgeTessFactor"
                              Name 30_6  "UniformBlock0"
                              MemberName 30_6(UniformBlock0) 0  "model_view_matrix"
                              MemberName 30_6(UniformBlock0) 1  "proj_matrix"
                              MemberName 30_6(UniformBlock0) 2  "model_view_proj_matrix"
                              MemberName 30_6(UniformBlock0) 3  "normal_matrix"
                              MemberName 30_6(UniformBlock0) 4  "color"
                              MemberName 30_6(UniformBlock0) 5  "view_dir"
                              MemberName 30_6(UniformBlock0) 6  "tess_factor"
                              Name 59_1  ""
                              Name 59_18  "roundedInsideTessFactor"
                              Name 59_19  "insideTessFactor"
                              Name 59_20  "result"
                              Name 59_21  "output"
                              Name 59_11  "patch"
                              Name 59_2  "patch.PositionWS"
                              Name 59_3  "patch.NormalWS"
                              Name 59_12  "id"
                              Name 59_4  "id"
                              Name 59_5  "@entryPointOutput.PositionWS"
                              Name 59_13  "param"
                              Name 59_14  "param"
                              Name 59_15  "@patchConstantResult"
                              Name 59_16  "param"
                              Name 59_6  "@patchConstantOutput.EdgeTessFactor"
                              Name 59_7  "@patchConstantOutput.InsideTessFactor"
                              Name 59_8  "@patchConstantOutput.NormalWS[0]"
                              Name 59_9  "@patchConstantOutput.NormalWS[1]"
                              Name 59_10  "@patchConstantOutput.NormalWS[2]"
                              Name 59_22  "P0"
                              Name 59_23  "P1"
                              Name 59_24  "P2"
                              Name 59_25  "Q0"
                              Name 59_26  "Q1"
                              Name 59_27  "Q2"
                              Name 59_28  "vertex"
                              Decorate 30_6(UniformBlock0) Block
                              MemberDecorate 30_6(UniformBlock0) 0 RowMajor
                              MemberDecorate 30_6(UniformBlock0) 0 MatrixStride 16
                              MemberDecorate 30_6(UniformBlock0) 0 Offset 0
                              MemberDecorate 30_6(UniformBlock0) 1 RowMajor
                              MemberDecorate 30_6(UniformBlock0) 1 MatrixStride 16
                              MemberDecorate 30_6(UniformBlock0) 1 Offset 64
                              MemberDecorate 30_6(UniformBlock0) 2 RowMajor
                              MemberDecorate 30_6(UniformBlock0) 2 MatrixStride 16
                              MemberDecorate 30_6(UniformBlock0) 2 Offset 128
                              MemberDecorate 30_6(UniformBlock0) 3 RowMajor
                              MemberDecorate 30_6(UniformBlock0) 3 MatrixStride 16
                              MemberDecorate 30_6(UniformBlock0) 3 Offset 192
                              MemberDecorate 30_6(UniformBlock0) 4 Offset 240
                              MemberDecorate 30_6(UniformBlock0) 5 Offset 256
                              MemberDecorate 30_6(UniformBlock0) 6 Offset 272
                              Decorate 59_1 Binding 0
                              Decorate 59_1 DescriptorSet 0
                              Decorate 59_2(patch.PositionWS) Location 0
                              Decorate 59_3(patch.NormalWS) Location 1
                              Decorate 59_4(id) BuiltIn InvocationId
                              Decorate 59_5(@entryPointOutput.PositionWS) Location 0
                              Decorate 59_6(@patchConstantOutput.EdgeTessFactor) BuiltIn TessLevelOuter
                              Decorate 59_6(@patchConstantOutput.EdgeTessFactor) Patch
                              Decorate 59_7(@patchConstantOutput.InsideTessFactor) BuiltIn TessLevelInner
                              Decorate 59_7(@patchConstantOutput.InsideTessFactor) Patch
                              Decorate 59_8(@patchConstantOutput.NormalWS[0]) Patch
                              Decorate 59_8(@patchConstantOutput.NormalWS[0]) Location 1
                              Decorate 59_9(@patchConstantOutput.NormalWS[1]) Patch
                              Decorate 59_9(@patchConstantOutput.NormalWS[1]) Location 2
                              Decorate 59_10(@patchConstantOutput.NormalWS[2]) Patch
                              Decorate 59_10(@patchConstantOutput.NormalWS[2]) Location 3
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 3
   30_1(HSInput):             TypeStruct 23_1(fvec3) 23_1(fvec3)
            21_1:             TypeInt 32 0
         uint(3):   21_1(int) Constant 3
            28_1:             TypeArray 30_1(HSInput) uint(3)
            32_1:             TypePointer Function 28_1
            28_2:             TypeArray 22_1(float) uint(3)
            28_3:             TypeArray 23_1(fvec3) uint(3)
30_2(HSTrianglePatchConstant):             TypeStruct 28_2 22_1(float) 28_3
            33_2:             TypeFunction 30_2(HSTrianglePatchConstant) 32_1(ptr)
            32_2:             TypePointer Function 21_1(int)
  30_3(HSOutput):             TypeStruct 23_1(fvec3)
            33_3:             TypeFunction 30_3(HSOutput) 32_1(ptr) 32_2(ptr)
30_4(GSVertexInput):             TypeStruct 23_1(fvec3) 23_1(fvec3)
            28_4:             TypeArray 30_4(GSVertexInput) uint(3)
            32_3:             TypePointer Function 28_4
            23_2:             TypeVector 22_1(float) 4
30_5(GSVertexOutput):             TypeStruct 23_2(fvec4)
            32_4:             TypePointer Function 30_5(GSVertexOutput)
            33_4:             TypeFunction 19_1 32_3(ptr) 32_4(ptr)
            32_5:             TypePointer Function 23_1(fvec3)
            24_1:             TypeMatrix 23_2(fvec4) 4
            24_2:             TypeMatrix 23_1(fvec3) 3
30_6(UniformBlock0):             TypeStruct 24_1 24_1 24_1 24_2 23_1(fvec3) 23_1(fvec3) 23_1(fvec3)
            32_6:             TypePointer Uniform 30_6(UniformBlock0)
            59_1:   32_6(ptr) Variable Uniform
            21_2:             TypeInt 32 1
            43_1:   21_2(int) Constant 6
            32_7:             TypePointer Uniform 23_1(fvec3)
            32_8:             TypePointer Function 22_1(float)
            43_2: 22_1(float) Constant 1077936128
            43_3: 22_1(float) Constant 1065353216
            32_9:             TypePointer Function 30_2(HSTrianglePatchConstant)
            43_4:   21_2(int) Constant 0
         uint(0):   21_1(int) Constant 0
            43_5:   21_2(int) Constant 1
         uint(1):   21_1(int) Constant 1
            43_6:   21_2(int) Constant 2
         uint(2):   21_1(int) Constant 2
           32_10:             TypePointer Function 30_3(HSOutput)
           32_11:             TypePointer Input 28_3
59_2(patch.PositionWS):  32_11(ptr) Variable Input
           32_12:             TypePointer Input 23_1(fvec3)
59_3(patch.NormalWS):  32_11(ptr) Variable Input
           32_13:             TypePointer Input 21_1(int)
        59_4(id):  32_13(ptr) Variable Input
           32_14:             TypePointer Output 28_3
59_5(@entryPointOutput.PositionWS):  32_14(ptr) Variable Output
           32_15:             TypePointer Output 23_1(fvec3)
         uint(4):   21_1(int) Constant 4
            20_1:             TypeBool
            28_5:             TypeArray 22_1(float) uint(4)
           32_16:             TypePointer Output 28_5
59_6(@patchConstantOutput.EdgeTessFactor):  32_16(ptr) Variable Output
           32_17:             TypePointer Output 22_1(float)
            28_6:             TypeArray 22_1(float) uint(2)
           32_18:             TypePointer Output 28_6
59_7(@patchConstantOutput.InsideTessFactor):  32_18(ptr) Variable Output
59_8(@patchConstantOutput.NormalWS[0]):  32_15(ptr) Variable Output
59_9(@patchConstantOutput.NormalWS[1]):  32_15(ptr) Variable Output
59_10(@patchConstantOutput.NormalWS[2]):  32_15(ptr) Variable Output
            43_7: 22_1(float) Constant 981668463
           32_19:             TypePointer Function 23_2(fvec4)
           32_20:             TypePointer Uniform 24_1
            43_8: 22_1(float) Constant 0
    54_1(HSMain):        19_1 Function None 33_1
           248_1:             Label
    59_11(patch):   32_1(ptr) Variable Function
       59_12(id):   32_2(ptr) Variable Function
    59_13(param):   32_1(ptr) Variable Function
    59_14(param):   32_2(ptr) Variable Function
59_15(@patchConstantResult):   32_9(ptr) Variable Function
    59_16(param):   32_1(ptr) Variable Function
            65_1:  32_12(ptr) AccessChain 59_2(patch.PositionWS) 43_4
            61_1: 23_1(fvec3) Load 65_1
            65_2:   32_5(ptr) AccessChain 59_11(patch) 43_4 43_4
                              Store 65_2 61_1
            65_3:  32_12(ptr) AccessChain 59_3(patch.NormalWS) 43_4
            61_2: 23_1(fvec3) Load 65_3
            65_4:   32_5(ptr) AccessChain 59_11(patch) 43_4 43_5
                              Store 65_4 61_2
            65_5:  32_12(ptr) AccessChain 59_2(patch.PositionWS) 43_5
            61_3: 23_1(fvec3) Load 65_5
            65_6:   32_5(ptr) AccessChain 59_11(patch) 43_5 43_4
                              Store 65_6 61_3
            65_7:  32_12(ptr) AccessChain 59_3(patch.NormalWS) 43_5
            61_4: 23_1(fvec3) Load 65_7
            65_8:   32_5(ptr) AccessChain 59_11(patch) 43_5 43_5
                              Store 65_8 61_4
            65_9:  32_12(ptr) AccessChain 59_2(patch.PositionWS) 43_6
            61_5: 23_1(fvec3) Load 65_9
           65_10:   32_5(ptr) AccessChain 59_11(patch) 43_6 43_4
                              Store 65_10 61_5
           65_11:  32_12(ptr) AccessChain 59_3(patch.NormalWS) 43_6
            61_6: 23_1(fvec3) Load 65_11
           65_12:   32_5(ptr) AccessChain 59_11(patch) 43_6 43_5
                              Store 65_12 61_6
            61_7:   21_1(int) Load 59_4(id)
                              Store 59_12(id) 61_7
            61_8:   21_1(int) Load 59_4(id)
            61_9:        28_1 Load 59_11(patch)
                              Store 59_13(param) 61_9
           61_10:   21_1(int) Load 59_12(id)
                              Store 59_14(param) 61_10
            57_1:30_3(HSOutput) FunctionCall 54_3(@HSMain(struct-HSInput-vf3-vf31[3];u1;) 59_13(param) 59_14(param)
            81_1: 23_1(fvec3) CompositeExtract 57_1 0
           65_13:  32_15(ptr) AccessChain 59_5(@entryPointOutput.PositionWS) 61_8
                              Store 65_13 81_1
                              ControlBarrier uint(2) uint(4) uint(0)
           61_11:   21_1(int) Load 59_4(id)
           170_1:  20_1(bool) IEqual 61_11 43_4
                              SelectionMerge 248_3 None
                              BranchConditional 170_1 248_2 248_3
           248_2:               Label
           61_12:        28_1   Load 59_11(patch)
                                Store 59_16(param) 61_12
            57_2:30_2(HSTrianglePatchConstant)   FunctionCall 54_2(HSPatchConstant(struct-HSInput-vf3-vf31[3];) 59_16(param)
                                Store 59_15(@patchConstantResult) 57_2
           65_14:   32_8(ptr)   AccessChain 59_15(@patchConstantResult) 43_4 43_4
           61_13: 22_1(float)   Load 65_14
           65_15:  32_17(ptr)   AccessChain 59_6(@patchConstantOutput.EdgeTessFactor) 43_4
                                Store 65_15 61_13
           65_16:   32_8(ptr)   AccessChain 59_15(@patchConstantResult) 43_4 43_5
           61_14: 22_1(float)   Load 65_16
           65_17:  32_17(ptr)   AccessChain 59_6(@patchConstantOutput.EdgeTessFactor) 43_5
                                Store 65_17 61_14
           65_18:   32_8(ptr)   AccessChain 59_15(@patchConstantResult) 43_4 43_6
           61_15: 22_1(float)   Load 65_18
           65_19:  32_17(ptr)   AccessChain 59_6(@patchConstantOutput.EdgeTessFactor) 43_6
                                Store 65_19 61_15
           65_20:   32_8(ptr)   AccessChain 59_15(@patchConstantResult) 43_5
           61_16: 22_1(float)   Load 65_20
           65_21:  32_17(ptr)   AccessChain 59_7(@patchConstantOutput.InsideTessFactor) 43_4
                                Store 65_21 61_16
           65_22:   32_5(ptr)   AccessChain 59_15(@patchConstantResult) 43_6 43_4
           61_17: 23_1(fvec3)   Load 65_22
                                Store 59_8(@patchConstantOutput.NormalWS[0]) 61_17
           65_23:   32_5(ptr)   AccessChain 59_15(@patchConstantResult) 43_6 43_5
           61_18: 23_1(fvec3)   Load 65_23
                                Store 59_9(@patchConstantOutput.NormalWS[1]) 61_18
           65_24:   32_5(ptr)   AccessChain 59_15(@patchConstantResult) 43_6 43_6
           61_19: 23_1(fvec3)   Load 65_24
                                Store 59_10(@patchConstantOutput.NormalWS[2]) 61_19
                                Branch 248_3
           248_3:             Label
                              Return
                              FunctionEnd
54_2(HSPatchConstant(struct-HSInput-vf3-vf31[3];):30_2(HSTrianglePatchConstant) Function None 33_2
     55_1(patch):   32_1(ptr) FunctionParameter
           248_4:             Label
59_17(roundedEdgeTessFactor):   32_5(ptr) Variable Function
59_18(roundedInsideTessFactor):   32_8(ptr) Variable Function
59_19(insideTessFactor):   32_8(ptr) Variable Function
   59_20(result):   32_9(ptr) Variable Function
           65_25:   32_7(ptr) AccessChain 59_1 43_1
           61_20: 23_1(fvec3) Load 65_25
                              Store 59_17(roundedEdgeTessFactor) 61_20
                              Store 59_18(roundedInsideTessFactor) 43_2
                              Store 59_19(insideTessFactor) 43_3
           65_26:   32_8(ptr) AccessChain 59_17(roundedEdgeTessFactor) uint(0)
           61_21: 22_1(float) Load 65_26
           65_27:   32_8(ptr) AccessChain 59_20(result) 43_4 43_4
                              Store 65_27 61_21
           65_28:   32_8(ptr) AccessChain 59_17(roundedEdgeTessFactor) uint(1)
           61_22: 22_1(float) Load 65_28
           65_29:   32_8(ptr) AccessChain 59_20(result) 43_4 43_5
                              Store 65_29 61_22
           65_30:   32_8(ptr) AccessChain 59_17(roundedEdgeTessFactor) uint(2)
           61_23: 22_1(float) Load 65_30
           65_31:   32_8(ptr) AccessChain 59_20(result) 43_4 43_6
                              Store 65_31 61_23
           61_24: 22_1(float) Load 59_18(roundedInsideTessFactor)
           65_32:   32_8(ptr) AccessChain 59_20(result) 43_5
                              Store 65_32 61_24
           65_33:   32_5(ptr) AccessChain 55_1(patch) 43_4 43_5
           61_25: 23_1(fvec3) Load 65_33
           65_34:   32_5(ptr) AccessChain 59_20(result) 43_6 43_4
                              Store 65_34 61_25
           65_35:   32_5(ptr) AccessChain 55_1(patch) 43_5 43_5
           61_26: 23_1(fvec3) Load 65_35
           65_36:   32_5(ptr) AccessChain 59_20(result) 43_6 43_5
                              Store 65_36 61_26
           65_37:   32_5(ptr) AccessChain 55_1(patch) 43_6 43_5
           61_27: 23_1(fvec3) Load 65_37
           65_38:   32_5(ptr) AccessChain 59_20(result) 43_6 43_6
                              Store 65_38 61_27
           61_28:30_2(HSTrianglePatchConstant) Load 59_20(result)
                              ReturnValue 61_28
                              FunctionEnd
54_3(@HSMain(struct-HSInput-vf3-vf31[3];u1;):30_3(HSOutput) Function None 33_3
     55_2(patch):   32_1(ptr) FunctionParameter
        55_3(id):   32_2(ptr) FunctionParameter
           248_5:             Label
   59_21(output):  32_10(ptr) Variable Function
           61_29:   21_1(int) Load 55_3(id)
           65_39:   32_5(ptr) AccessChain 55_2(patch) 61_29 43_4
           61_30: 23_1(fvec3) Load 65_39
           65_40:   32_5(ptr) AccessChain 59_21(output) 43_4
                              Store 65_40 61_30
           61_31:30_3(HSOutput) Load 59_21(output)
                              ReturnValue 61_31
                              FunctionEnd
54_4(GSMain(struct-GSVertexInput-vf3-vf31[3];struct-GSVertexOutput-vf41;):        19_1 Function None 33_4
     55_4(input):   32_3(ptr) FunctionParameter
    55_5(output):   32_4(ptr) FunctionParameter
           248_6:             Label
       59_22(P0):   32_5(ptr) Variable Function
       59_23(P1):   32_5(ptr) Variable Function
       59_24(P2):   32_5(ptr) Variable Function
       59_25(Q0):  32_19(ptr) Variable Function
       59_26(Q1):  32_19(ptr) Variable Function
       59_27(Q2):  32_19(ptr) Variable Function
   59_28(vertex):   32_4(ptr) Variable Function
           65_41:   32_5(ptr) AccessChain 55_4(input) 43_4 43_4
           61_32: 23_1(fvec3) Load 65_41
                              Store 59_22(P0) 61_32
           65_42:   32_5(ptr) AccessChain 55_4(input) 43_5 43_4
           61_33: 23_1(fvec3) Load 65_42
                              Store 59_23(P1) 61_33
           65_43:   32_5(ptr) AccessChain 55_4(input) 43_6 43_4
           61_34: 23_1(fvec3) Load 65_43
                              Store 59_24(P2) 61_34
           65_44:   32_8(ptr) AccessChain 59_22(P0) uint(2)
           61_35: 22_1(float) Load 65_44
           129_1: 22_1(float) FAdd 61_35 43_7
           65_45:   32_8(ptr) AccessChain 59_22(P0) uint(2)
                              Store 65_45 129_1
           65_46:   32_8(ptr) AccessChain 59_23(P1) uint(2)
           61_36: 22_1(float) Load 65_46
           129_2: 22_1(float) FAdd 61_36 43_7
           65_47:   32_8(ptr) AccessChain 59_23(P1) uint(2)
                              Store 65_47 129_2
           65_48:   32_8(ptr) AccessChain 59_24(P2) uint(2)
           61_37: 22_1(float) Load 65_48
           129_3: 22_1(float) FAdd 61_37 43_7
           65_49:   32_8(ptr) AccessChain 59_24(P2) uint(2)
                              Store 65_49 129_3
           61_38: 23_1(fvec3) Load 59_22(P0)
            81_2: 22_1(float) CompositeExtract 61_38 0
            81_3: 22_1(float) CompositeExtract 61_38 1
            81_4: 22_1(float) CompositeExtract 61_38 2
            80_1: 23_2(fvec4) CompositeConstruct 81_2 81_3 81_4 43_3
           65_50:  32_20(ptr) AccessChain 59_1 43_5
           61_39:        24_1 Load 65_50
           144_1: 23_2(fvec4) VectorTimesMatrix 80_1 61_39
                              Store 59_25(Q0) 144_1
           61_40: 23_1(fvec3) Load 59_23(P1)
            81_5: 22_1(float) CompositeExtract 61_40 0
            81_6: 22_1(float) CompositeExtract 61_40 1
            81_7: 22_1(float) CompositeExtract 61_40 2
            80_2: 23_2(fvec4) CompositeConstruct 81_5 81_6 81_7 43_3
           65_51:  32_20(ptr) AccessChain 59_1 43_5
           61_41:        24_1 Load 65_51
           144_2: 23_2(fvec4) VectorTimesMatrix 80_2 61_41
                              Store 59_26(Q1) 144_2
           61_42: 23_1(fvec3) Load 59_24(P2)
            81_8: 22_1(float) CompositeExtract 61_42 0
            81_9: 22_1(float) CompositeExtract 61_42 1
           81_10: 22_1(float) CompositeExtract 61_42 2
            80_3: 23_2(fvec4) CompositeConstruct 81_8 81_9 81_10 43_3
           65_52:  32_20(ptr) AccessChain 59_1 43_5
           61_43:        24_1 Load 65_52
           144_3: 23_2(fvec4) VectorTimesMatrix 80_3 61_43
                              Store 59_27(Q2) 144_3
           61_44: 23_2(fvec4) Load 59_25(Q0)
           65_53:  32_19(ptr) AccessChain 59_28(vertex) 43_4
                              Store 65_53 61_44
           61_45: 23_2(fvec4) Load 59_26(Q1)
           65_54:  32_19(ptr) AccessChain 59_28(vertex) 43_4
                              Store 65_54 61_45
           61_46: 23_2(fvec4) Load 59_26(Q1)
           65_55:  32_19(ptr) AccessChain 59_28(vertex) 43_4
                              Store 65_55 61_46
           61_47: 23_2(fvec4) Load 59_27(Q2)
           65_56:  32_19(ptr) AccessChain 59_28(vertex) 43_4
                              Store 65_56 61_47
           61_48: 23_2(fvec4) Load 59_27(Q2)
           65_57:  32_19(ptr) AccessChain 59_28(vertex) 43_4
                              Store 65_57 61_48
           61_49: 23_2(fvec4) Load 59_25(Q0)
           65_58:  32_19(ptr) AccessChain 59_28(vertex) 43_4
                              Store 65_58 61_49
                              Return
                              FunctionEnd
