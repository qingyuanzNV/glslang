hlsl.type.identifier.frag
Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:6  Function Definition: fn(f1; ( temp float)
0:6    Function Parameters: 
0:6      'float' ( in float)
0:?     Sequence
0:6      Branch: Return with expression
0:6        'float' ( in float)
0:9  Function Definition: @main( ( temp 4-component vector of float)
0:9    Function Parameters: 
0:?     Sequence
0:10      Sequence
0:10        move second child to first child ( temp float)
0:10          'float' ( temp float)
0:10          Constant:
0:10            7.000000
0:11      Sequence
0:11        move second child to first child ( temp 2-element array of bool)
0:11          'bool' ( temp 2-element array of bool)
0:11          Construct bool ( temp 2-element array of bool)
0:11            Convert float to bool ( temp bool)
0:11              'float' ( temp float)
0:11            Convert float to bool ( temp bool)
0:11              'float' ( temp float)
0:12      Sequence
0:12        move second child to first child ( temp int)
0:12          'int' ( temp int)
0:12          Convert bool to int ( temp int)
0:12            direct index ( temp bool)
0:12              'bool' ( temp 2-element array of bool)
0:12              Constant:
0:12                1 (const int)
0:13      Sequence
0:13        move second child to first child ( temp uint)
0:13          'uint' ( temp uint)
0:13          Convert float to uint ( temp uint)
0:13            add ( temp float)
0:13              'float' ( temp float)
0:13              Convert int to float ( temp float)
0:13                'int' ( temp int)
0:14      Sequence
0:14        move second child to first child ( temp mediump float)
0:14          'min16float' ( temp mediump float)
0:14          Convert uint to float ( temp mediump float)
0:14            'uint' ( temp mediump uint)
0:15      Sequence
0:15        move second child to first child ( temp mediump float)
0:15          'min10float' ( temp mediump float)
0:15          'min16float' ( temp mediump float)
0:16      Sequence
0:16        move second child to first child ( temp float)
0:16          'half' ( temp float)
0:16          Constant:
0:16            0.500000
0:?       Sequence
0:20        move second child to first child ( temp float)
0:20          float: direct index for structure ( temp float)
0:20            'float' ( temp structure{ temp float float})
0:20            Constant:
0:20              0 (const int)
0:20          Constant:
0:20            42.000000
0:23      move second child to first child ( temp bool)
0:23        direct index ( temp bool)
0:23          'bool' ( temp 2-element array of bool)
0:23          Constant:
0:23            0 (const int)
0:23        direct index ( temp bool)
0:23          'bool' ( temp 2-element array of bool)
0:23          Constant:
0:23            1 (const int)
0:25      move second child to first child ( temp mediump float)
0:25        'float' ( temp mediump float)
0:25        add ( temp mediump float)
0:25          add ( temp mediump float)
0:25            add ( temp mediump float)
0:25              add ( temp mediump float)
0:25                add ( temp mediump float)
0:25                  add ( temp mediump float)
0:25                    'float' ( temp mediump float)
0:25                    Convert int to float ( temp mediump float)
0:25                      'int' ( temp mediump int)
0:25                  Convert uint to float ( temp mediump float)
0:25                    'uint' ( temp mediump uint)
0:25                'min16float' ( temp mediump float)
0:25              'min10float' ( temp mediump float)
0:25            Test condition and select ( temp mediump float): no shortcircuit
0:25              Condition
0:25              direct index ( temp bool)
0:25                'bool' ( temp 2-element array of bool)
0:25                Constant:
0:25                  0 (const int)
0:25              true case
0:25              Convert int to float ( temp mediump float)
0:25                'int' ( temp mediump int)
0:25              false case
0:25              'float' ( temp mediump float)
0:25          Function Call: fn(f1; ( temp mediump float)
0:25            'float' ( temp mediump float)
0:28      move second child to first child ( temp float)
0:28        direct index ( temp float)
0:28          direct index ( temp 3-component vector of float)
0:28            'half2x3' ( temp 2X3 matrix of float)
0:28            Constant:
0:28              0 (const int)
0:28          Constant:
0:28            0 (const int)
0:28        component-wise multiply ( temp float)
0:28          'float' ( temp float)
0:28          'float' ( temp float)
0:30      Branch: Return with expression
0:30        Construct vec4 ( temp 4-component vector of float)
0:30          add ( temp float)
0:30            'float' ( temp float)
0:30            direct index ( temp float)
0:30              direct index ( temp 3-component vector of float)
0:30                'half2x3' ( temp 2X3 matrix of float)
0:30                Constant:
0:30                  0 (const int)
0:30              Constant:
0:30                0 (const int)
0:9  Function Definition: main( ( temp void)
0:9    Function Parameters: 
0:?     Sequence
0:9      move second child to first child ( temp 4-component vector of float)
0:?         '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:9        Function Call: @main( ( temp 4-component vector of float)
0:?   Linker Objects
0:?     '@entryPointOutput' (layout( location=0) out 4-component vector of float)


Linked fragment stage:


Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:6  Function Definition: fn(f1; ( temp float)
0:6    Function Parameters: 
0:6      'float' ( in float)
0:?     Sequence
0:6      Branch: Return with expression
0:6        'float' ( in float)
0:9  Function Definition: @main( ( temp 4-component vector of float)
0:9    Function Parameters: 
0:?     Sequence
0:10      Sequence
0:10        move second child to first child ( temp float)
0:10          'float' ( temp float)
0:10          Constant:
0:10            7.000000
0:11      Sequence
0:11        move second child to first child ( temp 2-element array of bool)
0:11          'bool' ( temp 2-element array of bool)
0:11          Construct bool ( temp 2-element array of bool)
0:11            Convert float to bool ( temp bool)
0:11              'float' ( temp float)
0:11            Convert float to bool ( temp bool)
0:11              'float' ( temp float)
0:12      Sequence
0:12        move second child to first child ( temp int)
0:12          'int' ( temp int)
0:12          Convert bool to int ( temp int)
0:12            direct index ( temp bool)
0:12              'bool' ( temp 2-element array of bool)
0:12              Constant:
0:12                1 (const int)
0:13      Sequence
0:13        move second child to first child ( temp uint)
0:13          'uint' ( temp uint)
0:13          Convert float to uint ( temp uint)
0:13            add ( temp float)
0:13              'float' ( temp float)
0:13              Convert int to float ( temp float)
0:13                'int' ( temp int)
0:14      Sequence
0:14        move second child to first child ( temp mediump float)
0:14          'min16float' ( temp mediump float)
0:14          Convert uint to float ( temp mediump float)
0:14            'uint' ( temp mediump uint)
0:15      Sequence
0:15        move second child to first child ( temp mediump float)
0:15          'min10float' ( temp mediump float)
0:15          'min16float' ( temp mediump float)
0:16      Sequence
0:16        move second child to first child ( temp float)
0:16          'half' ( temp float)
0:16          Constant:
0:16            0.500000
0:?       Sequence
0:20        move second child to first child ( temp float)
0:20          float: direct index for structure ( temp float)
0:20            'float' ( temp structure{ temp float float})
0:20            Constant:
0:20              0 (const int)
0:20          Constant:
0:20            42.000000
0:23      move second child to first child ( temp bool)
0:23        direct index ( temp bool)
0:23          'bool' ( temp 2-element array of bool)
0:23          Constant:
0:23            0 (const int)
0:23        direct index ( temp bool)
0:23          'bool' ( temp 2-element array of bool)
0:23          Constant:
0:23            1 (const int)
0:25      move second child to first child ( temp mediump float)
0:25        'float' ( temp mediump float)
0:25        add ( temp mediump float)
0:25          add ( temp mediump float)
0:25            add ( temp mediump float)
0:25              add ( temp mediump float)
0:25                add ( temp mediump float)
0:25                  add ( temp mediump float)
0:25                    'float' ( temp mediump float)
0:25                    Convert int to float ( temp mediump float)
0:25                      'int' ( temp mediump int)
0:25                  Convert uint to float ( temp mediump float)
0:25                    'uint' ( temp mediump uint)
0:25                'min16float' ( temp mediump float)
0:25              'min10float' ( temp mediump float)
0:25            Test condition and select ( temp mediump float): no shortcircuit
0:25              Condition
0:25              direct index ( temp bool)
0:25                'bool' ( temp 2-element array of bool)
0:25                Constant:
0:25                  0 (const int)
0:25              true case
0:25              Convert int to float ( temp mediump float)
0:25                'int' ( temp mediump int)
0:25              false case
0:25              'float' ( temp mediump float)
0:25          Function Call: fn(f1; ( temp mediump float)
0:25            'float' ( temp mediump float)
0:28      move second child to first child ( temp float)
0:28        direct index ( temp float)
0:28          direct index ( temp 3-component vector of float)
0:28            'half2x3' ( temp 2X3 matrix of float)
0:28            Constant:
0:28              0 (const int)
0:28          Constant:
0:28            0 (const int)
0:28        component-wise multiply ( temp float)
0:28          'float' ( temp float)
0:28          'float' ( temp float)
0:30      Branch: Return with expression
0:30        Construct vec4 ( temp 4-component vector of float)
0:30          add ( temp float)
0:30            'float' ( temp float)
0:30            direct index ( temp float)
0:30              direct index ( temp 3-component vector of float)
0:30                'half2x3' ( temp 2X3 matrix of float)
0:30                Constant:
0:30                  0 (const int)
0:30              Constant:
0:30                0 (const int)
0:9  Function Definition: main( ( temp void)
0:9    Function Parameters: 
0:?     Sequence
0:9      move second child to first child ( temp 4-component vector of float)
0:?         '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:9        Function Call: @main( ( temp 4-component vector of float)
0:?   Linker Objects
0:?     '@entryPointOutput' (layout( location=0) out 4-component vector of float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 105

                              Capability Shader
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 54_1  "main" 59_1
                              ExecutionMode 54_1 OriginUpperLeft
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 54_2  "fn(f1;"
                              Name 55_1  "float"
                              Name 54_3  "@main("
                              Name 59_2  "float"
                              Name 59_3  "bool"
                              Name 59_4  "int"
                              Name 59_5  "uint"
                              Name 59_6  "min16float"
                              Name 59_7  "min10float"
                              Name 59_8  "half"
                              Name 30_1  "foo_t"
                              MemberName 30_1(foo_t) 0  "float"
                              Name 59_9  "float"
                              Name 59_10  "param"
                              Name 59_11  "half2x3"
                              Name 59_1  "@entryPointOutput"
                              Decorate 59_6(min16float) RelaxedPrecision
                              Decorate 61_7 RelaxedPrecision
                              Decorate 112_1 RelaxedPrecision
                              Decorate 59_7(min10float) RelaxedPrecision
                              Decorate 61_8 RelaxedPrecision
                              Decorate 61_10 RelaxedPrecision
                              Decorate 61_11 RelaxedPrecision
                              Decorate 111_2 RelaxedPrecision
                              Decorate 129_2 RelaxedPrecision
                              Decorate 61_12 RelaxedPrecision
                              Decorate 112_2 RelaxedPrecision
                              Decorate 129_3 RelaxedPrecision
                              Decorate 61_13 RelaxedPrecision
                              Decorate 129_4 RelaxedPrecision
                              Decorate 61_14 RelaxedPrecision
                              Decorate 129_5 RelaxedPrecision
                              Decorate 61_16 RelaxedPrecision
                              Decorate 111_3 RelaxedPrecision
                              Decorate 61_17 RelaxedPrecision
                              Decorate 129_6 RelaxedPrecision
                              Decorate 61_18 RelaxedPrecision
                              Decorate 57_2 RelaxedPrecision
                              Decorate 129_7 RelaxedPrecision
                              Decorate 59_1(@entryPointOutput) Location 0
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            32_1:             TypePointer Function 22_1(float)
            33_2:             TypeFunction 22_1(float) 32_1(ptr)
            23_1:             TypeVector 22_1(float) 4
            33_3:             TypeFunction 23_1(fvec4)
            43_1: 22_1(float) Constant 1088421888
            20_1:             TypeBool
            21_1:             TypeInt 32 0
         uint(2):   21_1(int) Constant 2
            28_1:             TypeArray 20_1(bool) uint(2)
            32_2:             TypePointer Function 28_1
            43_2: 22_1(float) Constant 0
            21_2:             TypeInt 32 1
            32_3:             TypePointer Function 21_2(int)
            43_3:   21_2(int) Constant 1
            32_4:             TypePointer Function 20_1(bool)
            43_4:   21_2(int) Constant 0
            32_5:             TypePointer Function 21_1(int)
            43_5: 22_1(float) Constant 1056964608
     30_1(foo_t):             TypeStruct 22_1(float)
            32_6:             TypePointer Function 30_1(foo_t)
            43_6: 22_1(float) Constant 1109917696
            23_2:             TypeVector 22_1(float) 3
            24_1:             TypeMatrix 23_2(fvec3) 2
            32_7:             TypePointer Function 24_1
         uint(0):   21_1(int) Constant 0
            32_8:             TypePointer Output 23_1(fvec4)
59_1(@entryPointOutput):   32_8(ptr) Variable Output
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
            57_1: 23_1(fvec4) FunctionCall 54_3(@main()
                              Store 59_1(@entryPointOutput) 57_1
                              Return
                              FunctionEnd
    54_2(fn(f1;): 22_1(float) Function None 33_2
     55_1(float):   32_1(ptr) FunctionParameter
           248_2:             Label
            61_1: 22_1(float) Load 55_1(float)
                              ReturnValue 61_1
                              FunctionEnd
    54_3(@main(): 23_1(fvec4) Function None 33_3
           248_3:             Label
     59_2(float):   32_1(ptr) Variable Function
      59_3(bool):   32_2(ptr) Variable Function
       59_4(int):   32_3(ptr) Variable Function
      59_5(uint):   32_5(ptr) Variable Function
59_6(min16float):   32_1(ptr) Variable Function
59_7(min10float):   32_1(ptr) Variable Function
      59_8(half):   32_1(ptr) Variable Function
     59_9(float):   32_6(ptr) Variable Function
    59_10(param):   32_1(ptr) Variable Function
  59_11(half2x3):   32_7(ptr) Variable Function
                              Store 59_2(float) 43_1
            61_2: 22_1(float) Load 59_2(float)
           183_1:  20_1(bool) FUnordNotEqual 61_2 43_2
            61_3: 22_1(float) Load 59_2(float)
           183_2:  20_1(bool) FUnordNotEqual 61_3 43_2
            80_1:        28_1 CompositeConstruct 183_1 183_2
                              Store 59_3(bool) 80_1
            65_1:   32_4(ptr) AccessChain 59_3(bool) 43_3
            61_4:  20_1(bool) Load 65_1
           169_1:   21_2(int) Select 61_4 43_3 43_4
                              Store 59_4(int) 169_1
            61_5: 22_1(float) Load 59_2(float)
            61_6:   21_2(int) Load 59_4(int)
           111_1: 22_1(float) ConvertSToF 61_6
           129_1: 22_1(float) FAdd 61_5 111_1
           109_1:   21_1(int) ConvertFToU 129_1
                              Store 59_5(uint) 109_1
            61_7:   21_1(int) Load 59_5(uint)
           112_1: 22_1(float) ConvertUToF 61_7
                              Store 59_6(min16float) 112_1
            61_8: 22_1(float) Load 59_6(min16float)
                              Store 59_7(min10float) 61_8
                              Store 59_8(half) 43_5
            65_2:   32_1(ptr) AccessChain 59_9(float) 43_4
                              Store 65_2 43_6
            65_3:   32_4(ptr) AccessChain 59_3(bool) 43_3
            61_9:  20_1(bool) Load 65_3
            65_4:   32_4(ptr) AccessChain 59_3(bool) 43_4
                              Store 65_4 61_9
           61_10: 22_1(float) Load 59_2(float)
           61_11:   21_2(int) Load 59_4(int)
           111_2: 22_1(float) ConvertSToF 61_11
           129_2: 22_1(float) FAdd 61_10 111_2
           61_12:   21_1(int) Load 59_5(uint)
           112_2: 22_1(float) ConvertUToF 61_12
           129_3: 22_1(float) FAdd 129_2 112_2
           61_13: 22_1(float) Load 59_6(min16float)
           129_4: 22_1(float) FAdd 129_3 61_13
           61_14: 22_1(float) Load 59_7(min10float)
           129_5: 22_1(float) FAdd 129_4 61_14
            65_5:   32_4(ptr) AccessChain 59_3(bool) 43_4
           61_15:  20_1(bool) Load 65_5
           61_16:   21_2(int) Load 59_4(int)
           111_3: 22_1(float) ConvertSToF 61_16
           61_17: 22_1(float) Load 59_2(float)
           169_2: 22_1(float) Select 61_15 111_3 61_17
           129_6: 22_1(float) FAdd 129_5 169_2
           61_18: 22_1(float) Load 59_2(float)
                              Store 59_10(param) 61_18
            57_2: 22_1(float) FunctionCall 54_2(fn(f1;) 59_10(param)
           129_7: 22_1(float) FAdd 129_6 57_2
                              Store 59_2(float) 129_7
           61_19: 22_1(float) Load 59_2(float)
           61_20: 22_1(float) Load 59_2(float)
           133_1: 22_1(float) FMul 61_19 61_20
            65_6:   32_1(ptr) AccessChain 59_11(half2x3) 43_4 uint(0)
                              Store 65_6 133_1
           61_21: 22_1(float) Load 59_2(float)
            65_7:   32_1(ptr) AccessChain 59_11(half2x3) 43_4 uint(0)
           61_22: 22_1(float) Load 65_7
           129_8: 22_1(float) FAdd 61_21 61_22
            80_2: 23_1(fvec4) CompositeConstruct 129_8 129_8 129_8 129_8
                              ReturnValue 80_2
                              FunctionEnd
