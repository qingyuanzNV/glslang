hlsl.partialFlattenLocal.vert
WARNING: AST will form illegal SPIR-V; need to transform to legalize
Shader version: 500
0:? Sequence
0:12  Function Definition: @main(vf4; ( temp 4-component vector of float)
0:12    Function Parameters: 
0:12      'pos' ( in 4-component vector of float)
0:?     Sequence
0:14      move second child to first child ( temp texture2D)
0:14        tex: direct index for structure ( temp texture2D)
0:14          'packed' ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:14          Constant:
0:14            0 (const int)
0:14        'tex' ( uniform texture2D)
0:15      move second child to first child ( temp 3-component vector of float)
0:15        direct index ( temp 3-component vector of float)
0:15          pos: direct index for structure ( temp 3-element array of 3-component vector of float)
0:15            'packed' ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:15            Constant:
0:15              1 (const int)
0:15          Constant:
0:15            0 (const int)
0:15        Constant:
0:15          0.000000
0:15          0.000000
0:15          0.000000
0:16      move second child to first child ( temp 2-component vector of float)
0:16        direct index ( temp 2-component vector of float)
0:16          uv: direct index for structure ( temp 2-element array of 2-component vector of float)
0:16            'packed' ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:16            Constant:
0:16              2 (const int)
0:16          Constant:
0:16            0 (const int)
0:16        Constant:
0:16          0.000000
0:16          1.000000
0:17      move second child to first child ( temp float)
0:17        x: direct index for structure ( temp float)
0:17          'packed' ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:17          Constant:
0:17            3 (const int)
0:17        Constant:
0:17          1.000000
0:18      move second child to first child ( temp int)
0:18        n: direct index for structure ( temp int)
0:18          'packed' ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:18          Constant:
0:18            4 (const int)
0:18        Constant:
0:18          3 (const int)
0:20      Sequence
0:20        move second child to first child ( temp int)
0:20          'i' ( temp int)
0:20          Constant:
0:20            0 (const int)
0:20        Loop with condition tested first
0:20          Loop Condition
0:20          Compare Less Than ( temp bool)
0:20            'i' ( temp int)
0:20            Constant:
0:20              1 (const int)
0:20          Loop Body
0:?           Sequence
0:21            add second child into first child ( temp 2-component vector of float)
0:21              vector swizzle ( temp 2-component vector of float)
0:21                indirect index ( temp 3-component vector of float)
0:21                  pos: direct index for structure ( temp 3-element array of 3-component vector of float)
0:21                    'packed' ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:21                    Constant:
0:21                      1 (const int)
0:21                  'i' ( temp int)
0:21                Sequence
0:21                  Constant:
0:21                    0 (const int)
0:21                  Constant:
0:21                    1 (const int)
0:21              indirect index ( temp 2-component vector of float)
0:21                uv: direct index for structure ( temp 2-element array of 2-component vector of float)
0:21                  'packed' ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:21                  Constant:
0:21                    2 (const int)
0:21                'i' ( temp int)
0:20          Loop Terminal Expression
0:20          Pre-Increment ( temp int)
0:20            'i' ( temp int)
0:24      Sequence
0:24        move second child to first child ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:24          'packed2' ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:24          'packed' ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:26      Branch: Return with expression
0:26        add ( temp 4-component vector of float)
0:26          'pos' ( in 4-component vector of float)
0:26          Construct vec4 ( temp 4-component vector of float)
0:26            direct index ( temp 3-component vector of float)
0:26              pos: direct index for structure ( temp 3-element array of 3-component vector of float)
0:26                'packed2' ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:26                Constant:
0:26                  1 (const int)
0:26              Constant:
0:26                0 (const int)
0:26            Constant:
0:26              0.000000
0:12  Function Definition: main( ( temp void)
0:12    Function Parameters: 
0:?     Sequence
0:12      move second child to first child ( temp 4-component vector of float)
0:?         'pos' ( temp 4-component vector of float)
0:?         'pos' (layout( location=0) in 4-component vector of float)
0:12      move second child to first child ( temp 4-component vector of float)
0:?         '@entryPointOutput' ( out 4-component vector of float Position)
0:12        Function Call: @main(vf4; ( temp 4-component vector of float)
0:?           'pos' ( temp 4-component vector of float)
0:?   Linker Objects
0:?     'tex' ( uniform texture2D)
0:?     '@entryPointOutput' ( out 4-component vector of float Position)
0:?     'pos' (layout( location=0) in 4-component vector of float)


Linked vertex stage:


Shader version: 500
0:? Sequence
0:12  Function Definition: @main(vf4; ( temp 4-component vector of float)
0:12    Function Parameters: 
0:12      'pos' ( in 4-component vector of float)
0:?     Sequence
0:14      move second child to first child ( temp texture2D)
0:14        tex: direct index for structure ( temp texture2D)
0:14          'packed' ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:14          Constant:
0:14            0 (const int)
0:14        'tex' ( uniform texture2D)
0:15      move second child to first child ( temp 3-component vector of float)
0:15        direct index ( temp 3-component vector of float)
0:15          pos: direct index for structure ( temp 3-element array of 3-component vector of float)
0:15            'packed' ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:15            Constant:
0:15              1 (const int)
0:15          Constant:
0:15            0 (const int)
0:15        Constant:
0:15          0.000000
0:15          0.000000
0:15          0.000000
0:16      move second child to first child ( temp 2-component vector of float)
0:16        direct index ( temp 2-component vector of float)
0:16          uv: direct index for structure ( temp 2-element array of 2-component vector of float)
0:16            'packed' ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:16            Constant:
0:16              2 (const int)
0:16          Constant:
0:16            0 (const int)
0:16        Constant:
0:16          0.000000
0:16          1.000000
0:17      move second child to first child ( temp float)
0:17        x: direct index for structure ( temp float)
0:17          'packed' ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:17          Constant:
0:17            3 (const int)
0:17        Constant:
0:17          1.000000
0:18      move second child to first child ( temp int)
0:18        n: direct index for structure ( temp int)
0:18          'packed' ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:18          Constant:
0:18            4 (const int)
0:18        Constant:
0:18          3 (const int)
0:20      Sequence
0:20        move second child to first child ( temp int)
0:20          'i' ( temp int)
0:20          Constant:
0:20            0 (const int)
0:20        Loop with condition tested first
0:20          Loop Condition
0:20          Compare Less Than ( temp bool)
0:20            'i' ( temp int)
0:20            Constant:
0:20              1 (const int)
0:20          Loop Body
0:?           Sequence
0:21            add second child into first child ( temp 2-component vector of float)
0:21              vector swizzle ( temp 2-component vector of float)
0:21                indirect index ( temp 3-component vector of float)
0:21                  pos: direct index for structure ( temp 3-element array of 3-component vector of float)
0:21                    'packed' ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:21                    Constant:
0:21                      1 (const int)
0:21                  'i' ( temp int)
0:21                Sequence
0:21                  Constant:
0:21                    0 (const int)
0:21                  Constant:
0:21                    1 (const int)
0:21              indirect index ( temp 2-component vector of float)
0:21                uv: direct index for structure ( temp 2-element array of 2-component vector of float)
0:21                  'packed' ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:21                  Constant:
0:21                    2 (const int)
0:21                'i' ( temp int)
0:20          Loop Terminal Expression
0:20          Pre-Increment ( temp int)
0:20            'i' ( temp int)
0:24      Sequence
0:24        move second child to first child ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:24          'packed2' ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:24          'packed' ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:26      Branch: Return with expression
0:26        add ( temp 4-component vector of float)
0:26          'pos' ( in 4-component vector of float)
0:26          Construct vec4 ( temp 4-component vector of float)
0:26            direct index ( temp 3-component vector of float)
0:26              pos: direct index for structure ( temp 3-element array of 3-component vector of float)
0:26                'packed2' ( temp structure{ temp texture2D tex,  temp 3-element array of 3-component vector of float pos,  temp 2-element array of 2-component vector of float uv,  temp float x,  temp int n})
0:26                Constant:
0:26                  1 (const int)
0:26              Constant:
0:26                0 (const int)
0:26            Constant:
0:26              0.000000
0:12  Function Definition: main( ( temp void)
0:12    Function Parameters: 
0:?     Sequence
0:12      move second child to first child ( temp 4-component vector of float)
0:?         'pos' ( temp 4-component vector of float)
0:?         'pos' (layout( location=0) in 4-component vector of float)
0:12      move second child to first child ( temp 4-component vector of float)
0:?         '@entryPointOutput' ( out 4-component vector of float Position)
0:12        Function Call: @main(vf4; ( temp 4-component vector of float)
0:?           'pos' ( temp 4-component vector of float)
0:?   Linker Objects
0:?     'tex' ( uniform texture2D)
0:?     '@entryPointOutput' ( out 4-component vector of float Position)
0:?     'pos' (layout( location=0) in 4-component vector of float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 93

                              Capability Shader
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Vertex 54_1  "main" 59_2 59_3
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 54_2  "@main(vf4;"
                              Name 55_1  "pos"
                              Name 30_1  "Packed"
                              MemberName 30_1(Packed) 0  "tex"
                              MemberName 30_1(Packed) 1  "pos"
                              MemberName 30_1(Packed) 2  "uv"
                              MemberName 30_1(Packed) 3  "x"
                              MemberName 30_1(Packed) 4  "n"
                              Name 59_6  "packed"
                              Name 59_1  "tex"
                              Name 59_7  "i"
                              Name 59_8  "packed2"
                              Name 59_4  "pos"
                              Name 59_2  "pos"
                              Name 59_3  "@entryPointOutput"
                              Name 59_5  "param"
                              Decorate 59_1(tex) Binding 0
                              Decorate 59_1(tex) DescriptorSet 0
                              Decorate 59_2(pos) Location 0
                              Decorate 59_3(@entryPointOutput) BuiltIn Position
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
            32_1:             TypePointer Function 23_1(fvec4)
            33_2:             TypeFunction 23_1(fvec4) 32_1(ptr)
            25_1:             TypeImage 22_1(float) 2D sampled format:Unknown
            23_2:             TypeVector 22_1(float) 3
            21_1:             TypeInt 32 0
         uint(3):   21_1(int) Constant 3
            28_1:             TypeArray 23_2(fvec3) uint(3)
            23_3:             TypeVector 22_1(float) 2
         uint(2):   21_1(int) Constant 2
            28_2:             TypeArray 23_3(fvec2) uint(2)
            21_2:             TypeInt 32 1
    30_1(Packed):             TypeStruct 25_1 28_1 28_2 22_1(float) 21_2(int)
            32_2:             TypePointer Function 30_1(Packed)
            43_1:   21_2(int) Constant 0
            32_3:             TypePointer UniformConstant 25_1
       59_1(tex):   32_3(ptr) Variable UniformConstant
            32_4:             TypePointer Function 25_1
            43_2:   21_2(int) Constant 1
            43_3: 22_1(float) Constant 0
            44_1: 23_2(fvec3) ConstantComposite 43_3 43_3 43_3
            32_5:             TypePointer Function 23_2(fvec3)
            43_4:   21_2(int) Constant 2
            43_5: 22_1(float) Constant 1065353216
            44_2: 23_3(fvec2) ConstantComposite 43_3 43_5
            32_6:             TypePointer Function 23_3(fvec2)
            43_6:   21_2(int) Constant 3
            32_7:             TypePointer Function 22_1(float)
            43_7:   21_2(int) Constant 4
            32_8:             TypePointer Function 21_2(int)
            20_1:             TypeBool
         uint(0):   21_1(int) Constant 0
         uint(1):   21_1(int) Constant 1
            32_9:             TypePointer Input 23_1(fvec4)
       59_2(pos):   32_9(ptr) Variable Input
           32_10:             TypePointer Output 23_1(fvec4)
59_3(@entryPointOutput):  32_10(ptr) Variable Output
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
       59_4(pos):   32_1(ptr) Variable Function
     59_5(param):   32_1(ptr) Variable Function
            61_1: 23_1(fvec4) Load 59_2(pos)
                              Store 59_4(pos) 61_1
            61_2: 23_1(fvec4) Load 59_4(pos)
                              Store 59_5(param) 61_2
            57_1: 23_1(fvec4) FunctionCall 54_2(@main(vf4;) 59_5(param)
                              Store 59_3(@entryPointOutput) 57_1
                              Return
                              FunctionEnd
54_2(@main(vf4;): 23_1(fvec4) Function None 33_2
       55_1(pos):   32_1(ptr) FunctionParameter
           248_2:             Label
    59_6(packed):   32_2(ptr) Variable Function
         59_7(i):   32_8(ptr) Variable Function
   59_8(packed2):   32_2(ptr) Variable Function
            61_3:        25_1 Load 59_1(tex)
            65_1:   32_4(ptr) AccessChain 59_6(packed) 43_1
                              Store 65_1 61_3
            65_2:   32_5(ptr) AccessChain 59_6(packed) 43_2 43_1
                              Store 65_2 44_1
            65_3:   32_6(ptr) AccessChain 59_6(packed) 43_4 43_1
                              Store 65_3 44_2
            65_4:   32_7(ptr) AccessChain 59_6(packed) 43_6
                              Store 65_4 43_5
            65_5:   32_8(ptr) AccessChain 59_6(packed) 43_7
                              Store 65_5 43_6
                              Store 59_7(i) 43_1
                              Branch 248_3
           248_3:             Label
                              LoopMerge 248_7 248_6 None
                              Branch 248_4
           248_4:             Label
            61_4:   21_2(int) Load 59_7(i)
           177_1:  20_1(bool) SLessThan 61_4 43_2
                              BranchConditional 177_1 248_5 248_7
           248_5:               Label
            61_5:   21_2(int)   Load 59_7(i)
            61_6:   21_2(int)   Load 59_7(i)
            65_6:   32_6(ptr)   AccessChain 59_6(packed) 43_4 61_6
            61_7: 23_3(fvec2)   Load 65_6
            65_7:   32_5(ptr)   AccessChain 59_6(packed) 43_2 61_5
            61_8: 23_2(fvec3)   Load 65_7
            79_1: 23_3(fvec2)   VectorShuffle 61_8 61_8 0 1
           129_1: 23_3(fvec2)   FAdd 79_1 61_7
            65_8:   32_7(ptr)   AccessChain 59_6(packed) 43_2 61_5 uint(0)
            81_1: 22_1(float)   CompositeExtract 129_1 0
                                Store 65_8 81_1
            65_9:   32_7(ptr)   AccessChain 59_6(packed) 43_2 61_5 uint(1)
            81_2: 22_1(float)   CompositeExtract 129_1 1
                                Store 65_9 81_2
                                Branch 248_6
           248_6:               Label
            61_9:   21_2(int)   Load 59_7(i)
           128_1:   21_2(int)   IAdd 61_9 43_2
                                Store 59_7(i) 128_1
                                Branch 248_3
           248_7:             Label
           61_10:30_1(Packed) Load 59_6(packed)
                              Store 59_8(packed2) 61_10
           61_11: 23_1(fvec4) Load 55_1(pos)
           65_10:   32_5(ptr) AccessChain 59_8(packed2) 43_2 43_1
           61_12: 23_2(fvec3) Load 65_10
            81_3: 22_1(float) CompositeExtract 61_12 0
            81_4: 22_1(float) CompositeExtract 61_12 1
            81_5: 22_1(float) CompositeExtract 61_12 2
            80_1: 23_1(fvec4) CompositeConstruct 81_3 81_4 81_5 43_3
           129_2: 23_1(fvec4) FAdd 61_11 80_1
                              ReturnValue 129_2
                              FunctionEnd
