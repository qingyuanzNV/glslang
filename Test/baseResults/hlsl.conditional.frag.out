hlsl.conditional.frag
Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:8  Function Definition: vectorCond( ( temp 4-component vector of float)
0:8    Function Parameters: 
0:?     Sequence
0:12      Branch: Return with expression
0:11        add ( temp 4-component vector of float)
0:10          add ( temp 4-component vector of float)
0:9            add ( temp 4-component vector of float)
0:9              mix ( temp 4-component vector of float)
0:9                f4: direct index for structure ( uniform 4-component vector of float)
0:9                  'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:9                  Constant:
0:9                    2 (const uint)
0:9                t4: direct index for structure ( uniform 4-component vector of float)
0:9                  'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:9                  Constant:
0:9                    1 (const uint)
0:9                Convert float to bool ( temp 4-component vector of bool)
0:9                  c4: direct index for structure ( uniform 4-component vector of float)
0:9                    'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:9                    Constant:
0:9                      0 (const uint)
0:10              mix ( temp 4-component vector of float)
0:10                Construct vec4 ( temp 4-component vector of float)
0:10                  f: direct index for structure ( uniform float)
0:10                    'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:10                    Constant:
0:10                      4 (const uint)
0:10                Construct vec4 ( temp 4-component vector of float)
0:10                  t: direct index for structure ( uniform float)
0:10                    'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:10                    Constant:
0:10                      3 (const uint)
0:10                Convert float to bool ( temp 4-component vector of bool)
0:10                  c4: direct index for structure ( uniform 4-component vector of float)
0:10                    'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:10                    Constant:
0:10                      0 (const uint)
0:11            mix ( temp 4-component vector of float)
0:11              f4: direct index for structure ( uniform 4-component vector of float)
0:11                'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:11                Constant:
0:11                  2 (const uint)
0:11              t4: direct index for structure ( uniform 4-component vector of float)
0:11                'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:11                Constant:
0:11                  1 (const uint)
0:11              Compare Less Than ( temp 4-component vector of bool)
0:11                t4: direct index for structure ( uniform 4-component vector of float)
0:11                  'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:11                  Constant:
0:11                    1 (const uint)
0:11                f4: direct index for structure ( uniform 4-component vector of float)
0:11                  'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:11                  Constant:
0:11                    2 (const uint)
0:12          mix ( temp 4-component vector of float)
0:12            f4: direct index for structure ( uniform 4-component vector of float)
0:12              'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:12              Constant:
0:12                2 (const uint)
0:12            Construct vec4 ( temp 4-component vector of float)
0:12              t: direct index for structure ( uniform float)
0:12                'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:12                Constant:
0:12                  3 (const uint)
0:12            Convert float to bool ( temp 4-component vector of bool)
0:12              c4: direct index for structure ( uniform 4-component vector of float)
0:12                'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:12                Constant:
0:12                  0 (const uint)
0:16  Function Definition: scalarCond( ( temp 4-component vector of float)
0:16    Function Parameters: 
0:?     Sequence
0:17      Sequence
0:17        move second child to first child ( temp 4-component vector of float)
0:17          'ret' ( temp 4-component vector of float)
0:17          Test condition and select ( temp 4-component vector of float): no shortcircuit
0:17            Condition
0:17            Compare Not Equal ( temp bool)
0:17              t: direct index for structure ( uniform float)
0:17                'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:17                Constant:
0:17                  3 (const uint)
0:17              f: direct index for structure ( uniform float)
0:17                'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:17                Constant:
0:17                  4 (const uint)
0:17            true case
0:17            vector-scale ( temp 4-component vector of float)
0:17              t: direct index for structure ( uniform float)
0:17                'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:17                Constant:
0:17                  3 (const uint)
0:17              f4: direct index for structure ( uniform 4-component vector of float)
0:17                'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:17                Constant:
0:17                  2 (const uint)
0:17            false case
0:17            Constant:
0:17              1.000000
0:17              1.000000
0:17              1.000000
0:17              1.000000
0:18      Branch: Return with expression
0:18        'ret' ( temp 4-component vector of float)
0:22  Function Definition: fbSelect(vb2;vf2;vf2; ( temp 2-component vector of float)
0:22    Function Parameters: 
0:22      'cnd' ( in 2-component vector of bool)
0:22      'src0' ( in 2-component vector of float)
0:22      'src1' ( in 2-component vector of float)
0:?     Sequence
0:23      Branch: Return with expression
0:23        mix ( temp 2-component vector of float)
0:23          'src1' ( in 2-component vector of float)
0:23          'src0' ( in 2-component vector of float)
0:23          'cnd' ( in 2-component vector of bool)
0:27  Function Definition: @PixelShaderFunction(vf4; ( temp 4-component vector of float)
0:27    Function Parameters: 
0:27      'input' ( in 4-component vector of float)
0:?     Sequence
0:28      Sequence
0:28        move second child to first child ( temp int)
0:28          'a' ( temp int)
0:28          Constant:
0:28            5 (const int)
0:29      Sequence
0:29        move second child to first child ( temp int)
0:29          'b' ( temp int)
0:29          Constant:
0:29            6 (const int)
0:30      Sequence
0:30        move second child to first child ( temp int)
0:30          'c' ( temp int)
0:30          Constant:
0:30            7 (const int)
0:31      Sequence
0:31        move second child to first child ( temp int)
0:31          'd' ( temp int)
0:31          Constant:
0:31            7 (const int)
0:32      Sequence
0:32        move second child to first child ( temp 4-component vector of float)
0:32          'ret' ( temp 4-component vector of float)
0:34          add ( temp 4-component vector of float)
0:33            add ( temp 4-component vector of float)
0:32              add ( temp 4-component vector of float)
0:32                vector-scale ( temp 4-component vector of float)
0:32                  Convert int to float ( temp float)
0:32                    'a' ( temp int)
0:32                  'input' ( in 4-component vector of float)
0:33                vector-scale ( temp 4-component vector of float)
0:33                  Convert int to float ( temp float)
0:33                    'b' ( temp int)
0:33                  'input' ( in 4-component vector of float)
0:34              vector-scale ( temp 4-component vector of float)
0:34                Convert int to float ( temp float)
0:34                  'c' ( temp int)
0:34                'input' ( in 4-component vector of float)
0:35            vector-scale ( temp 4-component vector of float)
0:35              Convert int to float ( temp float)
0:35                'd' ( temp int)
0:35              'input' ( in 4-component vector of float)
0:37      Comma ( temp int)
0:37        move second child to first child ( temp int)
0:37          'e' ( temp int)
0:37          move second child to first child ( temp int)
0:37            'a' ( temp int)
0:37            Test condition and select ( temp int): no shortcircuit
0:37              Condition
0:37              Convert int to bool ( temp bool)
0:37                'b' ( temp int)
0:37              true case
0:37              move second child to first child ( temp int)
0:37                'c' ( temp int)
0:37                'd' ( temp int)
0:37              false case
0:37              Constant:
0:37                10 (const int)
0:37        move second child to first child ( temp int)
0:37          'b' ( temp int)
0:37          Test condition and select ( temp int): no shortcircuit
0:37            Condition
0:37            Convert int to bool ( temp bool)
0:37              'a' ( temp int)
0:37            true case
0:37            move second child to first child ( temp int)
0:37              'd' ( temp int)
0:37              'c' ( temp int)
0:37            false case
0:37            Constant:
0:37              11 (const int)
0:39      move second child to first child ( temp 4-component vector of float)
0:39        'f' ( temp 4-component vector of float)
0:39        Test condition and select ( temp 4-component vector of float): no shortcircuit
0:39          Condition
0:39          Compare Less Than ( temp bool)
0:39            direct index ( temp float)
0:39              'ret' ( temp 4-component vector of float)
0:39              Constant:
0:39                0 (const int)
0:39            direct index ( temp float)
0:39              'input' ( in 4-component vector of float)
0:39              Constant:
0:39                1 (const int)
0:39          true case
0:39          vector-scale ( temp 4-component vector of float)
0:39            Convert int to float ( temp float)
0:39              'c' ( temp int)
0:39            'input' ( in 4-component vector of float)
0:39          false case
0:39          vector-scale ( temp 4-component vector of float)
0:39            Convert int to float ( temp float)
0:39              'd' ( temp int)
0:39            'input' ( in 4-component vector of float)
0:40      Sequence
0:40        move second child to first child ( temp uint)
0:40          'g' ( temp uint)
0:40          Test condition and select ( temp uint): no shortcircuit
0:40            Condition
0:40            Compare Greater Than ( temp bool)
0:40              Convert int to float ( temp float)
0:40                'd' ( temp int)
0:40              Constant:
0:40                0.000000
0:40            true case
0:40            Constant:
0:40              21 (const uint)
0:40            false case
0:40            Constant:
0:40              0 (const uint)
0:41      Sequence
0:41        move second child to first child ( temp uint)
0:41          'h' ( temp uint)
0:41          Test condition and select ( temp uint): no shortcircuit
0:41            Condition
0:41            Compare Greater Than ( temp bool)
0:41              Convert uint to float ( temp float)
0:41                'g' ( temp uint)
0:41              Constant:
0:41                0.000000
0:41            true case
0:41            Constant:
0:41              63 (const uint)
0:41            false case
0:41            Constant:
0:41              0 (const uint)
0:42      Sequence
0:42        move second child to first child ( temp uint)
0:42          'i' ( temp uint)
0:42          Test condition and select ( temp uint): no shortcircuit
0:42            Condition
0:42            Compare Greater Than ( temp bool)
0:42              Convert uint to float ( temp float)
0:42                'h' ( temp uint)
0:42              Constant:
0:42                0.000000
0:42            true case
0:42            Constant:
0:42              5 (const uint)
0:42            false case
0:42            Constant:
0:42              1 (const uint)
0:43      Sequence
0:43        move second child to first child ( temp uint)
0:43          'j' ( temp uint)
0:43          Convert int to uint ( temp uint)
0:43            Test condition and select ( temp int): no shortcircuit
0:43              Condition
0:43              Compare Greater Than ( temp bool)
0:43                Convert uint to float ( temp float)
0:43                  'i' ( temp uint)
0:43                Constant:
0:43                  0.000000
0:43              true case
0:43              Constant:
0:43                43981 (const int)
0:43              false case
0:43              Constant:
0:43                48346 (const int)
0:45      Branch: Return with expression
0:44        add ( temp 4-component vector of float)
0:44          add ( temp 4-component vector of float)
0:44            add ( temp 4-component vector of float)
0:44              add ( temp 4-component vector of float)
0:44                vector-scale ( temp 4-component vector of float)
0:44                  Convert int to float ( temp float)
0:44                    'e' ( temp int)
0:44                  'ret' ( temp 4-component vector of float)
0:44                'f' ( temp 4-component vector of float)
0:44              Function Call: vectorCond( ( temp 4-component vector of float)
0:44            Function Call: scalarCond( ( temp 4-component vector of float)
0:45          Construct vec4 ( temp 4-component vector of float)
0:45            Function Call: fbSelect(vb2;vf2;vf2; ( temp 2-component vector of float)
0:45              Constant:
0:45                true (const bool)
0:45                false (const bool)
0:45              Constant:
0:45                1.000000
0:45                2.000000
0:45              Constant:
0:45                3.000000
0:45                4.000000
0:45            Constant:
0:45              10.000000
0:45            Constant:
0:45              10.000000
0:27  Function Definition: PixelShaderFunction( ( temp void)
0:27    Function Parameters: 
0:?     Sequence
0:27      move second child to first child ( temp 4-component vector of float)
0:?         'input' ( temp 4-component vector of float)
0:?         'input' (layout( location=0) in 4-component vector of float)
0:27      move second child to first child ( temp 4-component vector of float)
0:?         '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:27        Function Call: @PixelShaderFunction(vf4; ( temp 4-component vector of float)
0:?           'input' ( temp 4-component vector of float)
0:?   Linker Objects
0:?     'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:?     '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:?     'input' (layout( location=0) in 4-component vector of float)


Linked fragment stage:


Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:8  Function Definition: vectorCond( ( temp 4-component vector of float)
0:8    Function Parameters: 
0:?     Sequence
0:12      Branch: Return with expression
0:11        add ( temp 4-component vector of float)
0:10          add ( temp 4-component vector of float)
0:9            add ( temp 4-component vector of float)
0:9              mix ( temp 4-component vector of float)
0:9                f4: direct index for structure ( uniform 4-component vector of float)
0:9                  'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:9                  Constant:
0:9                    2 (const uint)
0:9                t4: direct index for structure ( uniform 4-component vector of float)
0:9                  'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:9                  Constant:
0:9                    1 (const uint)
0:9                Convert float to bool ( temp 4-component vector of bool)
0:9                  c4: direct index for structure ( uniform 4-component vector of float)
0:9                    'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:9                    Constant:
0:9                      0 (const uint)
0:10              mix ( temp 4-component vector of float)
0:10                Construct vec4 ( temp 4-component vector of float)
0:10                  f: direct index for structure ( uniform float)
0:10                    'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:10                    Constant:
0:10                      4 (const uint)
0:10                Construct vec4 ( temp 4-component vector of float)
0:10                  t: direct index for structure ( uniform float)
0:10                    'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:10                    Constant:
0:10                      3 (const uint)
0:10                Convert float to bool ( temp 4-component vector of bool)
0:10                  c4: direct index for structure ( uniform 4-component vector of float)
0:10                    'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:10                    Constant:
0:10                      0 (const uint)
0:11            mix ( temp 4-component vector of float)
0:11              f4: direct index for structure ( uniform 4-component vector of float)
0:11                'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:11                Constant:
0:11                  2 (const uint)
0:11              t4: direct index for structure ( uniform 4-component vector of float)
0:11                'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:11                Constant:
0:11                  1 (const uint)
0:11              Compare Less Than ( temp 4-component vector of bool)
0:11                t4: direct index for structure ( uniform 4-component vector of float)
0:11                  'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:11                  Constant:
0:11                    1 (const uint)
0:11                f4: direct index for structure ( uniform 4-component vector of float)
0:11                  'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:11                  Constant:
0:11                    2 (const uint)
0:12          mix ( temp 4-component vector of float)
0:12            f4: direct index for structure ( uniform 4-component vector of float)
0:12              'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:12              Constant:
0:12                2 (const uint)
0:12            Construct vec4 ( temp 4-component vector of float)
0:12              t: direct index for structure ( uniform float)
0:12                'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:12                Constant:
0:12                  3 (const uint)
0:12            Convert float to bool ( temp 4-component vector of bool)
0:12              c4: direct index for structure ( uniform 4-component vector of float)
0:12                'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:12                Constant:
0:12                  0 (const uint)
0:16  Function Definition: scalarCond( ( temp 4-component vector of float)
0:16    Function Parameters: 
0:?     Sequence
0:17      Sequence
0:17        move second child to first child ( temp 4-component vector of float)
0:17          'ret' ( temp 4-component vector of float)
0:17          Test condition and select ( temp 4-component vector of float): no shortcircuit
0:17            Condition
0:17            Compare Not Equal ( temp bool)
0:17              t: direct index for structure ( uniform float)
0:17                'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:17                Constant:
0:17                  3 (const uint)
0:17              f: direct index for structure ( uniform float)
0:17                'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:17                Constant:
0:17                  4 (const uint)
0:17            true case
0:17            vector-scale ( temp 4-component vector of float)
0:17              t: direct index for structure ( uniform float)
0:17                'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:17                Constant:
0:17                  3 (const uint)
0:17              f4: direct index for structure ( uniform 4-component vector of float)
0:17                'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:17                Constant:
0:17                  2 (const uint)
0:17            false case
0:17            Constant:
0:17              1.000000
0:17              1.000000
0:17              1.000000
0:17              1.000000
0:18      Branch: Return with expression
0:18        'ret' ( temp 4-component vector of float)
0:22  Function Definition: fbSelect(vb2;vf2;vf2; ( temp 2-component vector of float)
0:22    Function Parameters: 
0:22      'cnd' ( in 2-component vector of bool)
0:22      'src0' ( in 2-component vector of float)
0:22      'src1' ( in 2-component vector of float)
0:?     Sequence
0:23      Branch: Return with expression
0:23        mix ( temp 2-component vector of float)
0:23          'src1' ( in 2-component vector of float)
0:23          'src0' ( in 2-component vector of float)
0:23          'cnd' ( in 2-component vector of bool)
0:27  Function Definition: @PixelShaderFunction(vf4; ( temp 4-component vector of float)
0:27    Function Parameters: 
0:27      'input' ( in 4-component vector of float)
0:?     Sequence
0:28      Sequence
0:28        move second child to first child ( temp int)
0:28          'a' ( temp int)
0:28          Constant:
0:28            5 (const int)
0:29      Sequence
0:29        move second child to first child ( temp int)
0:29          'b' ( temp int)
0:29          Constant:
0:29            6 (const int)
0:30      Sequence
0:30        move second child to first child ( temp int)
0:30          'c' ( temp int)
0:30          Constant:
0:30            7 (const int)
0:31      Sequence
0:31        move second child to first child ( temp int)
0:31          'd' ( temp int)
0:31          Constant:
0:31            7 (const int)
0:32      Sequence
0:32        move second child to first child ( temp 4-component vector of float)
0:32          'ret' ( temp 4-component vector of float)
0:34          add ( temp 4-component vector of float)
0:33            add ( temp 4-component vector of float)
0:32              add ( temp 4-component vector of float)
0:32                vector-scale ( temp 4-component vector of float)
0:32                  Convert int to float ( temp float)
0:32                    'a' ( temp int)
0:32                  'input' ( in 4-component vector of float)
0:33                vector-scale ( temp 4-component vector of float)
0:33                  Convert int to float ( temp float)
0:33                    'b' ( temp int)
0:33                  'input' ( in 4-component vector of float)
0:34              vector-scale ( temp 4-component vector of float)
0:34                Convert int to float ( temp float)
0:34                  'c' ( temp int)
0:34                'input' ( in 4-component vector of float)
0:35            vector-scale ( temp 4-component vector of float)
0:35              Convert int to float ( temp float)
0:35                'd' ( temp int)
0:35              'input' ( in 4-component vector of float)
0:37      Comma ( temp int)
0:37        move second child to first child ( temp int)
0:37          'e' ( temp int)
0:37          move second child to first child ( temp int)
0:37            'a' ( temp int)
0:37            Test condition and select ( temp int): no shortcircuit
0:37              Condition
0:37              Convert int to bool ( temp bool)
0:37                'b' ( temp int)
0:37              true case
0:37              move second child to first child ( temp int)
0:37                'c' ( temp int)
0:37                'd' ( temp int)
0:37              false case
0:37              Constant:
0:37                10 (const int)
0:37        move second child to first child ( temp int)
0:37          'b' ( temp int)
0:37          Test condition and select ( temp int): no shortcircuit
0:37            Condition
0:37            Convert int to bool ( temp bool)
0:37              'a' ( temp int)
0:37            true case
0:37            move second child to first child ( temp int)
0:37              'd' ( temp int)
0:37              'c' ( temp int)
0:37            false case
0:37            Constant:
0:37              11 (const int)
0:39      move second child to first child ( temp 4-component vector of float)
0:39        'f' ( temp 4-component vector of float)
0:39        Test condition and select ( temp 4-component vector of float): no shortcircuit
0:39          Condition
0:39          Compare Less Than ( temp bool)
0:39            direct index ( temp float)
0:39              'ret' ( temp 4-component vector of float)
0:39              Constant:
0:39                0 (const int)
0:39            direct index ( temp float)
0:39              'input' ( in 4-component vector of float)
0:39              Constant:
0:39                1 (const int)
0:39          true case
0:39          vector-scale ( temp 4-component vector of float)
0:39            Convert int to float ( temp float)
0:39              'c' ( temp int)
0:39            'input' ( in 4-component vector of float)
0:39          false case
0:39          vector-scale ( temp 4-component vector of float)
0:39            Convert int to float ( temp float)
0:39              'd' ( temp int)
0:39            'input' ( in 4-component vector of float)
0:40      Sequence
0:40        move second child to first child ( temp uint)
0:40          'g' ( temp uint)
0:40          Test condition and select ( temp uint): no shortcircuit
0:40            Condition
0:40            Compare Greater Than ( temp bool)
0:40              Convert int to float ( temp float)
0:40                'd' ( temp int)
0:40              Constant:
0:40                0.000000
0:40            true case
0:40            Constant:
0:40              21 (const uint)
0:40            false case
0:40            Constant:
0:40              0 (const uint)
0:41      Sequence
0:41        move second child to first child ( temp uint)
0:41          'h' ( temp uint)
0:41          Test condition and select ( temp uint): no shortcircuit
0:41            Condition
0:41            Compare Greater Than ( temp bool)
0:41              Convert uint to float ( temp float)
0:41                'g' ( temp uint)
0:41              Constant:
0:41                0.000000
0:41            true case
0:41            Constant:
0:41              63 (const uint)
0:41            false case
0:41            Constant:
0:41              0 (const uint)
0:42      Sequence
0:42        move second child to first child ( temp uint)
0:42          'i' ( temp uint)
0:42          Test condition and select ( temp uint): no shortcircuit
0:42            Condition
0:42            Compare Greater Than ( temp bool)
0:42              Convert uint to float ( temp float)
0:42                'h' ( temp uint)
0:42              Constant:
0:42                0.000000
0:42            true case
0:42            Constant:
0:42              5 (const uint)
0:42            false case
0:42            Constant:
0:42              1 (const uint)
0:43      Sequence
0:43        move second child to first child ( temp uint)
0:43          'j' ( temp uint)
0:43          Convert int to uint ( temp uint)
0:43            Test condition and select ( temp int): no shortcircuit
0:43              Condition
0:43              Compare Greater Than ( temp bool)
0:43                Convert uint to float ( temp float)
0:43                  'i' ( temp uint)
0:43                Constant:
0:43                  0.000000
0:43              true case
0:43              Constant:
0:43                43981 (const int)
0:43              false case
0:43              Constant:
0:43                48346 (const int)
0:45      Branch: Return with expression
0:44        add ( temp 4-component vector of float)
0:44          add ( temp 4-component vector of float)
0:44            add ( temp 4-component vector of float)
0:44              add ( temp 4-component vector of float)
0:44                vector-scale ( temp 4-component vector of float)
0:44                  Convert int to float ( temp float)
0:44                    'e' ( temp int)
0:44                  'ret' ( temp 4-component vector of float)
0:44                'f' ( temp 4-component vector of float)
0:44              Function Call: vectorCond( ( temp 4-component vector of float)
0:44            Function Call: scalarCond( ( temp 4-component vector of float)
0:45          Construct vec4 ( temp 4-component vector of float)
0:45            Function Call: fbSelect(vb2;vf2;vf2; ( temp 2-component vector of float)
0:45              Constant:
0:45                true (const bool)
0:45                false (const bool)
0:45              Constant:
0:45                1.000000
0:45                2.000000
0:45              Constant:
0:45                3.000000
0:45                4.000000
0:45            Constant:
0:45              10.000000
0:45            Constant:
0:45              10.000000
0:27  Function Definition: PixelShaderFunction( ( temp void)
0:27    Function Parameters: 
0:?     Sequence
0:27      move second child to first child ( temp 4-component vector of float)
0:?         'input' ( temp 4-component vector of float)
0:?         'input' (layout( location=0) in 4-component vector of float)
0:27      move second child to first child ( temp 4-component vector of float)
0:?         '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:27        Function Call: @PixelShaderFunction(vf4; ( temp 4-component vector of float)
0:?           'input' ( temp 4-component vector of float)
0:?   Linker Objects
0:?     'anon@0' (layout( row_major std140) uniform block{ uniform 4-component vector of float c4,  uniform 4-component vector of float t4,  uniform 4-component vector of float f4,  uniform float t,  uniform float f})
0:?     '@entryPointOutput' (layout( location=0) out 4-component vector of float)
0:?     'input' (layout( location=0) in 4-component vector of float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 233

                              Capability Shader
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 54_1  "PixelShaderFunction" 59_2 59_3
                              ExecutionMode 54_1 OriginUpperLeft
                              Source HLSL 500
                              Name 54_1  "PixelShaderFunction"
                              Name 54_2  "vectorCond("
                              Name 54_3  "scalarCond("
                              Name 54_4  "fbSelect(vb2;vf2;vf2;"
                              Name 55_1  "cnd"
                              Name 55_2  "src0"
                              Name 55_3  "src1"
                              Name 54_5  "@PixelShaderFunction(vf4;"
                              Name 55_4  "input"
                              Name 30_1  "$Global"
                              MemberName 30_1($Global) 0  "c4"
                              MemberName 30_1($Global) 1  "t4"
                              MemberName 30_1($Global) 2  "f4"
                              MemberName 30_1($Global) 3  "t"
                              MemberName 30_1($Global) 4  "f"
                              Name 59_1  ""
                              Name 59_6  "ret"
                              Name 59_7  "a"
                              Name 59_8  "b"
                              Name 59_9  "c"
                              Name 59_10  "d"
                              Name 59_11  "ret"
                              Name 59_12  "e"
                              Name 59_13  "f"
                              Name 59_14  "g"
                              Name 59_15  "h"
                              Name 59_16  "i"
                              Name 59_17  "j"
                              Name 59_18  "param"
                              Name 59_19  "param"
                              Name 59_20  "param"
                              Name 59_4  "input"
                              Name 59_2  "input"
                              Name 59_3  "@entryPointOutput"
                              Name 59_5  "param"
                              Decorate 30_1($Global) Block
                              MemberDecorate 30_1($Global) 0 Offset 0
                              MemberDecorate 30_1($Global) 1 Offset 16
                              MemberDecorate 30_1($Global) 2 Offset 32
                              MemberDecorate 30_1($Global) 3 Offset 48
                              MemberDecorate 30_1($Global) 4 Offset 52
                              Decorate 59_1 Binding 0
                              Decorate 59_1 DescriptorSet 0
                              Decorate 59_2(input) Location 0
                              Decorate 59_3(@entryPointOutput) Location 0
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
            33_2:             TypeFunction 23_1(fvec4)
            20_1:             TypeBool
            23_2:             TypeVector 20_1(bool) 2
            32_1:             TypePointer Function 23_2(bvec2)
            23_3:             TypeVector 22_1(float) 2
            32_2:             TypePointer Function 23_3(fvec2)
            33_3:             TypeFunction 23_3(fvec2) 32_1(ptr) 32_2(ptr) 32_2(ptr)
            32_3:             TypePointer Function 23_1(fvec4)
            33_4:             TypeFunction 23_1(fvec4) 32_3(ptr)
   30_1($Global):             TypeStruct 23_1(fvec4) 23_1(fvec4) 23_1(fvec4) 22_1(float) 22_1(float)
            32_4:             TypePointer Uniform 30_1($Global)
            59_1:   32_4(ptr) Variable Uniform
            21_1:             TypeInt 32 1
            43_1:   21_1(int) Constant 2
            32_5:             TypePointer Uniform 23_1(fvec4)
            43_2:   21_1(int) Constant 1
            43_3:   21_1(int) Constant 0
            23_4:             TypeVector 20_1(bool) 4
            43_4: 22_1(float) Constant 0
            44_1: 23_1(fvec4) ConstantComposite 43_4 43_4 43_4 43_4
            43_5:   21_1(int) Constant 4
            32_6:             TypePointer Uniform 22_1(float)
            43_6:   21_1(int) Constant 3
            43_7: 22_1(float) Constant 1065353216
            44_2: 23_1(fvec4) ConstantComposite 43_7 43_7 43_7 43_7
            32_7:             TypePointer Function 21_1(int)
            43_8:   21_1(int) Constant 5
            43_9:   21_1(int) Constant 6
           43_10:   21_1(int) Constant 7
            21_2:             TypeInt 32 0
         uint(0):   21_2(int) Constant 0
           43_11:   21_1(int) Constant 10
           43_12:   21_1(int) Constant 11
            32_8:             TypePointer Function 22_1(float)
         uint(1):   21_2(int) Constant 1
            32_9:             TypePointer Function 21_2(int)
        uint(21):   21_2(int) Constant 21
        uint(63):   21_2(int) Constant 63
         uint(5):   21_2(int) Constant 5
           43_13:   21_1(int) Constant 43981
           43_14:   21_1(int) Constant 48346
            41_1:  20_1(bool) ConstantTrue
            42_1:  20_1(bool) ConstantFalse
            44_3: 23_2(bvec2) ConstantComposite 41_1 42_1
           43_15: 22_1(float) Constant 1073741824
            44_4: 23_3(fvec2) ConstantComposite 43_7 43_15
           43_16: 22_1(float) Constant 1077936128
           43_17: 22_1(float) Constant 1082130432
            44_5: 23_3(fvec2) ConstantComposite 43_16 43_17
           43_18: 22_1(float) Constant 1092616192
           32_10:             TypePointer Input 23_1(fvec4)
     59_2(input):  32_10(ptr) Variable Input
           32_11:             TypePointer Output 23_1(fvec4)
59_3(@entryPointOutput):  32_11(ptr) Variable Output
54_1(PixelShaderFunction):        19_1 Function None 33_1
           248_1:             Label
     59_4(input):   32_3(ptr) Variable Function
     59_5(param):   32_3(ptr) Variable Function
            61_1: 23_1(fvec4) Load 59_2(input)
                              Store 59_4(input) 61_1
            61_2: 23_1(fvec4) Load 59_4(input)
                              Store 59_5(param) 61_2
            57_1: 23_1(fvec4) FunctionCall 54_5(@PixelShaderFunction(vf4;) 59_5(param)
                              Store 59_3(@entryPointOutput) 57_1
                              Return
                              FunctionEnd
54_2(vectorCond(): 23_1(fvec4) Function None 33_2
           248_2:             Label
            65_1:   32_5(ptr) AccessChain 59_1 43_1
            61_3: 23_1(fvec4) Load 65_1
            65_2:   32_5(ptr) AccessChain 59_1 43_2
            61_4: 23_1(fvec4) Load 65_2
            65_3:   32_5(ptr) AccessChain 59_1 43_3
            61_5: 23_1(fvec4) Load 65_3
           183_1: 23_4(bvec4) FUnordNotEqual 61_5 44_1
           169_1: 23_1(fvec4) Select 183_1 61_4 61_3
            65_4:   32_6(ptr) AccessChain 59_1 43_5
            61_6: 22_1(float) Load 65_4
            80_1: 23_1(fvec4) CompositeConstruct 61_6 61_6 61_6 61_6
            65_5:   32_6(ptr) AccessChain 59_1 43_6
            61_7: 22_1(float) Load 65_5
            80_2: 23_1(fvec4) CompositeConstruct 61_7 61_7 61_7 61_7
            65_6:   32_5(ptr) AccessChain 59_1 43_3
            61_8: 23_1(fvec4) Load 65_6
           183_2: 23_4(bvec4) FUnordNotEqual 61_8 44_1
           169_2: 23_1(fvec4) Select 183_2 80_2 80_1
           129_1: 23_1(fvec4) FAdd 169_1 169_2
            65_7:   32_5(ptr) AccessChain 59_1 43_1
            61_9: 23_1(fvec4) Load 65_7
            65_8:   32_5(ptr) AccessChain 59_1 43_2
           61_10: 23_1(fvec4) Load 65_8
            65_9:   32_5(ptr) AccessChain 59_1 43_2
           61_11: 23_1(fvec4) Load 65_9
           65_10:   32_5(ptr) AccessChain 59_1 43_1
           61_12: 23_1(fvec4) Load 65_10
           184_1: 23_4(bvec4) FOrdLessThan 61_11 61_12
           169_3: 23_1(fvec4) Select 184_1 61_10 61_9
           129_2: 23_1(fvec4) FAdd 129_1 169_3
           65_11:   32_5(ptr) AccessChain 59_1 43_1
           61_13: 23_1(fvec4) Load 65_11
           65_12:   32_6(ptr) AccessChain 59_1 43_6
           61_14: 22_1(float) Load 65_12
            80_3: 23_1(fvec4) CompositeConstruct 61_14 61_14 61_14 61_14
           65_13:   32_5(ptr) AccessChain 59_1 43_3
           61_15: 23_1(fvec4) Load 65_13
           183_3: 23_4(bvec4) FUnordNotEqual 61_15 44_1
           169_4: 23_1(fvec4) Select 183_3 80_3 61_13
           129_3: 23_1(fvec4) FAdd 129_2 169_4
                              ReturnValue 129_3
                              FunctionEnd
54_3(scalarCond(): 23_1(fvec4) Function None 33_2
           248_3:             Label
       59_6(ret):   32_3(ptr) Variable Function
           65_14:   32_6(ptr) AccessChain 59_1 43_6
           61_16: 22_1(float) Load 65_14
           65_15:   32_6(ptr) AccessChain 59_1 43_5
           61_17: 22_1(float) Load 65_15
           183_4:  20_1(bool) FUnordNotEqual 61_16 61_17
           65_16:   32_6(ptr) AccessChain 59_1 43_6
           61_18: 22_1(float) Load 65_16
           65_17:   32_5(ptr) AccessChain 59_1 43_1
           61_19: 23_1(fvec4) Load 65_17
           142_1: 23_1(fvec4) VectorTimesScalar 61_19 61_18
            80_4: 23_4(bvec4) CompositeConstruct 183_4 183_4 183_4 183_4
           169_5: 23_1(fvec4) Select 80_4 142_1 44_2
                              Store 59_6(ret) 169_5
           61_20: 23_1(fvec4) Load 59_6(ret)
                              ReturnValue 61_20
                              FunctionEnd
54_4(fbSelect(vb2;vf2;vf2;): 23_3(fvec2) Function None 33_3
       55_1(cnd):   32_1(ptr) FunctionParameter
      55_2(src0):   32_2(ptr) FunctionParameter
      55_3(src1):   32_2(ptr) FunctionParameter
           248_4:             Label
           61_21: 23_3(fvec2) Load 55_3(src1)
           61_22: 23_3(fvec2) Load 55_2(src0)
           61_23: 23_2(bvec2) Load 55_1(cnd)
           169_6: 23_3(fvec2) Select 61_23 61_22 61_21
                              ReturnValue 169_6
                              FunctionEnd
54_5(@PixelShaderFunction(vf4;): 23_1(fvec4) Function None 33_4
     55_4(input):   32_3(ptr) FunctionParameter
           248_5:             Label
         59_7(a):   32_7(ptr) Variable Function
         59_8(b):   32_7(ptr) Variable Function
         59_9(c):   32_7(ptr) Variable Function
        59_10(d):   32_7(ptr) Variable Function
      59_11(ret):   32_3(ptr) Variable Function
        59_12(e):   32_7(ptr) Variable Function
        59_13(f):   32_3(ptr) Variable Function
        59_14(g):   32_9(ptr) Variable Function
        59_15(h):   32_9(ptr) Variable Function
        59_16(i):   32_9(ptr) Variable Function
        59_17(j):   32_9(ptr) Variable Function
    59_18(param):   32_1(ptr) Variable Function
    59_19(param):   32_2(ptr) Variable Function
    59_20(param):   32_2(ptr) Variable Function
                              Store 59_7(a) 43_8
                              Store 59_8(b) 43_9
                              Store 59_9(c) 43_10
                              Store 59_10(d) 43_10
           61_24:   21_1(int) Load 59_7(a)
           111_1: 22_1(float) ConvertSToF 61_24
           61_25: 23_1(fvec4) Load 55_4(input)
           142_2: 23_1(fvec4) VectorTimesScalar 61_25 111_1
           61_26:   21_1(int) Load 59_8(b)
           111_2: 22_1(float) ConvertSToF 61_26
           61_27: 23_1(fvec4) Load 55_4(input)
           142_3: 23_1(fvec4) VectorTimesScalar 61_27 111_2
           129_4: 23_1(fvec4) FAdd 142_2 142_3
           61_28:   21_1(int) Load 59_9(c)
           111_3: 22_1(float) ConvertSToF 61_28
           61_29: 23_1(fvec4) Load 55_4(input)
           142_4: 23_1(fvec4) VectorTimesScalar 61_29 111_3
           129_5: 23_1(fvec4) FAdd 129_4 142_4
           61_30:   21_1(int) Load 59_10(d)
           111_4: 22_1(float) ConvertSToF 61_30
           61_31: 23_1(fvec4) Load 55_4(input)
           142_5: 23_1(fvec4) VectorTimesScalar 61_31 111_4
           129_6: 23_1(fvec4) FAdd 129_5 142_5
                              Store 59_11(ret) 129_6
           61_32:   21_1(int) Load 59_8(b)
           171_1:  20_1(bool) INotEqual 61_32 uint(0)
           61_33:   21_1(int) Load 59_10(d)
                              Store 59_9(c) 61_33
           169_7:   21_1(int) Select 171_1 61_33 43_11
                              Store 59_7(a) 169_7
                              Store 59_12(e) 169_7
           61_34:   21_1(int) Load 59_7(a)
           171_2:  20_1(bool) INotEqual 61_34 uint(0)
           61_35:   21_1(int) Load 59_9(c)
                              Store 59_10(d) 61_35
           169_8:   21_1(int) Select 171_2 61_35 43_12
                              Store 59_8(b) 169_8
           65_18:   32_8(ptr) AccessChain 59_11(ret) uint(0)
           61_36: 22_1(float) Load 65_18
           65_19:   32_8(ptr) AccessChain 55_4(input) uint(1)
           61_37: 22_1(float) Load 65_19
           184_2:  20_1(bool) FOrdLessThan 61_36 61_37
           61_38:   21_1(int) Load 59_9(c)
           111_5: 22_1(float) ConvertSToF 61_38
           61_39: 23_1(fvec4) Load 55_4(input)
           142_6: 23_1(fvec4) VectorTimesScalar 61_39 111_5
           61_40:   21_1(int) Load 59_10(d)
           111_6: 22_1(float) ConvertSToF 61_40
           61_41: 23_1(fvec4) Load 55_4(input)
           142_7: 23_1(fvec4) VectorTimesScalar 61_41 111_6
            80_5: 23_4(bvec4) CompositeConstruct 184_2 184_2 184_2 184_2
           169_9: 23_1(fvec4) Select 80_5 142_6 142_7
                              Store 59_13(f) 169_9
           61_42:   21_1(int) Load 59_10(d)
           111_7: 22_1(float) ConvertSToF 61_42
           186_1:  20_1(bool) FOrdGreaterThan 111_7 43_4
          169_10:   21_2(int) Select 186_1 uint(21) uint(0)
                              Store 59_14(g) 169_10
           61_43:   21_2(int) Load 59_14(g)
           112_1: 22_1(float) ConvertUToF 61_43
           186_2:  20_1(bool) FOrdGreaterThan 112_1 43_4
          169_11:   21_2(int) Select 186_2 uint(63) uint(0)
                              Store 59_15(h) 169_11
           61_44:   21_2(int) Load 59_15(h)
           112_2: 22_1(float) ConvertUToF 61_44
           186_3:  20_1(bool) FOrdGreaterThan 112_2 43_4
          169_12:   21_2(int) Select 186_3 uint(5) uint(1)
                              Store 59_16(i) 169_12
           61_45:   21_2(int) Load 59_16(i)
           112_3: 22_1(float) ConvertUToF 61_45
           186_4:  20_1(bool) FOrdGreaterThan 112_3 43_4
          169_13:   21_1(int) Select 186_4 43_13 43_14
           124_1:   21_2(int) Bitcast 169_13
                              Store 59_17(j) 124_1
           61_46:   21_1(int) Load 59_12(e)
           111_8: 22_1(float) ConvertSToF 61_46
           61_47: 23_1(fvec4) Load 59_11(ret)
           142_8: 23_1(fvec4) VectorTimesScalar 61_47 111_8
           61_48: 23_1(fvec4) Load 59_13(f)
           129_7: 23_1(fvec4) FAdd 142_8 61_48
            57_2: 23_1(fvec4) FunctionCall 54_2(vectorCond()
           129_8: 23_1(fvec4) FAdd 129_7 57_2
            57_3: 23_1(fvec4) FunctionCall 54_3(scalarCond()
           129_9: 23_1(fvec4) FAdd 129_8 57_3
                              Store 59_18(param) 44_3
                              Store 59_19(param) 44_4
                              Store 59_20(param) 44_5
            57_4: 23_3(fvec2) FunctionCall 54_4(fbSelect(vb2;vf2;vf2;) 59_18(param) 59_19(param) 59_20(param)
            81_1: 22_1(float) CompositeExtract 57_4 0
            81_2: 22_1(float) CompositeExtract 57_4 1
            80_6: 23_1(fvec4) CompositeConstruct 81_1 81_2 43_18 43_18
          129_10: 23_1(fvec4) FAdd 129_9 80_6
                              ReturnValue 129_10
                              FunctionEnd
