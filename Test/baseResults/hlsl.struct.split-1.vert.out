hlsl.struct.split-1.vert
Shader version: 500
0:? Sequence
0:17  Function Definition: @main(struct-VS_INPUT-i1-vf4-i11;vf4; ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:17    Function Parameters: 
0:17      'vsin' ( in structure{ temp int x0_in,  temp 4-component vector of float Pos_in,  temp int x1_in})
0:17      'Pos_loose' ( in 4-component vector of float)
0:?     Sequence
0:20      move second child to first child ( temp int)
0:20        x0_out: direct index for structure ( temp int)
0:20          'vsout' ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:20          Constant:
0:20            0 (const int)
0:20        x0_in: direct index for structure ( temp int)
0:20          'vsin' ( in structure{ temp int x0_in,  temp 4-component vector of float Pos_in,  temp int x1_in})
0:20          Constant:
0:20            0 (const int)
0:21      move second child to first child ( temp 4-component vector of float)
0:21        Pos_out: direct index for structure ( temp 4-component vector of float)
0:21          'vsout' ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:21          Constant:
0:21            1 (const int)
0:21        add ( temp 4-component vector of float)
0:21          Pos_in: direct index for structure ( temp 4-component vector of float)
0:21            'vsin' ( in structure{ temp int x0_in,  temp 4-component vector of float Pos_in,  temp int x1_in})
0:21            Constant:
0:21              1 (const int)
0:21          'Pos_loose' ( in 4-component vector of float)
0:22      move second child to first child ( temp int)
0:22        x1_out: direct index for structure ( temp int)
0:22          'vsout' ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:22          Constant:
0:22            2 (const int)
0:22        x1_in: direct index for structure ( temp int)
0:22          'vsin' ( in structure{ temp int x0_in,  temp 4-component vector of float Pos_in,  temp int x1_in})
0:22          Constant:
0:22            2 (const int)
0:24      Branch: Return with expression
0:24        'vsout' ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:17  Function Definition: main( ( temp void)
0:17    Function Parameters: 
0:?     Sequence
0:17      Sequence
0:17        move second child to first child ( temp int)
0:17          x0_in: direct index for structure ( temp int)
0:?             'vsin' ( temp structure{ temp int x0_in,  temp 4-component vector of float Pos_in,  temp int x1_in})
0:17            Constant:
0:17              0 (const int)
0:?           'vsin.x0_in' (layout( location=0) in int)
0:17        move second child to first child ( temp 4-component vector of float)
0:17          Pos_in: direct index for structure ( temp 4-component vector of float)
0:?             'vsin' ( temp structure{ temp int x0_in,  temp 4-component vector of float Pos_in,  temp int x1_in})
0:17            Constant:
0:17              1 (const int)
0:?           'vsin.Pos_in' (layout( location=1) in 4-component vector of float)
0:17        move second child to first child ( temp int)
0:17          x1_in: direct index for structure ( temp int)
0:?             'vsin' ( temp structure{ temp int x0_in,  temp 4-component vector of float Pos_in,  temp int x1_in})
0:17            Constant:
0:17              2 (const int)
0:?           'vsin.x1_in' (layout( location=2) in int)
0:17      move second child to first child ( temp 4-component vector of float)
0:?         'Pos_loose' ( temp 4-component vector of float)
0:?         'Pos_loose' (layout( location=3) in 4-component vector of float)
0:17      Sequence
0:17        move second child to first child ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:17          'flattenTemp' ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:17          Function Call: @main(struct-VS_INPUT-i1-vf4-i11;vf4; ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:?             'vsin' ( temp structure{ temp int x0_in,  temp 4-component vector of float Pos_in,  temp int x1_in})
0:?             'Pos_loose' ( temp 4-component vector of float)
0:17        move second child to first child ( temp int)
0:?           '@entryPointOutput.x0_out' (layout( location=0) out int)
0:17          x0_out: direct index for structure ( temp int)
0:17            'flattenTemp' ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:17            Constant:
0:17              0 (const int)
0:17        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.Pos_out' ( out 4-component vector of float Position)
0:17          Pos_out: direct index for structure ( temp 4-component vector of float)
0:17            'flattenTemp' ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:17            Constant:
0:17              1 (const int)
0:17        move second child to first child ( temp int)
0:?           '@entryPointOutput.x1_out' (layout( location=1) out int)
0:17          x1_out: direct index for structure ( temp int)
0:17            'flattenTemp' ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:17            Constant:
0:17              2 (const int)
0:?   Linker Objects
0:?     '@entryPointOutput.Pos_out' ( out 4-component vector of float Position)
0:?     '@entryPointOutput.x0_out' (layout( location=0) out int)
0:?     '@entryPointOutput.x1_out' (layout( location=1) out int)
0:?     'vsin.x0_in' (layout( location=0) in int)
0:?     'vsin.Pos_in' (layout( location=1) in 4-component vector of float)
0:?     'vsin.x1_in' (layout( location=2) in int)
0:?     'Pos_loose' (layout( location=3) in 4-component vector of float)


Linked vertex stage:


Shader version: 500
0:? Sequence
0:17  Function Definition: @main(struct-VS_INPUT-i1-vf4-i11;vf4; ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:17    Function Parameters: 
0:17      'vsin' ( in structure{ temp int x0_in,  temp 4-component vector of float Pos_in,  temp int x1_in})
0:17      'Pos_loose' ( in 4-component vector of float)
0:?     Sequence
0:20      move second child to first child ( temp int)
0:20        x0_out: direct index for structure ( temp int)
0:20          'vsout' ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:20          Constant:
0:20            0 (const int)
0:20        x0_in: direct index for structure ( temp int)
0:20          'vsin' ( in structure{ temp int x0_in,  temp 4-component vector of float Pos_in,  temp int x1_in})
0:20          Constant:
0:20            0 (const int)
0:21      move second child to first child ( temp 4-component vector of float)
0:21        Pos_out: direct index for structure ( temp 4-component vector of float)
0:21          'vsout' ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:21          Constant:
0:21            1 (const int)
0:21        add ( temp 4-component vector of float)
0:21          Pos_in: direct index for structure ( temp 4-component vector of float)
0:21            'vsin' ( in structure{ temp int x0_in,  temp 4-component vector of float Pos_in,  temp int x1_in})
0:21            Constant:
0:21              1 (const int)
0:21          'Pos_loose' ( in 4-component vector of float)
0:22      move second child to first child ( temp int)
0:22        x1_out: direct index for structure ( temp int)
0:22          'vsout' ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:22          Constant:
0:22            2 (const int)
0:22        x1_in: direct index for structure ( temp int)
0:22          'vsin' ( in structure{ temp int x0_in,  temp 4-component vector of float Pos_in,  temp int x1_in})
0:22          Constant:
0:22            2 (const int)
0:24      Branch: Return with expression
0:24        'vsout' ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:17  Function Definition: main( ( temp void)
0:17    Function Parameters: 
0:?     Sequence
0:17      Sequence
0:17        move second child to first child ( temp int)
0:17          x0_in: direct index for structure ( temp int)
0:?             'vsin' ( temp structure{ temp int x0_in,  temp 4-component vector of float Pos_in,  temp int x1_in})
0:17            Constant:
0:17              0 (const int)
0:?           'vsin.x0_in' (layout( location=0) in int)
0:17        move second child to first child ( temp 4-component vector of float)
0:17          Pos_in: direct index for structure ( temp 4-component vector of float)
0:?             'vsin' ( temp structure{ temp int x0_in,  temp 4-component vector of float Pos_in,  temp int x1_in})
0:17            Constant:
0:17              1 (const int)
0:?           'vsin.Pos_in' (layout( location=1) in 4-component vector of float)
0:17        move second child to first child ( temp int)
0:17          x1_in: direct index for structure ( temp int)
0:?             'vsin' ( temp structure{ temp int x0_in,  temp 4-component vector of float Pos_in,  temp int x1_in})
0:17            Constant:
0:17              2 (const int)
0:?           'vsin.x1_in' (layout( location=2) in int)
0:17      move second child to first child ( temp 4-component vector of float)
0:?         'Pos_loose' ( temp 4-component vector of float)
0:?         'Pos_loose' (layout( location=3) in 4-component vector of float)
0:17      Sequence
0:17        move second child to first child ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:17          'flattenTemp' ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:17          Function Call: @main(struct-VS_INPUT-i1-vf4-i11;vf4; ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:?             'vsin' ( temp structure{ temp int x0_in,  temp 4-component vector of float Pos_in,  temp int x1_in})
0:?             'Pos_loose' ( temp 4-component vector of float)
0:17        move second child to first child ( temp int)
0:?           '@entryPointOutput.x0_out' (layout( location=0) out int)
0:17          x0_out: direct index for structure ( temp int)
0:17            'flattenTemp' ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:17            Constant:
0:17              0 (const int)
0:17        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.Pos_out' ( out 4-component vector of float Position)
0:17          Pos_out: direct index for structure ( temp 4-component vector of float)
0:17            'flattenTemp' ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:17            Constant:
0:17              1 (const int)
0:17        move second child to first child ( temp int)
0:?           '@entryPointOutput.x1_out' (layout( location=1) out int)
0:17          x1_out: direct index for structure ( temp int)
0:17            'flattenTemp' ( temp structure{ temp int x0_out,  temp 4-component vector of float Pos_out,  temp int x1_out})
0:17            Constant:
0:17              2 (const int)
0:?   Linker Objects
0:?     '@entryPointOutput.Pos_out' ( out 4-component vector of float Position)
0:?     '@entryPointOutput.x0_out' (layout( location=0) out int)
0:?     '@entryPointOutput.x1_out' (layout( location=1) out int)
0:?     'vsin.x0_in' (layout( location=0) in int)
0:?     'vsin.Pos_in' (layout( location=1) in 4-component vector of float)
0:?     'vsin.x1_in' (layout( location=2) in int)
0:?     'Pos_loose' (layout( location=3) in 4-component vector of float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 70

                              Capability Shader
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Vertex 54_1  "main" 59_1 59_2 59_3 59_4 59_5 59_6 59_7
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 30_1  "VS_INPUT"
                              MemberName 30_1(VS_INPUT) 0  "x0_in"
                              MemberName 30_1(VS_INPUT) 1  "Pos_in"
                              MemberName 30_1(VS_INPUT) 2  "x1_in"
                              Name 30_2  "VS_OUTPUT"
                              MemberName 30_2(VS_OUTPUT) 0  "x0_out"
                              MemberName 30_2(VS_OUTPUT) 1  "Pos_out"
                              MemberName 30_2(VS_OUTPUT) 2  "x1_out"
                              Name 54_2  "@main(struct-VS_INPUT-i1-vf4-i11;vf4;"
                              Name 55_1  "vsin"
                              Name 55_2  "Pos_loose"
                              Name 59_13  "vsout"
                              Name 59_8  "vsin"
                              Name 59_1  "vsin.x0_in"
                              Name 59_2  "vsin.Pos_in"
                              Name 59_3  "vsin.x1_in"
                              Name 59_9  "Pos_loose"
                              Name 59_4  "Pos_loose"
                              Name 59_10  "flattenTemp"
                              Name 59_11  "param"
                              Name 59_12  "param"
                              Name 59_5  "@entryPointOutput.x0_out"
                              Name 59_6  "@entryPointOutput.Pos_out"
                              Name 59_7  "@entryPointOutput.x1_out"
                              Decorate 59_1(vsin.x0_in) Location 0
                              Decorate 59_2(vsin.Pos_in) Location 1
                              Decorate 59_3(vsin.x1_in) Location 2
                              Decorate 59_4(Pos_loose) Location 3
                              Decorate 59_5(@entryPointOutput.x0_out) Location 0
                              Decorate 59_6(@entryPointOutput.Pos_out) BuiltIn Position
                              Decorate 59_7(@entryPointOutput.x1_out) Location 1
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            21_1:             TypeInt 32 1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
  30_1(VS_INPUT):             TypeStruct 21_1(int) 23_1(fvec4) 21_1(int)
            32_1:             TypePointer Function 30_1(VS_INPUT)
            32_2:             TypePointer Function 23_1(fvec4)
 30_2(VS_OUTPUT):             TypeStruct 21_1(int) 23_1(fvec4) 21_1(int)
            33_2:             TypeFunction 30_2(VS_OUTPUT) 32_1(ptr) 32_2(ptr)
            32_3:             TypePointer Function 30_2(VS_OUTPUT)
            43_1:   21_1(int) Constant 0
            32_4:             TypePointer Function 21_1(int)
            43_2:   21_1(int) Constant 1
            43_3:   21_1(int) Constant 2
            32_5:             TypePointer Input 21_1(int)
59_1(vsin.x0_in):   32_5(ptr) Variable Input
            32_6:             TypePointer Input 23_1(fvec4)
59_2(vsin.Pos_in):   32_6(ptr) Variable Input
59_3(vsin.x1_in):   32_5(ptr) Variable Input
 59_4(Pos_loose):   32_6(ptr) Variable Input
            32_7:             TypePointer Output 21_1(int)
59_5(@entryPointOutput.x0_out):   32_7(ptr) Variable Output
            32_8:             TypePointer Output 23_1(fvec4)
59_6(@entryPointOutput.Pos_out):   32_8(ptr) Variable Output
59_7(@entryPointOutput.x1_out):   32_7(ptr) Variable Output
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
      59_8(vsin):   32_1(ptr) Variable Function
 59_9(Pos_loose):   32_2(ptr) Variable Function
59_10(flattenTemp):   32_3(ptr) Variable Function
    59_11(param):   32_1(ptr) Variable Function
    59_12(param):   32_2(ptr) Variable Function
            61_1:   21_1(int) Load 59_1(vsin.x0_in)
            65_1:   32_4(ptr) AccessChain 59_8(vsin) 43_1
                              Store 65_1 61_1
            61_2: 23_1(fvec4) Load 59_2(vsin.Pos_in)
            65_2:   32_2(ptr) AccessChain 59_8(vsin) 43_2
                              Store 65_2 61_2
            61_3:   21_1(int) Load 59_3(vsin.x1_in)
            65_3:   32_4(ptr) AccessChain 59_8(vsin) 43_3
                              Store 65_3 61_3
            61_4: 23_1(fvec4) Load 59_4(Pos_loose)
                              Store 59_9(Pos_loose) 61_4
            61_5:30_1(VS_INPUT) Load 59_8(vsin)
                              Store 59_11(param) 61_5
            61_6: 23_1(fvec4) Load 59_9(Pos_loose)
                              Store 59_12(param) 61_6
            57_1:30_2(VS_OUTPUT) FunctionCall 54_2(@main(struct-VS_INPUT-i1-vf4-i11;vf4;) 59_11(param) 59_12(param)
                              Store 59_10(flattenTemp) 57_1
            65_4:   32_4(ptr) AccessChain 59_10(flattenTemp) 43_1
            61_7:   21_1(int) Load 65_4
                              Store 59_5(@entryPointOutput.x0_out) 61_7
            65_5:   32_2(ptr) AccessChain 59_10(flattenTemp) 43_2
            61_8: 23_1(fvec4) Load 65_5
                              Store 59_6(@entryPointOutput.Pos_out) 61_8
            65_6:   32_4(ptr) AccessChain 59_10(flattenTemp) 43_3
            61_9:   21_1(int) Load 65_6
                              Store 59_7(@entryPointOutput.x1_out) 61_9
                              Return
                              FunctionEnd
54_2(@main(struct-VS_INPUT-i1-vf4-i11;vf4;):30_2(VS_OUTPUT) Function None 33_2
      55_1(vsin):   32_1(ptr) FunctionParameter
 55_2(Pos_loose):   32_2(ptr) FunctionParameter
           248_2:             Label
    59_13(vsout):   32_3(ptr) Variable Function
            65_7:   32_4(ptr) AccessChain 55_1(vsin) 43_1
           61_10:   21_1(int) Load 65_7
            65_8:   32_4(ptr) AccessChain 59_13(vsout) 43_1
                              Store 65_8 61_10
            65_9:   32_2(ptr) AccessChain 55_1(vsin) 43_2
           61_11: 23_1(fvec4) Load 65_9
           61_12: 23_1(fvec4) Load 55_2(Pos_loose)
           129_1: 23_1(fvec4) FAdd 61_11 61_12
           65_10:   32_2(ptr) AccessChain 59_13(vsout) 43_2
                              Store 65_10 129_1
           65_11:   32_4(ptr) AccessChain 55_1(vsin) 43_3
           61_13:   21_1(int) Load 65_11
           65_12:   32_4(ptr) AccessChain 59_13(vsout) 43_3
                              Store 65_12 61_13
           61_14:30_2(VS_OUTPUT) Load 59_13(vsout)
                              ReturnValue 61_14
                              FunctionEnd
