hlsl.promote.binary.frag
Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:14  Function Definition: @main( ( temp structure{ temp 4-component vector of float Color})
0:14    Function Parameters: 
0:?     Sequence
0:15      mod ( temp float)
0:15        Convert int to float ( temp float)
0:15          ival: direct index for structure ( uniform int)
0:15            'anon@0' (layout( row_major std140) uniform block{ uniform bool bval,  uniform 4-component vector of bool bval4,  uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:15            Constant:
0:15              2 (const uint)
0:15        fval: direct index for structure ( uniform float)
0:15          'anon@0' (layout( row_major std140) uniform block{ uniform bool bval,  uniform 4-component vector of bool bval4,  uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:15          Constant:
0:15            4 (const uint)
0:16      mod ( temp 4-component vector of float)
0:16        Convert int to float ( temp 4-component vector of float)
0:16          ival4: direct index for structure ( uniform 4-component vector of int)
0:16            'anon@0' (layout( row_major std140) uniform block{ uniform bool bval,  uniform 4-component vector of bool bval4,  uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:16            Constant:
0:16              3 (const uint)
0:16        fval4: direct index for structure ( uniform 4-component vector of float)
0:16          'anon@0' (layout( row_major std140) uniform block{ uniform bool bval,  uniform 4-component vector of bool bval4,  uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:16          Constant:
0:16            5 (const uint)
0:18      mod ( temp float)
0:18        Convert bool to float ( temp float)
0:18          bval: direct index for structure ( uniform bool)
0:18            'anon@0' (layout( row_major std140) uniform block{ uniform bool bval,  uniform 4-component vector of bool bval4,  uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:18            Constant:
0:18              0 (const uint)
0:18        fval: direct index for structure ( uniform float)
0:18          'anon@0' (layout( row_major std140) uniform block{ uniform bool bval,  uniform 4-component vector of bool bval4,  uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:18          Constant:
0:18            4 (const uint)
0:19      mod ( temp 4-component vector of float)
0:19        Convert bool to float ( temp 4-component vector of float)
0:19          bval4: direct index for structure ( uniform 4-component vector of bool)
0:19            'anon@0' (layout( row_major std140) uniform block{ uniform bool bval,  uniform 4-component vector of bool bval4,  uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:19            Constant:
0:19              1 (const uint)
0:19        fval4: direct index for structure ( uniform 4-component vector of float)
0:19          'anon@0' (layout( row_major std140) uniform block{ uniform bool bval,  uniform 4-component vector of bool bval4,  uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:19          Constant:
0:19            5 (const uint)
0:21      Sequence
0:21        move second child to first child ( temp int)
0:21          'l_int' ( temp int)
0:21          Constant:
0:21            1 (const int)
0:22      mod second child into first child ( temp int)
0:22        'l_int' ( temp int)
0:22        Convert float to int ( temp int)
0:22          fval: direct index for structure ( uniform float)
0:22            'anon@0' (layout( row_major std140) uniform block{ uniform bool bval,  uniform 4-component vector of bool bval4,  uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:22            Constant:
0:22              4 (const uint)
0:25      move second child to first child ( temp 4-component vector of float)
0:25        Color: direct index for structure ( temp 4-component vector of float)
0:25          'psout' ( temp structure{ temp 4-component vector of float Color})
0:25          Constant:
0:25            0 (const int)
0:25        Constant:
0:25          0.000000
0:25          0.000000
0:25          0.000000
0:25          0.000000
0:26      Branch: Return with expression
0:26        'psout' ( temp structure{ temp 4-component vector of float Color})
0:14  Function Definition: main( ( temp void)
0:14    Function Parameters: 
0:?     Sequence
0:14      Sequence
0:14        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.Color' (layout( location=0) out 4-component vector of float)
0:14          Color: direct index for structure ( temp 4-component vector of float)
0:14            Function Call: @main( ( temp structure{ temp 4-component vector of float Color})
0:14            Constant:
0:14              0 (const int)
0:?   Linker Objects
0:?     'anon@0' (layout( row_major std140) uniform block{ uniform bool bval,  uniform 4-component vector of bool bval4,  uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:?     '@entryPointOutput.Color' (layout( location=0) out 4-component vector of float)


Linked fragment stage:


Shader version: 500
gl_FragCoord origin is upper left
0:? Sequence
0:14  Function Definition: @main( ( temp structure{ temp 4-component vector of float Color})
0:14    Function Parameters: 
0:?     Sequence
0:15      mod ( temp float)
0:15        Convert int to float ( temp float)
0:15          ival: direct index for structure ( uniform int)
0:15            'anon@0' (layout( row_major std140) uniform block{ uniform bool bval,  uniform 4-component vector of bool bval4,  uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:15            Constant:
0:15              2 (const uint)
0:15        fval: direct index for structure ( uniform float)
0:15          'anon@0' (layout( row_major std140) uniform block{ uniform bool bval,  uniform 4-component vector of bool bval4,  uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:15          Constant:
0:15            4 (const uint)
0:16      mod ( temp 4-component vector of float)
0:16        Convert int to float ( temp 4-component vector of float)
0:16          ival4: direct index for structure ( uniform 4-component vector of int)
0:16            'anon@0' (layout( row_major std140) uniform block{ uniform bool bval,  uniform 4-component vector of bool bval4,  uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:16            Constant:
0:16              3 (const uint)
0:16        fval4: direct index for structure ( uniform 4-component vector of float)
0:16          'anon@0' (layout( row_major std140) uniform block{ uniform bool bval,  uniform 4-component vector of bool bval4,  uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:16          Constant:
0:16            5 (const uint)
0:18      mod ( temp float)
0:18        Convert bool to float ( temp float)
0:18          bval: direct index for structure ( uniform bool)
0:18            'anon@0' (layout( row_major std140) uniform block{ uniform bool bval,  uniform 4-component vector of bool bval4,  uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:18            Constant:
0:18              0 (const uint)
0:18        fval: direct index for structure ( uniform float)
0:18          'anon@0' (layout( row_major std140) uniform block{ uniform bool bval,  uniform 4-component vector of bool bval4,  uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:18          Constant:
0:18            4 (const uint)
0:19      mod ( temp 4-component vector of float)
0:19        Convert bool to float ( temp 4-component vector of float)
0:19          bval4: direct index for structure ( uniform 4-component vector of bool)
0:19            'anon@0' (layout( row_major std140) uniform block{ uniform bool bval,  uniform 4-component vector of bool bval4,  uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:19            Constant:
0:19              1 (const uint)
0:19        fval4: direct index for structure ( uniform 4-component vector of float)
0:19          'anon@0' (layout( row_major std140) uniform block{ uniform bool bval,  uniform 4-component vector of bool bval4,  uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:19          Constant:
0:19            5 (const uint)
0:21      Sequence
0:21        move second child to first child ( temp int)
0:21          'l_int' ( temp int)
0:21          Constant:
0:21            1 (const int)
0:22      mod second child into first child ( temp int)
0:22        'l_int' ( temp int)
0:22        Convert float to int ( temp int)
0:22          fval: direct index for structure ( uniform float)
0:22            'anon@0' (layout( row_major std140) uniform block{ uniform bool bval,  uniform 4-component vector of bool bval4,  uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:22            Constant:
0:22              4 (const uint)
0:25      move second child to first child ( temp 4-component vector of float)
0:25        Color: direct index for structure ( temp 4-component vector of float)
0:25          'psout' ( temp structure{ temp 4-component vector of float Color})
0:25          Constant:
0:25            0 (const int)
0:25        Constant:
0:25          0.000000
0:25          0.000000
0:25          0.000000
0:25          0.000000
0:26      Branch: Return with expression
0:26        'psout' ( temp structure{ temp 4-component vector of float Color})
0:14  Function Definition: main( ( temp void)
0:14    Function Parameters: 
0:?     Sequence
0:14      Sequence
0:14        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.Color' (layout( location=0) out 4-component vector of float)
0:14          Color: direct index for structure ( temp 4-component vector of float)
0:14            Function Call: @main( ( temp structure{ temp 4-component vector of float Color})
0:14            Constant:
0:14              0 (const int)
0:?   Linker Objects
0:?     'anon@0' (layout( row_major std140) uniform block{ uniform bool bval,  uniform 4-component vector of bool bval4,  uniform int ival,  uniform 4-component vector of int ival4,  uniform float fval,  uniform 4-component vector of float fval4})
0:?     '@entryPointOutput.Color' (layout( location=0) out 4-component vector of float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 83

                              Capability Shader
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Fragment 54_1  "main" 59_2
                              ExecutionMode 54_1 OriginUpperLeft
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 30_1  "PS_OUTPUT"
                              MemberName 30_1(PS_OUTPUT) 0  "Color"
                              Name 54_2  "@main("
                              Name 30_2  "$Global"
                              MemberName 30_2($Global) 0  "bval"
                              MemberName 30_2($Global) 1  "bval4"
                              MemberName 30_2($Global) 2  "ival"
                              MemberName 30_2($Global) 3  "ival4"
                              MemberName 30_2($Global) 4  "fval"
                              MemberName 30_2($Global) 5  "fval4"
                              Name 59_1  ""
                              Name 59_3  "l_int"
                              Name 59_4  "psout"
                              Name 59_2  "@entryPointOutput.Color"
                              Decorate 30_2($Global) Block
                              MemberDecorate 30_2($Global) 0 Offset 0
                              MemberDecorate 30_2($Global) 1 Offset 16
                              MemberDecorate 30_2($Global) 2 Offset 32
                              MemberDecorate 30_2($Global) 3 Offset 48
                              MemberDecorate 30_2($Global) 4 Offset 64
                              MemberDecorate 30_2($Global) 5 Offset 80
                              Decorate 59_1 Binding 0
                              Decorate 59_1 DescriptorSet 0
                              Decorate 59_2(@entryPointOutput.Color) Location 0
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            23_1:             TypeVector 22_1(float) 4
 30_1(PS_OUTPUT):             TypeStruct 23_1(fvec4)
            33_2:             TypeFunction 30_1(PS_OUTPUT)
            21_1:             TypeInt 32 0
            23_2:             TypeVector 21_1(int) 4
            21_2:             TypeInt 32 1
            23_3:             TypeVector 21_2(int) 4
   30_2($Global):             TypeStruct 21_1(int) 23_2(ivec4) 21_2(int) 23_3(ivec4) 22_1(float) 23_1(fvec4)
            32_1:             TypePointer Uniform 30_2($Global)
            59_1:   32_1(ptr) Variable Uniform
            43_1:   21_2(int) Constant 2
            32_2:             TypePointer Uniform 21_2(int)
            43_2:   21_2(int) Constant 4
            32_3:             TypePointer Uniform 22_1(float)
            43_3:   21_2(int) Constant 3
            32_4:             TypePointer Uniform 23_3(ivec4)
            43_4:   21_2(int) Constant 5
            32_5:             TypePointer Uniform 23_1(fvec4)
            43_5:   21_2(int) Constant 0
            32_6:             TypePointer Uniform 21_1(int)
            20_1:             TypeBool
         uint(0):   21_1(int) Constant 0
            43_6: 22_1(float) Constant 0
            43_7: 22_1(float) Constant 1065353216
            43_8:   21_2(int) Constant 1
            32_7:             TypePointer Uniform 23_2(ivec4)
            23_4:             TypeVector 20_1(bool) 4
            44_1: 23_2(ivec4) ConstantComposite uint(0) uint(0) uint(0) uint(0)
            44_2: 23_1(fvec4) ConstantComposite 43_6 43_6 43_6 43_6
            44_3: 23_1(fvec4) ConstantComposite 43_7 43_7 43_7 43_7
            32_8:             TypePointer Function 21_2(int)
            32_9:             TypePointer Function 30_1(PS_OUTPUT)
           32_10:             TypePointer Function 23_1(fvec4)
           32_11:             TypePointer Output 23_1(fvec4)
59_2(@entryPointOutput.Color):  32_11(ptr) Variable Output
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
            57_1:30_1(PS_OUTPUT) FunctionCall 54_2(@main()
            81_1: 23_1(fvec4) CompositeExtract 57_1 0
                              Store 59_2(@entryPointOutput.Color) 81_1
                              Return
                              FunctionEnd
    54_2(@main():30_1(PS_OUTPUT) Function None 33_2
           248_2:             Label
     59_3(l_int):   32_8(ptr) Variable Function
     59_4(psout):   32_9(ptr) Variable Function
            65_1:   32_2(ptr) AccessChain 59_1 43_1
            61_1:   21_2(int) Load 65_1
           111_1: 22_1(float) ConvertSToF 61_1
            65_2:   32_3(ptr) AccessChain 59_1 43_2
            61_2: 22_1(float) Load 65_2
           141_1: 22_1(float) FMod 111_1 61_2
            65_3:   32_4(ptr) AccessChain 59_1 43_3
            61_3: 23_3(ivec4) Load 65_3
           111_2: 23_1(fvec4) ConvertSToF 61_3
            65_4:   32_5(ptr) AccessChain 59_1 43_4
            61_4: 23_1(fvec4) Load 65_4
           141_2: 23_1(fvec4) FMod 111_2 61_4
            65_5:   32_6(ptr) AccessChain 59_1 43_5
            61_5:   21_1(int) Load 65_5
           171_1:  20_1(bool) INotEqual 61_5 uint(0)
           169_1: 22_1(float) Select 171_1 43_7 43_6
            65_6:   32_3(ptr) AccessChain 59_1 43_2
            61_6: 22_1(float) Load 65_6
           141_3: 22_1(float) FMod 169_1 61_6
            65_7:   32_7(ptr) AccessChain 59_1 43_8
            61_7: 23_2(ivec4) Load 65_7
           171_2: 23_4(bvec4) INotEqual 61_7 44_1
           169_2: 23_1(fvec4) Select 171_2 44_3 44_2
            65_8:   32_5(ptr) AccessChain 59_1 43_4
            61_8: 23_1(fvec4) Load 65_8
           141_4: 23_1(fvec4) FMod 169_2 61_8
                              Store 59_3(l_int) 43_8
            65_9:   32_3(ptr) AccessChain 59_1 43_2
            61_9: 22_1(float) Load 65_9
           110_1:   21_2(int) ConvertFToS 61_9
           61_10:   21_2(int) Load 59_3(l_int)
           139_1:   21_2(int) SMod 61_10 110_1
                              Store 59_3(l_int) 139_1
           65_10:  32_10(ptr) AccessChain 59_4(psout) 43_5
                              Store 65_10 44_2
           61_11:30_1(PS_OUTPUT) Load 59_4(psout)
                              ReturnValue 61_11
                              FunctionEnd
