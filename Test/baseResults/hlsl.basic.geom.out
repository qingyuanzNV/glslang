hlsl.basic.geom
Shader version: 500
invocations = -1
max_vertices = 4
input primitive = triangles
output primitive = line_strip
0:? Sequence
0:16  Function Definition: @main(u1[3];u1[3];struct-PSInput-f1-i11; ( temp void)
0:16    Function Parameters: 
0:16      'VertexID' ( in 3-element array of uint)
0:16      'test' ( in 3-element array of uint)
0:16      'OutputStream' ( out structure{ temp float myfloat,  temp int something})
0:?     Sequence
0:19      move second child to first child ( temp float)
0:19        myfloat: direct index for structure ( temp float)
0:19          'Vert' ( temp structure{ temp float myfloat,  temp int something})
0:19          Constant:
0:19            0 (const int)
0:19        Convert uint to float ( temp float)
0:19          add ( temp uint)
0:19            add ( temp uint)
0:19              direct index ( temp uint)
0:19                'test' ( in 3-element array of uint)
0:19                Constant:
0:19                  0 (const int)
0:19              direct index ( temp uint)
0:19                'test' ( in 3-element array of uint)
0:19                Constant:
0:19                  1 (const int)
0:19            direct index ( temp uint)
0:19              'test' ( in 3-element array of uint)
0:19              Constant:
0:19                2 (const int)
0:20      move second child to first child ( temp int)
0:20        something: direct index for structure ( temp int)
0:20          'Vert' ( temp structure{ temp float myfloat,  temp int something})
0:20          Constant:
0:20            1 (const int)
0:20        Convert uint to int ( temp int)
0:20          direct index ( temp uint)
0:20            'VertexID' ( in 3-element array of uint)
0:20            Constant:
0:20              0 (const int)
0:22      Sequence
0:22        Sequence
0:22          move second child to first child ( temp float)
0:?             'OutputStream.myfloat' (layout( location=0) out float)
0:22            myfloat: direct index for structure ( temp float)
0:22              'Vert' ( temp structure{ temp float myfloat,  temp int something})
0:22              Constant:
0:22                0 (const int)
0:22          move second child to first child ( temp int)
0:?             'OutputStream.something' (layout( location=1) out int)
0:22            something: direct index for structure ( temp int)
0:22              'Vert' ( temp structure{ temp float myfloat,  temp int something})
0:22              Constant:
0:22                1 (const int)
0:22        EmitVertex ( temp void)
0:23      Sequence
0:23        Sequence
0:23          move second child to first child ( temp float)
0:?             'OutputStream.myfloat' (layout( location=0) out float)
0:23            myfloat: direct index for structure ( temp float)
0:23              'Vert' ( temp structure{ temp float myfloat,  temp int something})
0:23              Constant:
0:23                0 (const int)
0:23          move second child to first child ( temp int)
0:?             'OutputStream.something' (layout( location=1) out int)
0:23            something: direct index for structure ( temp int)
0:23              'Vert' ( temp structure{ temp float myfloat,  temp int something})
0:23              Constant:
0:23                1 (const int)
0:23        EmitVertex ( temp void)
0:24      EndPrimitive ( temp void)
0:16  Function Definition: main( ( temp void)
0:16    Function Parameters: 
0:?     Sequence
0:16      move second child to first child ( temp 3-element array of uint)
0:?         'VertexID' ( temp 3-element array of uint)
0:?         'VertexID' (layout( location=0) in 3-element array of uint)
0:16      move second child to first child ( temp 3-element array of uint)
0:?         'test' ( temp 3-element array of uint)
0:?         'test' (layout( location=1) in 3-element array of uint)
0:16      Function Call: @main(u1[3];u1[3];struct-PSInput-f1-i11; ( temp void)
0:?         'VertexID' ( temp 3-element array of uint)
0:?         'test' ( temp 3-element array of uint)
0:?         'OutputStream' ( temp structure{ temp float myfloat,  temp int something})
0:?   Linker Objects
0:?     'VertexID' (layout( location=0) in 3-element array of uint)
0:?     'test' (layout( location=1) in 3-element array of uint)
0:?     'OutputStream.myfloat' (layout( location=0) out float)
0:?     'OutputStream.something' (layout( location=1) out int)


Linked geometry stage:


Shader version: 500
invocations = 1
max_vertices = 4
input primitive = triangles
output primitive = line_strip
0:? Sequence
0:16  Function Definition: @main(u1[3];u1[3];struct-PSInput-f1-i11; ( temp void)
0:16    Function Parameters: 
0:16      'VertexID' ( in 3-element array of uint)
0:16      'test' ( in 3-element array of uint)
0:16      'OutputStream' ( out structure{ temp float myfloat,  temp int something})
0:?     Sequence
0:19      move second child to first child ( temp float)
0:19        myfloat: direct index for structure ( temp float)
0:19          'Vert' ( temp structure{ temp float myfloat,  temp int something})
0:19          Constant:
0:19            0 (const int)
0:19        Convert uint to float ( temp float)
0:19          add ( temp uint)
0:19            add ( temp uint)
0:19              direct index ( temp uint)
0:19                'test' ( in 3-element array of uint)
0:19                Constant:
0:19                  0 (const int)
0:19              direct index ( temp uint)
0:19                'test' ( in 3-element array of uint)
0:19                Constant:
0:19                  1 (const int)
0:19            direct index ( temp uint)
0:19              'test' ( in 3-element array of uint)
0:19              Constant:
0:19                2 (const int)
0:20      move second child to first child ( temp int)
0:20        something: direct index for structure ( temp int)
0:20          'Vert' ( temp structure{ temp float myfloat,  temp int something})
0:20          Constant:
0:20            1 (const int)
0:20        Convert uint to int ( temp int)
0:20          direct index ( temp uint)
0:20            'VertexID' ( in 3-element array of uint)
0:20            Constant:
0:20              0 (const int)
0:22      Sequence
0:22        Sequence
0:22          move second child to first child ( temp float)
0:?             'OutputStream.myfloat' (layout( location=0) out float)
0:22            myfloat: direct index for structure ( temp float)
0:22              'Vert' ( temp structure{ temp float myfloat,  temp int something})
0:22              Constant:
0:22                0 (const int)
0:22          move second child to first child ( temp int)
0:?             'OutputStream.something' (layout( location=1) out int)
0:22            something: direct index for structure ( temp int)
0:22              'Vert' ( temp structure{ temp float myfloat,  temp int something})
0:22              Constant:
0:22                1 (const int)
0:22        EmitVertex ( temp void)
0:23      Sequence
0:23        Sequence
0:23          move second child to first child ( temp float)
0:?             'OutputStream.myfloat' (layout( location=0) out float)
0:23            myfloat: direct index for structure ( temp float)
0:23              'Vert' ( temp structure{ temp float myfloat,  temp int something})
0:23              Constant:
0:23                0 (const int)
0:23          move second child to first child ( temp int)
0:?             'OutputStream.something' (layout( location=1) out int)
0:23            something: direct index for structure ( temp int)
0:23              'Vert' ( temp structure{ temp float myfloat,  temp int something})
0:23              Constant:
0:23                1 (const int)
0:23        EmitVertex ( temp void)
0:24      EndPrimitive ( temp void)
0:16  Function Definition: main( ( temp void)
0:16    Function Parameters: 
0:?     Sequence
0:16      move second child to first child ( temp 3-element array of uint)
0:?         'VertexID' ( temp 3-element array of uint)
0:?         'VertexID' (layout( location=0) in 3-element array of uint)
0:16      move second child to first child ( temp 3-element array of uint)
0:?         'test' ( temp 3-element array of uint)
0:?         'test' (layout( location=1) in 3-element array of uint)
0:16      Function Call: @main(u1[3];u1[3];struct-PSInput-f1-i11; ( temp void)
0:?         'VertexID' ( temp 3-element array of uint)
0:?         'test' ( temp 3-element array of uint)
0:?         'OutputStream' ( temp structure{ temp float myfloat,  temp int something})
0:?   Linker Objects
0:?     'VertexID' (layout( location=0) in 3-element array of uint)
0:?     'test' (layout( location=1) in 3-element array of uint)
0:?     'OutputStream.myfloat' (layout( location=0) out float)
0:?     'OutputStream.something' (layout( location=1) out int)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 68

                              Capability Geometry
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint Geometry 54_1  "main" 59_1 59_2 59_3 59_4
                              ExecutionMode 54_1 Triangles
                              ExecutionMode 54_1 Invocations 1
                              ExecutionMode 54_1 OutputLineStrip
                              ExecutionMode 54_1 OutputVertices 4
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 30_1  "PSInput"
                              MemberName 30_1(PSInput) 0  "myfloat"
                              MemberName 30_1(PSInput) 1  "something"
                              Name 54_2  "@main(u1[3];u1[3];struct-PSInput-f1-i11;"
                              Name 55_1  "VertexID"
                              Name 55_2  "test"
                              Name 55_3  "OutputStream"
                              Name 59_11  "Vert"
                              Name 59_1  "OutputStream.myfloat"
                              Name 59_2  "OutputStream.something"
                              Name 59_5  "VertexID"
                              Name 59_3  "VertexID"
                              Name 59_6  "test"
                              Name 59_4  "test"
                              Name 59_7  "OutputStream"
                              Name 59_8  "param"
                              Name 59_9  "param"
                              Name 59_10  "param"
                              Decorate 59_1(OutputStream.myfloat) Location 0
                              Decorate 59_2(OutputStream.something) Location 1
                              Decorate 59_3(VertexID) Location 0
                              Decorate 59_4(test) Location 1
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            21_1:             TypeInt 32 0
         uint(3):   21_1(int) Constant 3
            28_1:             TypeArray 21_1(int) uint(3)
            32_1:             TypePointer Function 28_1
            22_1:             TypeFloat 32
            21_2:             TypeInt 32 1
   30_1(PSInput):             TypeStruct 22_1(float) 21_2(int)
            32_2:             TypePointer Function 30_1(PSInput)
            33_2:             TypeFunction 19_1 32_1(ptr) 32_1(ptr) 32_2(ptr)
            43_1:   21_2(int) Constant 0
            32_3:             TypePointer Function 21_1(int)
            43_2:   21_2(int) Constant 1
            43_3:   21_2(int) Constant 2
            32_4:             TypePointer Function 22_1(float)
            32_5:             TypePointer Function 21_2(int)
            32_6:             TypePointer Output 22_1(float)
59_1(OutputStream.myfloat):   32_6(ptr) Variable Output
            32_7:             TypePointer Output 21_2(int)
59_2(OutputStream.something):   32_7(ptr) Variable Output
            32_8:             TypePointer Input 28_1
  59_3(VertexID):   32_8(ptr) Variable Input
      59_4(test):   32_8(ptr) Variable Input
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
  59_5(VertexID):   32_1(ptr) Variable Function
      59_6(test):   32_1(ptr) Variable Function
59_7(OutputStream):   32_2(ptr) Variable Function
     59_8(param):   32_1(ptr) Variable Function
     59_9(param):   32_1(ptr) Variable Function
    59_10(param):   32_2(ptr) Variable Function
            61_1:        28_1 Load 59_3(VertexID)
                              Store 59_5(VertexID) 61_1
            61_2:        28_1 Load 59_4(test)
                              Store 59_6(test) 61_2
            61_3:        28_1 Load 59_5(VertexID)
                              Store 59_8(param) 61_3
            61_4:        28_1 Load 59_6(test)
                              Store 59_9(param) 61_4
            57_1:        19_1 FunctionCall 54_2(@main(u1[3];u1[3];struct-PSInput-f1-i11;) 59_8(param) 59_9(param) 59_10(param)
            61_5:30_1(PSInput) Load 59_10(param)
                              Store 59_7(OutputStream) 61_5
                              Return
                              FunctionEnd
54_2(@main(u1[3];u1[3];struct-PSInput-f1-i11;):        19_1 Function None 33_2
  55_1(VertexID):   32_1(ptr) FunctionParameter
      55_2(test):   32_1(ptr) FunctionParameter
55_3(OutputStream):   32_2(ptr) FunctionParameter
           248_2:             Label
     59_11(Vert):   32_2(ptr) Variable Function
            65_1:   32_3(ptr) AccessChain 55_2(test) 43_1
            61_6:   21_1(int) Load 65_1
            65_2:   32_3(ptr) AccessChain 55_2(test) 43_2
            61_7:   21_1(int) Load 65_2
           128_1:   21_1(int) IAdd 61_6 61_7
            65_3:   32_3(ptr) AccessChain 55_2(test) 43_3
            61_8:   21_1(int) Load 65_3
           128_2:   21_1(int) IAdd 128_1 61_8
           112_1: 22_1(float) ConvertUToF 128_2
            65_4:   32_4(ptr) AccessChain 59_11(Vert) 43_1
                              Store 65_4 112_1
            65_5:   32_3(ptr) AccessChain 55_1(VertexID) 43_1
            61_9:   21_1(int) Load 65_5
           124_1:   21_2(int) Bitcast 61_9
            65_6:   32_5(ptr) AccessChain 59_11(Vert) 43_2
                              Store 65_6 124_1
            65_7:   32_4(ptr) AccessChain 59_11(Vert) 43_1
           61_10: 22_1(float) Load 65_7
                              Store 59_1(OutputStream.myfloat) 61_10
            65_8:   32_5(ptr) AccessChain 59_11(Vert) 43_2
           61_11:   21_2(int) Load 65_8
                              Store 59_2(OutputStream.something) 61_11
                              EmitVertex
            65_9:   32_4(ptr) AccessChain 59_11(Vert) 43_1
           61_12: 22_1(float) Load 65_9
                              Store 59_1(OutputStream.myfloat) 61_12
           65_10:   32_5(ptr) AccessChain 59_11(Vert) 43_2
           61_13:   21_2(int) Load 65_10
                              Store 59_2(OutputStream.something) 61_13
                              EmitVertex
                              EndPrimitive
                              Return
                              FunctionEnd
