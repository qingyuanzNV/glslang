hlsl.domain.2.tese
Shader version: 500
input primitive = triangles
vertex spacing = none
triangle order = none
0:? Sequence
0:25  Function Definition: @main(struct-pcf_in_t-f1[3]-f1-f11;struct-ds_in_t-vf4-vf31[3];vf3; ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25    Function Parameters: 
0:25      'pcf_data' ( in structure{ temp 3-element array of float flTessFactor,  temp float flInsideTessFactor,  temp float foo})
0:25      'i' ( const (read only) 3-element array of structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25      'tesscoord' ( in 3-component vector of float)
0:?     Sequence
0:28      move second child to first child ( temp 4-component vector of float)
0:28        pos: direct index for structure ( temp 4-component vector of float)
0:28          'o' ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:28          Constant:
0:28            0 (const int)
0:28        add ( temp 4-component vector of float)
0:28          pos: direct index for structure ( temp 4-component vector of float)
0:28            direct index ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:28              'i' ( const (read only) 3-element array of structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:28              Constant:
0:28                0 (const int)
0:28            Constant:
0:28              0 (const int)
0:28          direct index ( temp float)
0:28            'tesscoord' ( in 3-component vector of float)
0:28            Constant:
0:28              0 (const int)
0:29      move second child to first child ( temp 3-component vector of float)
0:29        norm: direct index for structure ( temp 3-component vector of float)
0:29          'o' ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:29          Constant:
0:29            1 (const int)
0:29        add ( temp 3-component vector of float)
0:29          norm: direct index for structure ( temp 3-component vector of float)
0:29            direct index ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:29              'i' ( const (read only) 3-element array of structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:29              Constant:
0:29                0 (const int)
0:29            Constant:
0:29              1 (const int)
0:29          direct index ( temp float)
0:29            'tesscoord' ( in 3-component vector of float)
0:29            Constant:
0:29              1 (const int)
0:31      direct index ( temp float)
0:31        'tesscoord' ( in 3-component vector of float)
0:31        Constant:
0:31          2 (const int)
0:33      Branch: Return with expression
0:33        'o' ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25  Function Definition: main( ( temp void)
0:25    Function Parameters: 
0:?     Sequence
0:25      Sequence
0:25        move second child to first child ( temp float)
0:25          direct index ( temp float)
0:25            flTessFactor: direct index for structure ( temp 3-element array of float)
0:?               'pcf_data' ( temp structure{ temp 3-element array of float flTessFactor,  temp float flInsideTessFactor,  temp float foo})
0:25              Constant:
0:25                0 (const int)
0:25            Constant:
0:25              0 (const int)
0:25          direct index ( patch in float TessLevelOuter)
0:?             'pcf_data.flTessFactor' ( patch in 4-element array of float TessLevelOuter)
0:25            Constant:
0:25              0 (const int)
0:25        move second child to first child ( temp float)
0:25          direct index ( temp float)
0:25            flTessFactor: direct index for structure ( temp 3-element array of float)
0:?               'pcf_data' ( temp structure{ temp 3-element array of float flTessFactor,  temp float flInsideTessFactor,  temp float foo})
0:25              Constant:
0:25                0 (const int)
0:25            Constant:
0:25              1 (const int)
0:25          direct index ( patch in float TessLevelOuter)
0:?             'pcf_data.flTessFactor' ( patch in 4-element array of float TessLevelOuter)
0:25            Constant:
0:25              1 (const int)
0:25        move second child to first child ( temp float)
0:25          direct index ( temp float)
0:25            flTessFactor: direct index for structure ( temp 3-element array of float)
0:?               'pcf_data' ( temp structure{ temp 3-element array of float flTessFactor,  temp float flInsideTessFactor,  temp float foo})
0:25              Constant:
0:25                0 (const int)
0:25            Constant:
0:25              2 (const int)
0:25          direct index ( patch in float TessLevelOuter)
0:?             'pcf_data.flTessFactor' ( patch in 4-element array of float TessLevelOuter)
0:25            Constant:
0:25              2 (const int)
0:25        move second child to first child ( temp float)
0:25          flInsideTessFactor: direct index for structure ( temp float)
0:?             'pcf_data' ( temp structure{ temp 3-element array of float flTessFactor,  temp float flInsideTessFactor,  temp float foo})
0:25            Constant:
0:25              1 (const int)
0:25          direct index ( patch in float TessLevelInner)
0:?             'pcf_data.flInsideTessFactor' ( patch in 2-element array of float TessLevelInner)
0:25            Constant:
0:25              0 (const int)
0:25        move second child to first child ( temp float)
0:25          foo: direct index for structure ( temp float)
0:?             'pcf_data' ( temp structure{ temp 3-element array of float flTessFactor,  temp float flInsideTessFactor,  temp float foo})
0:25            Constant:
0:25              2 (const int)
0:?           'pcf_data.foo' (layout( location=2) patch in float)
0:25      Sequence
0:25        move second child to first child ( temp 4-component vector of float)
0:25          pos: direct index for structure ( temp 4-component vector of float)
0:25            direct index ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:?               'i' ( temp 3-element array of structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25              Constant:
0:25                0 (const int)
0:25            Constant:
0:25              0 (const int)
0:25          direct index (layout( location=0) in 4-component vector of float)
0:?             'i.pos' (layout( location=0) in 3-element array of 4-component vector of float)
0:25            Constant:
0:25              0 (const int)
0:25        move second child to first child ( temp 3-component vector of float)
0:25          norm: direct index for structure ( temp 3-component vector of float)
0:25            direct index ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:?               'i' ( temp 3-element array of structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25              Constant:
0:25                0 (const int)
0:25            Constant:
0:25              1 (const int)
0:25          direct index (layout( location=1) in 3-component vector of float)
0:?             'i.norm' (layout( location=1) in 3-element array of 3-component vector of float)
0:25            Constant:
0:25              0 (const int)
0:25        move second child to first child ( temp 4-component vector of float)
0:25          pos: direct index for structure ( temp 4-component vector of float)
0:25            direct index ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:?               'i' ( temp 3-element array of structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25              Constant:
0:25                1 (const int)
0:25            Constant:
0:25              0 (const int)
0:25          direct index (layout( location=0) in 4-component vector of float)
0:?             'i.pos' (layout( location=0) in 3-element array of 4-component vector of float)
0:25            Constant:
0:25              1 (const int)
0:25        move second child to first child ( temp 3-component vector of float)
0:25          norm: direct index for structure ( temp 3-component vector of float)
0:25            direct index ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:?               'i' ( temp 3-element array of structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25              Constant:
0:25                1 (const int)
0:25            Constant:
0:25              1 (const int)
0:25          direct index (layout( location=1) in 3-component vector of float)
0:?             'i.norm' (layout( location=1) in 3-element array of 3-component vector of float)
0:25            Constant:
0:25              1 (const int)
0:25        move second child to first child ( temp 4-component vector of float)
0:25          pos: direct index for structure ( temp 4-component vector of float)
0:25            direct index ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:?               'i' ( temp 3-element array of structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25              Constant:
0:25                2 (const int)
0:25            Constant:
0:25              0 (const int)
0:25          direct index (layout( location=0) in 4-component vector of float)
0:?             'i.pos' (layout( location=0) in 3-element array of 4-component vector of float)
0:25            Constant:
0:25              2 (const int)
0:25        move second child to first child ( temp 3-component vector of float)
0:25          norm: direct index for structure ( temp 3-component vector of float)
0:25            direct index ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:?               'i' ( temp 3-element array of structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25              Constant:
0:25                2 (const int)
0:25            Constant:
0:25              1 (const int)
0:25          direct index (layout( location=1) in 3-component vector of float)
0:?             'i.norm' (layout( location=1) in 3-element array of 3-component vector of float)
0:25            Constant:
0:25              2 (const int)
0:25      move second child to first child ( temp 3-component vector of float)
0:?         'tesscoord' ( temp 3-component vector of float)
0:?         'tesscoord' ( patch in 3-component vector of float TessCoord)
0:25      Sequence
0:25        move second child to first child ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25          'flattenTemp' ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25          Function Call: @main(struct-pcf_in_t-f1[3]-f1-f11;struct-ds_in_t-vf4-vf31[3];vf3; ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:?             'pcf_data' ( temp structure{ temp 3-element array of float flTessFactor,  temp float flInsideTessFactor,  temp float foo})
0:?             'i' ( temp 3-element array of structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:?             'tesscoord' ( temp 3-component vector of float)
0:25        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.pos' (layout( location=0) out 4-component vector of float)
0:25          pos: direct index for structure ( temp 4-component vector of float)
0:25            'flattenTemp' ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25            Constant:
0:25              0 (const int)
0:25        move second child to first child ( temp 3-component vector of float)
0:?           '@entryPointOutput.norm' (layout( location=1) out 3-component vector of float)
0:25          norm: direct index for structure ( temp 3-component vector of float)
0:25            'flattenTemp' ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25            Constant:
0:25              1 (const int)
0:?   Linker Objects
0:?     '@entryPointOutput.pos' (layout( location=0) out 4-component vector of float)
0:?     '@entryPointOutput.norm' (layout( location=1) out 3-component vector of float)
0:?     'i.pos' (layout( location=0) in 3-element array of 4-component vector of float)
0:?     'i.norm' (layout( location=1) in 3-element array of 3-component vector of float)
0:?     'tesscoord' ( patch in 3-component vector of float TessCoord)
0:?     'pcf_data.flTessFactor' ( patch in 4-element array of float TessLevelOuter)
0:?     'pcf_data.flInsideTessFactor' ( patch in 2-element array of float TessLevelInner)
0:?     'pcf_data.foo' (layout( location=2) patch in float)


Linked tessellation evaluation stage:


Shader version: 500
input primitive = triangles
vertex spacing = none
triangle order = none
0:? Sequence
0:25  Function Definition: @main(struct-pcf_in_t-f1[3]-f1-f11;struct-ds_in_t-vf4-vf31[3];vf3; ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25    Function Parameters: 
0:25      'pcf_data' ( in structure{ temp 3-element array of float flTessFactor,  temp float flInsideTessFactor,  temp float foo})
0:25      'i' ( const (read only) 3-element array of structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25      'tesscoord' ( in 3-component vector of float)
0:?     Sequence
0:28      move second child to first child ( temp 4-component vector of float)
0:28        pos: direct index for structure ( temp 4-component vector of float)
0:28          'o' ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:28          Constant:
0:28            0 (const int)
0:28        add ( temp 4-component vector of float)
0:28          pos: direct index for structure ( temp 4-component vector of float)
0:28            direct index ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:28              'i' ( const (read only) 3-element array of structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:28              Constant:
0:28                0 (const int)
0:28            Constant:
0:28              0 (const int)
0:28          direct index ( temp float)
0:28            'tesscoord' ( in 3-component vector of float)
0:28            Constant:
0:28              0 (const int)
0:29      move second child to first child ( temp 3-component vector of float)
0:29        norm: direct index for structure ( temp 3-component vector of float)
0:29          'o' ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:29          Constant:
0:29            1 (const int)
0:29        add ( temp 3-component vector of float)
0:29          norm: direct index for structure ( temp 3-component vector of float)
0:29            direct index ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:29              'i' ( const (read only) 3-element array of structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:29              Constant:
0:29                0 (const int)
0:29            Constant:
0:29              1 (const int)
0:29          direct index ( temp float)
0:29            'tesscoord' ( in 3-component vector of float)
0:29            Constant:
0:29              1 (const int)
0:31      direct index ( temp float)
0:31        'tesscoord' ( in 3-component vector of float)
0:31        Constant:
0:31          2 (const int)
0:33      Branch: Return with expression
0:33        'o' ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25  Function Definition: main( ( temp void)
0:25    Function Parameters: 
0:?     Sequence
0:25      Sequence
0:25        move second child to first child ( temp float)
0:25          direct index ( temp float)
0:25            flTessFactor: direct index for structure ( temp 3-element array of float)
0:?               'pcf_data' ( temp structure{ temp 3-element array of float flTessFactor,  temp float flInsideTessFactor,  temp float foo})
0:25              Constant:
0:25                0 (const int)
0:25            Constant:
0:25              0 (const int)
0:25          direct index ( patch in float TessLevelOuter)
0:?             'pcf_data.flTessFactor' ( patch in 4-element array of float TessLevelOuter)
0:25            Constant:
0:25              0 (const int)
0:25        move second child to first child ( temp float)
0:25          direct index ( temp float)
0:25            flTessFactor: direct index for structure ( temp 3-element array of float)
0:?               'pcf_data' ( temp structure{ temp 3-element array of float flTessFactor,  temp float flInsideTessFactor,  temp float foo})
0:25              Constant:
0:25                0 (const int)
0:25            Constant:
0:25              1 (const int)
0:25          direct index ( patch in float TessLevelOuter)
0:?             'pcf_data.flTessFactor' ( patch in 4-element array of float TessLevelOuter)
0:25            Constant:
0:25              1 (const int)
0:25        move second child to first child ( temp float)
0:25          direct index ( temp float)
0:25            flTessFactor: direct index for structure ( temp 3-element array of float)
0:?               'pcf_data' ( temp structure{ temp 3-element array of float flTessFactor,  temp float flInsideTessFactor,  temp float foo})
0:25              Constant:
0:25                0 (const int)
0:25            Constant:
0:25              2 (const int)
0:25          direct index ( patch in float TessLevelOuter)
0:?             'pcf_data.flTessFactor' ( patch in 4-element array of float TessLevelOuter)
0:25            Constant:
0:25              2 (const int)
0:25        move second child to first child ( temp float)
0:25          flInsideTessFactor: direct index for structure ( temp float)
0:?             'pcf_data' ( temp structure{ temp 3-element array of float flTessFactor,  temp float flInsideTessFactor,  temp float foo})
0:25            Constant:
0:25              1 (const int)
0:25          direct index ( patch in float TessLevelInner)
0:?             'pcf_data.flInsideTessFactor' ( patch in 2-element array of float TessLevelInner)
0:25            Constant:
0:25              0 (const int)
0:25        move second child to first child ( temp float)
0:25          foo: direct index for structure ( temp float)
0:?             'pcf_data' ( temp structure{ temp 3-element array of float flTessFactor,  temp float flInsideTessFactor,  temp float foo})
0:25            Constant:
0:25              2 (const int)
0:?           'pcf_data.foo' (layout( location=2) patch in float)
0:25      Sequence
0:25        move second child to first child ( temp 4-component vector of float)
0:25          pos: direct index for structure ( temp 4-component vector of float)
0:25            direct index ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:?               'i' ( temp 3-element array of structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25              Constant:
0:25                0 (const int)
0:25            Constant:
0:25              0 (const int)
0:25          direct index (layout( location=0) in 4-component vector of float)
0:?             'i.pos' (layout( location=0) in 3-element array of 4-component vector of float)
0:25            Constant:
0:25              0 (const int)
0:25        move second child to first child ( temp 3-component vector of float)
0:25          norm: direct index for structure ( temp 3-component vector of float)
0:25            direct index ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:?               'i' ( temp 3-element array of structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25              Constant:
0:25                0 (const int)
0:25            Constant:
0:25              1 (const int)
0:25          direct index (layout( location=1) in 3-component vector of float)
0:?             'i.norm' (layout( location=1) in 3-element array of 3-component vector of float)
0:25            Constant:
0:25              0 (const int)
0:25        move second child to first child ( temp 4-component vector of float)
0:25          pos: direct index for structure ( temp 4-component vector of float)
0:25            direct index ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:?               'i' ( temp 3-element array of structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25              Constant:
0:25                1 (const int)
0:25            Constant:
0:25              0 (const int)
0:25          direct index (layout( location=0) in 4-component vector of float)
0:?             'i.pos' (layout( location=0) in 3-element array of 4-component vector of float)
0:25            Constant:
0:25              1 (const int)
0:25        move second child to first child ( temp 3-component vector of float)
0:25          norm: direct index for structure ( temp 3-component vector of float)
0:25            direct index ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:?               'i' ( temp 3-element array of structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25              Constant:
0:25                1 (const int)
0:25            Constant:
0:25              1 (const int)
0:25          direct index (layout( location=1) in 3-component vector of float)
0:?             'i.norm' (layout( location=1) in 3-element array of 3-component vector of float)
0:25            Constant:
0:25              1 (const int)
0:25        move second child to first child ( temp 4-component vector of float)
0:25          pos: direct index for structure ( temp 4-component vector of float)
0:25            direct index ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:?               'i' ( temp 3-element array of structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25              Constant:
0:25                2 (const int)
0:25            Constant:
0:25              0 (const int)
0:25          direct index (layout( location=0) in 4-component vector of float)
0:?             'i.pos' (layout( location=0) in 3-element array of 4-component vector of float)
0:25            Constant:
0:25              2 (const int)
0:25        move second child to first child ( temp 3-component vector of float)
0:25          norm: direct index for structure ( temp 3-component vector of float)
0:25            direct index ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:?               'i' ( temp 3-element array of structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25              Constant:
0:25                2 (const int)
0:25            Constant:
0:25              1 (const int)
0:25          direct index (layout( location=1) in 3-component vector of float)
0:?             'i.norm' (layout( location=1) in 3-element array of 3-component vector of float)
0:25            Constant:
0:25              2 (const int)
0:25      move second child to first child ( temp 3-component vector of float)
0:?         'tesscoord' ( temp 3-component vector of float)
0:?         'tesscoord' ( patch in 3-component vector of float TessCoord)
0:25      Sequence
0:25        move second child to first child ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25          'flattenTemp' ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25          Function Call: @main(struct-pcf_in_t-f1[3]-f1-f11;struct-ds_in_t-vf4-vf31[3];vf3; ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:?             'pcf_data' ( temp structure{ temp 3-element array of float flTessFactor,  temp float flInsideTessFactor,  temp float foo})
0:?             'i' ( temp 3-element array of structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:?             'tesscoord' ( temp 3-component vector of float)
0:25        move second child to first child ( temp 4-component vector of float)
0:?           '@entryPointOutput.pos' (layout( location=0) out 4-component vector of float)
0:25          pos: direct index for structure ( temp 4-component vector of float)
0:25            'flattenTemp' ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25            Constant:
0:25              0 (const int)
0:25        move second child to first child ( temp 3-component vector of float)
0:?           '@entryPointOutput.norm' (layout( location=1) out 3-component vector of float)
0:25          norm: direct index for structure ( temp 3-component vector of float)
0:25            'flattenTemp' ( temp structure{ temp 4-component vector of float pos,  temp 3-component vector of float norm})
0:25            Constant:
0:25              1 (const int)
0:?   Linker Objects
0:?     '@entryPointOutput.pos' (layout( location=0) out 4-component vector of float)
0:?     '@entryPointOutput.norm' (layout( location=1) out 3-component vector of float)
0:?     'i.pos' (layout( location=0) in 3-element array of 4-component vector of float)
0:?     'i.norm' (layout( location=1) in 3-element array of 3-component vector of float)
0:?     'tesscoord' ( patch in 3-component vector of float TessCoord)
0:?     'pcf_data.flTessFactor' ( patch in 4-element array of float TessLevelOuter)
0:?     'pcf_data.flInsideTessFactor' ( patch in 2-element array of float TessLevelInner)
0:?     'pcf_data.foo' (layout( location=2) patch in float)

// Module Version 10000
// Generated by (magic number): 8000b
// Id's are bound by 120

                              Capability Tessellation
            11_1:             ExtInstImport  "GLSL.std.450"
                              MemoryModel Logical GLSL450
                              EntryPoint TessellationEvaluation 54_1  "main" 59_1 59_2 59_3 59_4 59_5 59_6 59_7 59_8
                              ExecutionMode 54_1 Triangles
                              Source HLSL 500
                              Name 54_1  "main"
                              Name 30_1  "pcf_in_t"
                              MemberName 30_1(pcf_in_t) 0  "flTessFactor"
                              MemberName 30_1(pcf_in_t) 1  "flInsideTessFactor"
                              MemberName 30_1(pcf_in_t) 2  "foo"
                              Name 30_2  "ds_in_t"
                              MemberName 30_2(ds_in_t) 0  "pos"
                              MemberName 30_2(ds_in_t) 1  "norm"
                              Name 30_3  "gs_in_t"
                              MemberName 30_3(gs_in_t) 0  "pos"
                              MemberName 30_3(gs_in_t) 1  "norm"
                              Name 54_2  "@main(struct-pcf_in_t-f1[3]-f1-f11;struct-ds_in_t-vf4-vf31[3];vf3;"
                              Name 55_1  "pcf_data"
                              Name 55_2  "i"
                              Name 55_3  "tesscoord"
                              Name 59_15  "o"
                              Name 59_9  "pcf_data"
                              Name 59_1  "pcf_data.flTessFactor"
                              Name 59_2  "pcf_data.flInsideTessFactor"
                              Name 59_3  "pcf_data.foo"
                              Name 59_10  "i"
                              Name 59_4  "i.pos"
                              Name 59_5  "i.norm"
                              Name 59_11  "tesscoord"
                              Name 59_6  "tesscoord"
                              Name 59_12  "flattenTemp"
                              Name 59_13  "param"
                              Name 59_14  "param"
                              Name 59_7  "@entryPointOutput.pos"
                              Name 59_8  "@entryPointOutput.norm"
                              Decorate 59_1(pcf_data.flTessFactor) BuiltIn TessLevelOuter
                              Decorate 59_1(pcf_data.flTessFactor) Patch
                              Decorate 59_2(pcf_data.flInsideTessFactor) BuiltIn TessLevelInner
                              Decorate 59_2(pcf_data.flInsideTessFactor) Patch
                              Decorate 59_3(pcf_data.foo) Patch
                              Decorate 59_3(pcf_data.foo) Location 2
                              Decorate 59_4(i.pos) Location 0
                              Decorate 59_5(i.norm) Location 1
                              Decorate 59_6(tesscoord) BuiltIn TessCoord
                              Decorate 59_6(tesscoord) Patch
                              Decorate 59_7(@entryPointOutput.pos) Location 0
                              Decorate 59_8(@entryPointOutput.norm) Location 1
            19_1:             TypeVoid
            33_1:             TypeFunction 19_1
            22_1:             TypeFloat 32
            21_1:             TypeInt 32 0
         uint(3):   21_1(int) Constant 3
            28_1:             TypeArray 22_1(float) uint(3)
  30_1(pcf_in_t):             TypeStruct 28_1 22_1(float) 22_1(float)
            32_1:             TypePointer Function 30_1(pcf_in_t)
            23_1:             TypeVector 22_1(float) 4
            23_2:             TypeVector 22_1(float) 3
   30_2(ds_in_t):             TypeStruct 23_1(fvec4) 23_2(fvec3)
            28_2:             TypeArray 30_2(ds_in_t) uint(3)
            32_2:             TypePointer Function 23_2(fvec3)
   30_3(gs_in_t):             TypeStruct 23_1(fvec4) 23_2(fvec3)
            33_2:             TypeFunction 30_3(gs_in_t) 32_1(ptr) 28_2 32_2(ptr)
            32_3:             TypePointer Function 30_3(gs_in_t)
            21_2:             TypeInt 32 1
            43_1:   21_2(int) Constant 0
         uint(0):   21_1(int) Constant 0
            32_4:             TypePointer Function 22_1(float)
            32_5:             TypePointer Function 23_1(fvec4)
            43_2:   21_2(int) Constant 1
         uint(1):   21_1(int) Constant 1
         uint(4):   21_1(int) Constant 4
            28_3:             TypeArray 22_1(float) uint(4)
            32_6:             TypePointer Input 28_3
59_1(pcf_data.flTessFactor):   32_6(ptr) Variable Input
            32_7:             TypePointer Input 22_1(float)
            43_3:   21_2(int) Constant 2
         uint(2):   21_1(int) Constant 2
            28_4:             TypeArray 22_1(float) uint(2)
            32_8:             TypePointer Input 28_4
59_2(pcf_data.flInsideTessFactor):   32_8(ptr) Variable Input
59_3(pcf_data.foo):   32_7(ptr) Variable Input
            32_9:             TypePointer Function 28_2
            28_5:             TypeArray 23_1(fvec4) uint(3)
           32_10:             TypePointer Input 28_5
     59_4(i.pos):  32_10(ptr) Variable Input
           32_11:             TypePointer Input 23_1(fvec4)
            28_6:             TypeArray 23_2(fvec3) uint(3)
           32_12:             TypePointer Input 28_6
    59_5(i.norm):  32_12(ptr) Variable Input
           32_13:             TypePointer Input 23_2(fvec3)
 59_6(tesscoord):  32_13(ptr) Variable Input
           32_14:             TypePointer Output 23_1(fvec4)
59_7(@entryPointOutput.pos):  32_14(ptr) Variable Output
           32_15:             TypePointer Output 23_2(fvec3)
59_8(@entryPointOutput.norm):  32_15(ptr) Variable Output
      54_1(main):        19_1 Function None 33_1
           248_1:             Label
  59_9(pcf_data):   32_1(ptr) Variable Function
        59_10(i):   32_9(ptr) Variable Function
59_11(tesscoord):   32_2(ptr) Variable Function
59_12(flattenTemp):   32_3(ptr) Variable Function
    59_13(param):   32_1(ptr) Variable Function
    59_14(param):   32_2(ptr) Variable Function
            65_1:   32_7(ptr) AccessChain 59_1(pcf_data.flTessFactor) 43_1
            61_1: 22_1(float) Load 65_1
            65_2:   32_4(ptr) AccessChain 59_9(pcf_data) 43_1 43_1
                              Store 65_2 61_1
            65_3:   32_7(ptr) AccessChain 59_1(pcf_data.flTessFactor) 43_2
            61_2: 22_1(float) Load 65_3
            65_4:   32_4(ptr) AccessChain 59_9(pcf_data) 43_1 43_2
                              Store 65_4 61_2
            65_5:   32_7(ptr) AccessChain 59_1(pcf_data.flTessFactor) 43_3
            61_3: 22_1(float) Load 65_5
            65_6:   32_4(ptr) AccessChain 59_9(pcf_data) 43_1 43_3
                              Store 65_6 61_3
            65_7:   32_7(ptr) AccessChain 59_2(pcf_data.flInsideTessFactor) 43_1
            61_4: 22_1(float) Load 65_7
            65_8:   32_4(ptr) AccessChain 59_9(pcf_data) 43_2
                              Store 65_8 61_4
            61_5: 22_1(float) Load 59_3(pcf_data.foo)
            65_9:   32_4(ptr) AccessChain 59_9(pcf_data) 43_3
                              Store 65_9 61_5
           65_10:  32_11(ptr) AccessChain 59_4(i.pos) 43_1
            61_6: 23_1(fvec4) Load 65_10
           65_11:   32_5(ptr) AccessChain 59_10(i) 43_1 43_1
                              Store 65_11 61_6
           65_12:  32_13(ptr) AccessChain 59_5(i.norm) 43_1
            61_7: 23_2(fvec3) Load 65_12
           65_13:   32_2(ptr) AccessChain 59_10(i) 43_1 43_2
                              Store 65_13 61_7
           65_14:  32_11(ptr) AccessChain 59_4(i.pos) 43_2
            61_8: 23_1(fvec4) Load 65_14
           65_15:   32_5(ptr) AccessChain 59_10(i) 43_2 43_1
                              Store 65_15 61_8
           65_16:  32_13(ptr) AccessChain 59_5(i.norm) 43_2
            61_9: 23_2(fvec3) Load 65_16
           65_17:   32_2(ptr) AccessChain 59_10(i) 43_2 43_2
                              Store 65_17 61_9
           65_18:  32_11(ptr) AccessChain 59_4(i.pos) 43_3
           61_10: 23_1(fvec4) Load 65_18
           65_19:   32_5(ptr) AccessChain 59_10(i) 43_3 43_1
                              Store 65_19 61_10
           65_20:  32_13(ptr) AccessChain 59_5(i.norm) 43_3
           61_11: 23_2(fvec3) Load 65_20
           65_21:   32_2(ptr) AccessChain 59_10(i) 43_3 43_2
                              Store 65_21 61_11
           61_12: 23_2(fvec3) Load 59_6(tesscoord)
                              Store 59_11(tesscoord) 61_12
           61_13:        28_2 Load 59_10(i)
           61_14:30_1(pcf_in_t) Load 59_9(pcf_data)
                              Store 59_13(param) 61_14
           61_15: 23_2(fvec3) Load 59_11(tesscoord)
                              Store 59_14(param) 61_15
            57_1:30_3(gs_in_t) FunctionCall 54_2(@main(struct-pcf_in_t-f1[3]-f1-f11;struct-ds_in_t-vf4-vf31[3];vf3;) 59_13(param) 61_13 59_14(param)
                              Store 59_12(flattenTemp) 57_1
           65_22:   32_5(ptr) AccessChain 59_12(flattenTemp) 43_1
           61_16: 23_1(fvec4) Load 65_22
                              Store 59_7(@entryPointOutput.pos) 61_16
           65_23:   32_2(ptr) AccessChain 59_12(flattenTemp) 43_2
           61_17: 23_2(fvec3) Load 65_23
                              Store 59_8(@entryPointOutput.norm) 61_17
                              Return
                              FunctionEnd
54_2(@main(struct-pcf_in_t-f1[3]-f1-f11;struct-ds_in_t-vf4-vf31[3];vf3;):30_3(gs_in_t) Function None 33_2
  55_1(pcf_data):   32_1(ptr) FunctionParameter
         55_2(i):        28_2 FunctionParameter
 55_3(tesscoord):   32_2(ptr) FunctionParameter
           248_2:             Label
        59_15(o):   32_3(ptr) Variable Function
            81_1: 23_1(fvec4) CompositeExtract 55_2(i) 0 0
           65_24:   32_4(ptr) AccessChain 55_3(tesscoord) uint(0)
           61_18: 22_1(float) Load 65_24
            80_1: 23_1(fvec4) CompositeConstruct 61_18 61_18 61_18 61_18
           129_1: 23_1(fvec4) FAdd 81_1 80_1
           65_25:   32_5(ptr) AccessChain 59_15(o) 43_1
                              Store 65_25 129_1
            81_2: 23_2(fvec3) CompositeExtract 55_2(i) 0 1
           65_26:   32_4(ptr) AccessChain 55_3(tesscoord) uint(1)
           61_19: 22_1(float) Load 65_26
            80_2: 23_2(fvec3) CompositeConstruct 61_19 61_19 61_19
           129_2: 23_2(fvec3) FAdd 81_2 80_2
           65_27:   32_2(ptr) AccessChain 59_15(o) 43_2
                              Store 65_27 129_2
           61_20:30_3(gs_in_t) Load 59_15(o)
                              ReturnValue 61_20
                              FunctionEnd
